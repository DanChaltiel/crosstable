[{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-install.html","id":"normal-installation","dir":"Articles","previous_headings":"","what":"Normal installation","title":"Installation troubleshooting","text":"Normal installation goes like : none solutions described worked, please create Issue error message maximum information.","code":"install.packages(\"crosstable\")"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-install.html","id":"github-installation","dir":"Articles","previous_headings":"","what":"Github installation","title":"Installation troubleshooting","text":"normal installation work, can try installing Github:","code":"#install.packages(\"devtools\", \"pak\") devtools::install_github(\"DanChaltiel/crosstable\", build_vignettes=TRUE) #or, alternatively pak::pkg_install(\"DanChaltiel/crosstable\")"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-install.html","id":"asking-for-updates","dir":"Articles","previous_headings":"","what":"Asking for updates","title":"Installation troubleshooting","text":"code probably ask updates: packages recent versions available. recommended update . like update?  1:                                 2: CRAN packages                  3: None                                4: vctrs       (0.3.0 -> 0.3.1) [CRAN] 5: systemfonts (0.2.2 -> 0.2.3) [CRAN] good idea update packages frequently, update routine might fail. fail, try choose 3: None install crosstable without updating dependencies. package still work, can try installing/updating dependencies manually. First, install/update dplyr, flextable, rlang newer versions mandatory: , still failing, can try installing dependencies:","code":"These packages have more recent versions available. It is recommended to update all of them. Which would you like to update?  1: All                                 2: CRAN packages only                  3: None                                4: vctrs       (0.3.0 -> 0.3.1) [CRAN] 5: systemfonts (0.2.2 -> 0.2.3) [CRAN] install.packages(\"dplyr\") install.packages(\"flextable\") install.packages(\"rlang\") install.packages(\"checkmate\") install.packages(\"purrr\") install.packages(\"tidyselect\") install.packages(\"survival\") install.packages(\"tidyr\") install.packages(\"glue\") install.packages(\"ellipsis\") install.packages(\"officer\") install.packages(\"stringr\") install.packages(\"tibble\") install.packages(\"nortest\") install.packages(\"lifecycle\")"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-install.html","id":"asking-for-source-compilation","dir":"Articles","previous_headings":"","what":"Asking for source compilation","title":"Installation troubleshooting","text":"installer asks: want install sources package needs compilation? (Yes//cancel) Try first “”, “yes” fails.","code":""},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-install.html","id":"on-mac","dir":"Articles","previous_headings":"","what":"On Mac","title":"Installation troubleshooting","text":"error can happen Mac. clue correct . experience , please create Issue actual error message result sessionInfo(). ERROR: configuration failed package 'systemfonts' * removing '/Library/Frameworks/R.framework/Versions/3.6/Resources/library/systemfonts' * restoring previous '/Library/Frameworks/R.framework/Versions/3.6/Resources/library/systemfonts' Error: Failed install 'crosstable' GitHub: (converted warning) installation package 'systemfonts' non-zero exit status","code":"ERROR: configuration failed for package 'systemfonts' * removing '/Library/Frameworks/R.framework/Versions/3.6/Resources/library/systemfonts' * restoring previous '/Library/Frameworks/R.framework/Versions/3.6/Resources/library/systemfonts' Error: Failed to install 'crosstable' from GitHub: (converted from warning) installation of package 'systemfonts' had non-zero exit status"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-report.html","id":"create-reports-with-officer","dir":"Articles","previous_headings":"","what":"Create reports with officer","title":"Make automatic reports","text":"real power crosstable comes used David Gohel’s awesome package officer, allows automatically create MS Word documents. instance, let’s try create document like : can also download example .","code":""},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-report.html","id":"code","dir":"Articles","previous_headings":"Create reports with officer","what":"Code","title":"Make automatic reports","text":"code produce example . First, create 3 crosstables using available datasets, along ggplot. , start document (using officer::read_docx()), add titles paragraphs, incorporate tables plot, along legends, add page breaks. Note legends bookmark argument can referred text automatic numbering. demonstration purposes, tried cover many features possible, contains multiple syntaxes result. course, use whatever syntax comfortable . can find useful functions references.","code":"library(officer) library(ggplot2)  ct1=crosstable(iris, by=Species, test=TRUE) ct2=crosstable(mtcars2, c(mpg,cyl,disp), by=am, effect=TRUE,                 total=\"both\", showNA=\"always\") ct3=crosstable(esoph) crosstable_options(   crosstable_fontsize_body=8,   crosstable_padding_v=0,   crosstable_units=\"cm\" ) my_plot = ggplot(data = iris ) +   geom_point(mapping = aes(Sepal.Length, Petal.Length))  doc = read_docx() %>% #default template   body_add_title(\"Dataset iris (nrow={nrow(iris)})\", 1) %>%   body_add_title(\"Not compacted\", 2) %>%   body_add_normal(\"Table \\\\@ref(table_autotest) is an example. However, automatic                    testing is bad and I should feel bad.\") %>%   body_add_crosstable(ct1) %>%   body_add_table_legend(\"Automatic testing is bad\", bookmark=\"table_autotest\") %>%   body_add_normal(\"Let's add a figure as well. You can see in Figure \\\\@ref(fig_iris)                    that sepal length is somehow correlated with petal length.\") %>%   body_add_figure_legend(\"Relation between Petal length and Sepal length\",                           bookmark=\"fig_iris\") %>%    body_add_gg2(my_plot, w=14, h=10, scale=1.5) %>%    body_add_break() %>%      body_add_title(\"Compacted\", 2) %>%   body_add_normal(\"When compacting, you might want to remove the test names.\") %>%   body_add_crosstable(ct1, compact=TRUE, show_test_name=FALSE) %>%   body_add_break() %>%      body_add_title(\"Dataset mtcars2\", 1) %>%   body_add_normal(\"This dataset has {nrow(ct3)} rows and {x} columns.\",                    x=ncol(ct3)) %>%   body_add_normal(\"Look, there are labels!\") %>%   body_add_crosstable(ct2, compact=TRUE)"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-report.html","id":"output","dir":"Articles","previous_headings":"Create reports with officer","what":"Output","title":"Make automatic reports","text":"see resulting Word document, use: still working code, might want omit name open docx file temporary file quick peek (write_and_open(doc)). prevent errors happen file already open. can also use print(doc, \"vignette_officer.docx\") don’t want file open right away.","code":"write_and_open(doc, \"vignette_officer.docx\")"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-report.html","id":"functions","dir":"Articles","previous_headings":"Create reports with officer","what":"Functions","title":"Make automatic reports","text":"brief description functions used example: officer::read_docx(): creates bare MS Word document body_add_title(): adds title paragraph level body_add_normal(): adds normal style paragraph. can also incorporate variables using syntax {nrow(ct3)} references using syntax \\\\@ref(my_bookmark). body_add_crosstable(): adds crosstable body_add_figure_legend() body_add_table_legend(): adds figure/table legend. bookmark key can added elsewhere body_add_normal(). body_add_gg2(): adds ggplot. Unlike officer::body_add_gg(), can change unit using units argument options options(crosstable_units=\"cm\"). Browse https://davidgohel.github.io/officer/ insight can use officer.","code":""},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-report.html","id":"autofit-macro-for-large-tables","dir":"Articles","previous_headings":"Create reports with officer","what":"Autofit macro for large tables","title":"Make automatic reports","text":"great, large tables unfortunately overflow document. (known) limitation fixed using R. use MS Word autofit tools table one one (Table Tools > Layout > AutoFit > AutoFit Window), can really tedious. fear ! can use MS Word macro job . : R console, run generate_autofit_macro() generate file crosstable_autofit.bas working directory. MS Word, press Alt+F11 open VB Editor. Editor, go File > Import press Ctrl+M open import dialog, import crosstable_autofit.bas. now “CrosstableMacros” module “Normal” project. Run macro, either VB Editor View > Macros > View Macros > Run. process make macro accessible Word file computer. Note , Editor, can also drag module document project make macro accessible file. file named docm extension though.","code":""},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-report.html","id":"styles","dir":"Articles","previous_headings":"Create reports with officer","what":"Styles","title":"Make automatic reports","text":"Crosstables uses Word styles operate full power . , used default template officer::read_docx() comes default styles. custom template, can edit styles (instance can make “Normal” bold font size 8) add . best example body_add_list(), supposed add bullet list. Unfortunately, default template come list styles add one custom template using : See ?crosstable_options list styles can specify globally use officer::styles_info(doc) see one available template. Note might sometimes encounter error “Error: match style named ‘xxx’” careful.","code":"doc = read_docx(\"my_template.docx) %>% #your custom template   body_add_list(c(\"this is item 1\", \"this is item 2\"), style=\"bullet\")  #alternatively, you can define the style globally and use the ordered parameter options(crosstable_style_list_unordered=\"bullet\") options(crosstable_style_list_ordered=\"numbered\") doc = read_docx(\"my_template.docx) %>%   body_add_list(c(\"this is item 1\", \"this is item 2\"), ordered=FALSE)"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-report.html","id":"post-production-for-tablefigure-legends","dir":"Articles","previous_headings":"Create reports with officer","what":"Post-production for table/figure legends","title":"Make automatic reports","text":"Depending version officer, Word ask update fields opening document, MS Word might ask “update fields”, answer “Yes”. ask answer “”, legends added body_add_table_legend() body_add_figure_legend() might actual numbers displayed. case, manually update references inside MS Word: select (+), update (), sometimes twice. might even need several times. See ?body_add_legend insight. aware unfortunately reference bookmark using method. Writing: body_add_normal(\"Table \\\\@ref(iris_col1) flowers. like Table \\\\@ref(iris_col1).\") prevent numbering applying.","code":""},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-report.html","id":"create-reports-with-rmarkdown","dir":"Articles","previous_headings":"","what":"Create reports with Rmarkdown","title":"Make automatic reports","text":"Knitting (knitr::knit() via RStudio) Rmd code also creates MS-Word file. , can use power bookdown generate automatic numbering tables. can example files : vignette_markdown.Rmd vignette_markdown.docx. admit don’t use Rmarkdown lot crosstable, feature might maintained others.","code":"--- title: \"Iris\" output: bookdown::word_document2 ---      ```{r setup, include=FALSE} library(crosstable) library(flextable) ```  Table iris is given in Table \\@ref(tab:irisTable).  ```{r description, echo=FALSE, results='asis'} cat(\"<caption> (\\\\#tab:irisTable) Table Iris <\/caption> \\n\\r \") crosstable(iris, Sepal.Length, Sepal.Width, by=Species, test = TRUE, total=\"column\") %>% as_flextable ```"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-selection.html","id":"whole-table","dir":"Articles","previous_headings":"","what":"Whole table","title":"Select variables","text":"simplest case want describe whole table, need argument. really want explicit, also can use tidyselect::everything(). tidyselect helpers re-exported dplyr want load latter package. 10 first lines iris2 dataset: .id label variable value Sepal.Length Length Sepal Min / Max 4.3 / 7.9 Med [IQR] 5.8 [5.1;6.4] Mean (std) 5.8 (0.8) N (NA) 150 (0) Sepal.Width Width Sepal Min / Max 2.0 / 4.4 Med [IQR] 3.0 [2.8;3.3] Mean (std) 3.1 (0.4) N (NA) 150 (0) Petal.Length Length Petal Min / Max 1.0 / 6.9 Med [IQR] 4.3 [1.6;5.1] Mean (std) 3.8 (1.8) N (NA) 150 (0) Petal.Width Width Petal Min / Max 0.1 / 2.5 Med [IQR] 1.3 [0.3;1.8] Mean (std) 1.2 (0.8) N (NA) 150 (0) Species Specie setosa 50 (33.33%) versicolor 50 (33.33%) virginica 50 (33.33%)","code":"library(crosstable) ct = crosstable(iris2, everything()) #or simply `crosstable(iris2)` ct %>%    as_flextable(keep_id=TRUE)"},{"path":[]},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-selection.html","id":"name","dir":"Articles","previous_headings":"Select by column name","what":"Name","title":"Select variables","text":"Just like dplyr::select(), can use names without quotes select variables want describe. Use c() select several columns: .id label variable Engine straight vshaped mpg Miles/(US) gallon Min / Max 17.8 / 33.9 10.4 / 26.0 Med [IQR] 22.8 [21.4;29.6] 15.7 [14.8;19.1] Mean (std) 24.6 (5.4) 16.6 (3.9) N (NA) 14 (0) 18 (0) qsec 1/4 mile time Min / Max 16.9 / 22.9 14.5 / 18.0 Med [IQR] 19.2 [18.6;20.0] 17.0 [16.0;17.4] Mean (std) 19.3 (1.4) 16.7 (1.1) N (NA) 14 (0) 18 (0)","code":"crosstable(mtcars2, c(mpg, \"qsec\"), by=vs) %>%    as_flextable(keep_id=TRUE)"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-selection.html","id":"external-vector","dir":"Articles","previous_headings":"Select by column name","what":"External vector","title":"Select variables","text":"However, better use all_of any_of take column names external vector. Otherwise, ambiguity might wanted select column named like vector. .id label variable Engine straight vshaped mpg Miles/(US) gallon Min / Max 17.8 / 33.9 10.4 / 26.0 Med [IQR] 22.8 [21.4;29.6] 15.7 [14.8;19.1] Mean (std) 24.6 (5.4) 16.6 (3.9) N (NA) 14 (0) 18 (0) cyl Number cylinders 4 10 (90.91%) 1 (9.09%) 6 4 (57.14%) 3 (42.86%) 8 0 (0%) 14 (100.00%)","code":"qsec = c(\"mpg\", \"cyl\") #wouldn't that be the most evil variable name ever? crosstable(mtcars2, any_of(qsec), by=vs) %>%    as_flextable(keep_id=TRUE)"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-selection.html","id":"negation","dir":"Articles","previous_headings":"Select by column name","what":"Negation","title":"Select variables","text":"can use negation keep columns: .id label variable Engine straight vshaped disp Displacement (cu..) Min / Max 71.1 / 258.0 120.3 / 472.0 Med [IQR] 120.5 [83.0;162.4] 311.0 [275.8;360.0] Mean (std) 132.5 (56.9) 307.1 (106.8) N (NA) 14 (0) 18 (0) hp Gross horsepower Min / Max 52.0 / 123.0 91.0 / 335.0 Med [IQR] 96.0 [66.0;109.8] 180.0 [156.2;226.2] Mean (std) 91.4 (24.4) 189.7 (60.3) N (NA) 14 (0) 18 (0)","code":"crosstable(mtcars2, c(-mpg, -cyl, -1), by=vs) %>% head(8) %>% #-c(mpg, cyl, 1) would also work   as_flextable(keep_id=TRUE)"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-selection.html","id":"indice","dir":"Articles","previous_headings":"Select by column name","what":"Indice","title":"Select variables","text":"can useful sometimes, instance want quickly describe 3 first columns. .id label variable Engine straight vshaped mpg Miles/(US) gallon Min / Max 17.8 / 33.9 10.4 / 26.0 Med [IQR] 22.8 [21.4;29.6] 15.7 [14.8;19.1] Mean (std) 24.6 (5.4) 16.6 (3.9) N (NA) 14 (0) 18 (0) cyl Number cylinders 4 10 (90.91%) 1 (9.09%) 6 4 (57.14%) 3 (42.86%) 8 0 (0%) 14 (100.00%) disp Displacement (cu..) Min / Max 71.1 / 258.0 120.3 / 472.0 Med [IQR] 120.5 [83.0;162.4] 311.0 [275.8;360.0] Mean (std) 132.5 (56.9) 307.1 (106.8) N (NA) 14 (0) 18 (0) can also use negation (-(1:3)), concatenation (c(1,2,3)), (crosstable(mtcars2, 1:4, -2, =vs)).","code":"crosstable(mtcars2, 2:4, by=vs) %>%    as_flextable(keep_id=TRUE)"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-selection.html","id":"select-with-tidyselect-helpers","dir":"Articles","previous_headings":"","what":"Select with tidyselect helpers","title":"Select variables","text":"Along everything(), tidyselect provides large choice helpers. can browse ?tidyselect::select_helpers complete list. Note useful ignore.case argument often convenient. main ones re-exported crosstable: starts_with(), ends_with(), contains() matches(). examples: .id label variable value disp Displacement (cu..) Min / Max 71.1 / 472.0 Med [IQR] 196.3 [120.8;326.0] Mean (std) 230.7 (123.9) N (NA) 32 (0) drat Rear axle ratio Min / Max 2.8 / 4.9 Med [IQR] 3.7 [3.1;3.9] Mean (std) 3.6 (0.5) N (NA) 32 (0) .id label variable value mpg Miles/(US) gallon Min / Max 10.4 / 33.9 Med [IQR] 19.2 [15.4;22.8] Mean (std) 20.1 (6.0) N (NA) 32 (0) cyl Number cylinders 4 11 (34.38%) 6 7 (21.88%) 8 14 (43.75%) .id label variable value disp Displacement (cu..) Min / Max 71.1 / 472.0 Med [IQR] 196.3 [120.8;326.0] Mean (std) 230.7 (123.9) N (NA) 32 (0) drat Rear axle ratio Min / Max 2.8 / 4.9 Med [IQR] 3.7 [3.1;3.9] Mean (std) 3.6 (0.5) N (NA) 32 (0) gear Number forward gears 3 15 (46.88%) 4 12 (37.50%) 5 5 (15.62%)","code":"crosstable(mtcars2, starts_with(\"d\")) %>%    as_flextable(keep_id=TRUE) crosstable(mtcars2, c(ends_with(\"g\"), contains(\"yl\"))) %>%    as_flextable(keep_id=TRUE) #to all regex haters: the following call selects all columns which name  #starts with \"d\" or \"g\", followed by exactly 3 characters crosstable(mtcars2, matches(\"^d|g.{3}$\")) %>%    as_flextable(keep_id=TRUE)"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-selection.html","id":"select-with-predicate-functions","dir":"Articles","previous_headings":"","what":"Select with predicate functions","title":"Select variables","text":"Sometimes, want select columns meet set specifications, instance type value. can use predicate functions: functions return single logical value. function named, good practice wrap (). instance, might want keep character variables: .id label variable value vs Engine straight 14 (43.75%) vshaped 18 (56.25%) Transmission auto 19 (59.38%) manual 13 (40.62%) cyl Number cylinders 4 11 (34.38%) 6 7 (21.88%) 8 14 (43.75%) gear Number forward gears 3 15 (46.88%) 4 12 (37.50%) 5 5 (15.62%) Using anonymous functions, can even use complicated patterns. instance, might want numeric variables mean higher 100: .id label variable value disp Displacement (cu..) Min / Max 71.1 / 472.0 Med [IQR] 196.3 [120.8;326.0] Mean (std) 230.7 (123.9) N (NA) 32 (0) hp Gross horsepower Min / Max 52.0 / 335.0 Med [IQR] 123.0 [96.5;180.0] Mean (std) 146.7 (68.6) N (NA) 32 (0) note, crosstable support lambda-functions, instead write crosstable(mtcars2, (~.numeric(.x) && mean(.x)>100)) exact result tidier code. logical constraint function () return single logical value. Use &&, ||, parenthesis combine functions complex patterns.","code":"crosstable(mtcars2, c(where(is.character), where(is.factor), -model)) %>%    as_flextable(keep_id=TRUE) crosstable(mtcars2, where(function(x) is.numeric(x) && mean(x)>100)) %>%    as_flextable(keep_id=TRUE)"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-selection.html","id":"select-with-a-formula","dir":"Articles","previous_headings":"","what":"Select with a formula","title":"Select variables","text":"want mutate variables real-time, can use formula interface. left-hand-side variables describe, right-hand-side variable (can set NULL, 0 1 “variable”). .id label variable Engine straight vshaped mpg Miles/(US) gallon Min / Max 17.8 / 33.9 10.4 / 26.0 Med [IQR] 22.8 [21.4;29.6] 15.7 [14.8;19.1] Mean (std) 24.6 (5.4) 16.6 (3.9) N (NA) 14 (0) 18 (0) cyl Number cylinders 4 10 (90.91%) 1 (9.09%) 6 4 (57.14%) 3 (42.86%) 8 0 (0%) 14 (100.00%) permits complex interesting patterns, using functions situ operations using function. Labels inherited make little sense though. label variable ifelse(mpg > 20, \"mpg>20\", \"mpg<20\") mpg<20 mpg>20 sqrt(mpg) Min / Max 3.2 / 4.4 4.6 / 5.8 Med [IQR] 4.0 [3.8;4.2] 4.9 [4.6;5.4] Mean (std) 4.0 (0.4) 5.0 (0.4) N (NA) 18 (0) 14 (0) (qsec^2) Min / Max 210.2 / 408.8 270.9 / 524.4 Med [IQR] 301.0 [259.3;321.8] 351.8 [303.0;391.8] Mean (std) 294.3 (50.4) 356.8 (66.7) N (NA) 18 (0) 14 (0) Note use tidyselect helpers formulas use formula declared object.","code":"crosstable(mtcars2, mpg+cyl ~ vs) %>%    as_flextable(keep_id=TRUE) crosstable(mtcars2, sqrt(mpg) + I(qsec^2) ~ ifelse(mpg>20,\"mpg>20\",\"mpg<20\"),            label=FALSE) %>%    as_flextable()"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable-selection.html","id":"ultimate-example","dir":"Articles","previous_headings":"","what":"Ultimate example","title":"Select variables","text":"Lets play little :-) want numeric variables start “d” “w”, still want drat end. label variable value mpg Min / Max 10.4 / 33.9 Med [IQR] 19.2 [15.4;22.8] Mean (std) 20.1 (6.0) N (NA) 32 (0) hp Min / Max 52.0 / 335.0 Med [IQR] 123.0 [96.5;180.0] Mean (std) 146.7 (68.6) N (NA) 32 (0) qsec Min / Max 14.5 / 22.9 Med [IQR] 17.7 [16.9;18.9] Mean (std) 17.8 (1.8) N (NA) 32 (0) carb Min / Max 1.0 / 8.0 Med [IQR] 2.0 [2.0;4.0] Mean (std) 2.8 (1.6) N (NA) 32 (0) drat Min / Max 2.8 / 4.9 Med [IQR] 3.7 [3.1;3.9] Mean (std) 3.6 (0.5) N (NA) 32 (0)","code":"crosstable(mtcars2, c(where(is.numeric), -matches(\"^d|w\"), drat), label=FALSE) %>%    as_flextable()"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable.html","id":"crosstable","dir":"Articles","previous_headings":"","what":"Crosstable","title":"Introduction to Crosstable","text":"Crosstable package centered single function, crosstable(), easily computes descriptive statistics datasets. starting vignette, familiar dplyr pipes (%>%, Ctrl+Shift+M RStudio), warmly recommend read vignette, , can read French, Julien Barnier’s awesome tidyverse tutorial. Nevertheless, vignette still easy understand otherwise, crosstable perfectly usable base R.","code":""},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable.html","id":"example-dataset-modified-mtcars","dir":"Articles","previous_headings":"","what":"Example dataset: modified mtcars","title":"Introduction to Crosstable","text":"First, since crosstable() uses power label attribute, let’s start building labelled dataset. vignette, use modified version mtcars famous dataset, comprises 11 aspects design performance 32 automobiles. Let’s modify add textual categories, keep row names column, make numeric variables factors, add labels table using import_labels(). convenience, dataset already packed {crosstable} ?mtcars2 don’t bother re-creating tests.","code":"library(crosstable) library(dplyr) mtcars_labels = read.table(header=TRUE, text=\"   name  label   model 'Model'   mpg   'Miles/(US) gallon'   cyl   'Number of cylinders'   disp  'Displacement (cu.in.)'   hp    'Gross horsepower'   drat  'Rear axle ratio'   wt    'Weight (1000 lbs)'   qsec  '1/4 mile time'   vs    'Engine'   am    'Transmission'   gear  'Number of forward gears'   carb  'Number of carburetors' \") mtcars2 = mtcars %>%    mutate(model=rownames(mtcars),           vs=ifelse(vs==0, \"vshaped\", \"straight\"),          am=ifelse(am==0, \"auto\", \"manual\"),           across(c(\"cyl\", \"gear\"), factor),          .before=1) %>%    import_labels(mtcars_labels, name_from=\"name\", label_from=\"label\") %>%    as_tibble() #I also could have used `labelled::set_variable_labels()` to add labels"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable.html","id":"first-overview","dir":"Articles","previous_headings":"","what":"First overview","title":"Introduction to Crosstable","text":"first example, let’s describe columns mpg cyl, grouping column (transmission). tables readable console, let’s also use as_flextable() turn resulting crosstable beautiful, ready--print HTML table. table automatically displayed Viewer pane using RStudio. .id label variable Transmission auto manual mpg Miles/(US) gallon Min / Max 10.4 / 24.4 15.0 / 33.9 Med [IQR] 17.3 [14.9;19.2] 22.8 [21.0;30.4] Mean (std) 17.1 (3.8) 24.4 (6.2) N (NA) 19 (0) 13 (0) cyl Number cylinders 4 3 (27.27%) 8 (72.73%) 6 4 (57.14%) 3 (42.86%) 8 12 (85.71%) 2 (14.29%) default, numeric variables (like mpg disp) described min/max, median/IQR, mean/sd number observations/missing, categorical (factor/character) variables (like cyl) described levels counts fractions. fully customizable, see hereafter. many ways select variables: names, character vector, tidyselect helpers, formula… described details vignette(\"crosstable-selection\"). column usually factor, character logical vector. numeric vector, numeric vectors can described correlation coefficients displayed. possible apply several variables (=c(, vs)), use one variable clarity. vignette, often set keep_id=TRUE can see variable name, practice usually omit . See vignette(\"crosstable-report\") as_flextable() integrate crosstables MS Word document (using officer) Rmarkdown. hand, can set label=FALSE don’t want appear.","code":"crosstable(mtcars2, c(mpg, cyl), by=am) %>%   as_flextable(keep_id=TRUE)"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable.html","id":"totals","dir":"Articles","previous_headings":"","what":"Totals","title":"Introduction to Crosstable","text":"display totals, use total argument one c(\"none\", \"row\", \"column\", \"\"). .id label variable Engine Total straight vshaped Transmission auto 7 (36.84%) 12 (63.16%) 19 (59.38%) manual 7 (53.85%) 6 (46.15%) 13 (40.62%) Total 14 (43.75%) 18 (56.25%) 32 (100.00%) mpg Miles/(US) gallon Min / Max 17.8 / 33.9 10.4 / 26.0 10.4 / 33.9 Med [IQR] 22.8 [21.4;29.6] 15.7 [14.8;19.1] 19.2 [15.4;22.8] Mean (std) 24.6 (5.4) 16.6 (3.9) 20.1 (6.0) N (NA) 14 (0) 18 (0) 32 (0) Note totals always take missing values account. Therefore, aware showNA=\"\", totals may higher sum values inside table.","code":"#of course, the total of a \"column\" in only meaningful for categorical variables. crosstable(mtcars2, c(am, mpg), by=vs, total=\"both\") %>%    as_flextable(keep_id=TRUE)"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable.html","id":"controlling-the-description","dir":"Articles","previous_headings":"","what":"Controlling the description","title":"Introduction to Crosstable","text":"crosstable() function comes lot arguments add control describe dataset. arguments tied type variable apply descriptions . Note parameters can controlled using global options. comes handy want use parameterization crosstables. See ?crosstable_options details .","code":""},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable.html","id":"categorical-variables","dir":"Articles","previous_headings":"Controlling the description","what":"Categorical variables","title":"Introduction to Crosstable","text":"Categorical variables described using counts percentages. numeric variable considered categorical number levels lesser unique_numeric argument (default=3). set, can use margin argument control whether percentages calculated row (default), column, cell. can also use percent_digits (default=2) control many decimals displayed. Use showNA (one c(\"ifany\", \"always\", \"\")) control missing values displayed. .id label variable Engine straight vshaped NA Transmission auto 7 (50%/37%) 12 (67%/63%) 0 manual 7 (50%/54%) 6 (33%/46%) 0 NA 0 0 0 cyl Number cylinders 4 9 (75%/90%) 1 (7%/10%) 0 6 3 (25%/75%) 1 (7%/25%) 0 8 0 (0%/0%) 13 (87%/100%) 0 NA 2 3 0 can see missing values never taken account calculating percentage calculation R. can change behaviour using tidyr::replace_na() forcats::fct_na_value_to_level() dataset applying crosstable().","code":"mtcars3 = mtcars2 mtcars3$cyl[1:5] = NA crosstable(mtcars3, c(am, cyl), by=vs, showNA=\"always\",             percent_digits=0, percent_pattern=\"{n} ({p_col}/{p_row})\") %>%    as_flextable(keep_id=TRUE)"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable.html","id":"numeric-variables","dir":"Articles","previous_headings":"Controlling the description","what":"Numeric variables","title":"Introduction to Crosstable","text":"Numeric variables described summary functions. default, outputs min/max, median/IQR, mean/sd number observations/missing. However, might information need, can use funs argument apply set functions choice: .id label variable value mpg Miles/(US) gallon median 19.2 mean 20.1 std dev 6.0 wt Weight (1000 lbs) median 3.3 mean 3.2 std dev 1.0 end, might want use crosstable’s convenience functions meansd(), meanCI(), mediqr(), minmax(), nna(). advanced use cases, can also use anonymous lambda functions, instance crosstable(mtcars2, c(mpg, wt), funs=c(\"mean square\"=function(xx) mean(xx^2), \"mean cube\"= ~mean(.x^3))). functions need additional arguments, can use funs_arg argument. instance, write crosstable(mtcars2, c(disp, hp), funs=c(quantile), funs_arg=list(probs=c(0.25,0.75))). Numbers formatted number decimal places. can use funs_arg=list(dig=3) customize number decimals. might want take look ?summaryFunctions ?format_fixed. hand, refers numeric variable, correlation coefficients calculated. .id label variable Miles/(US) gallon Miles/(US) gallon disp Displacement (cu..) pearson -0.85 95%CI [-0.92;-0.71] hp Gross horsepower pearson -0.78 95%CI [-0.89;-0.59] drat Rear axle ratio pearson 0.68 95%CI [0.44;0.83] wt Weight (1000 lbs) pearson -0.87 95%CI [-0.93;-0.74] qsec 1/4 mile time pearson 0.42 95%CI [0.08;0.67] carb Number carburetors pearson -0.55 95%CI [-0.75;-0.25] can use cor_method argument choose coefficient calculate (\"pearson\", \"kendall\", \"spearman\").","code":"crosstable(mtcars2, c(mpg, wt), funs=c(median, mean, \"std dev\"=sd)) %>%    as_flextable(keep_id=TRUE) library(survival) crosstable(mtcars2, where(is.numeric), cor_method=\"pearson\", by=mpg) %>%    as_flextable(keep_id=TRUE)"},{"path":[]},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable.html","id":"survival-data","dir":"Articles","previous_headings":"Controlling the description > Other variables","what":"Survival data","title":"Introduction to Crosstable","text":"Crosstable also able describe survival data. Use times set specific times interest followup compute median followup. time, get survival, number events time, number patients risk, per survival:::summary.survfit(). .id label variable x Maintained Nonmaintained surv surv t=0 1.00 (0/11) 1.00 (0/12) t=50 0.18 (7/1) 0 (11/0) t=150 0.18 (0/1) 0 (0/0) Median follow [min ; max] 103 [13 ; 161] NA [16 ; 45] Median survival 31 23 Note , using formula interface, declare Surv object directly inside crosstable function: crosstable(aml, Surv(time, status) ~ x).","code":"library(survival) aml$surv = Surv(aml$time, aml$status) crosstable(aml, surv, by=x, times=c(0,50,150), followup=TRUE) %>%    as_flextable(keep_id=TRUE)"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable.html","id":"dates","dir":"Articles","previous_headings":"Controlling the description > Other variables","what":"Dates","title":"Introduction to Crosstable","text":"Although less usual, can describe variables call Date POSIXt crosstable(). Use date_format apply specific format (see ?strptime formats). Beside , considered numeric variables. .id label variable value x_date Date Min / Max 22/02/2010 - 02/12/2010 Med [IQR] 04/05/2010 [06/04/2010;30/06/2010] Mean (std) 27/05/2010 (2.3 months) N (NA) 32 (0) x_posix Date+time Min / Max 15/01/2010 - 23/01/2010 Med [IQR] 18/01/2010 [17/01/2010;19/01/2010] Mean (std) 18/01/2010 (1.8 days) N (NA) 32 (0) standard deviation readable, date unit chosen automatically among [\"seconds\", \"minutes\", \"hours\", \"days\", \"months\", \"years\"]. don’t want two groups different date unit, can set globally using date_unit key funs_arg: .id label variable value x_date Date meansd 2010-05-27 (68.6 days) x_posix Date+time meansd 2010-01-18 20:22:12 (1.8 days)","code":"mtcars2$x_date = as.Date(mtcars2$hp , origin=\"2010-01-01\") %>% set_label(\"Date\") mtcars2$x_posix = as.POSIXct(mtcars2$qsec*3600*24 , origin=\"2010-01-01\") %>% set_label(\"Date+time\") crosstable(mtcars2, c(x_date, x_posix), date_format=\"%d/%m/%Y\") %>%    as_flextable(keep_id=TRUE) crosstable(mtcars2, c(x_date, x_posix), funs=meansd, funs_arg=list(date_unit=\"days\")) %>%    as_flextable(keep_id=TRUE)"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable.html","id":"effects","dir":"Articles","previous_headings":"","what":"Effects","title":"Introduction to Crosstable","text":"one variable 2 levels, possible automatically compute effect-size, often along confidence interval. .id label variable Transmission effect auto manual vs Engine straight 7 (50.00%) 7 (50.00%) Odds ratio [95% Wald CI], ref='manual vs auto'vshaped vs straight: 0.50 [0.11 2.08] vshaped 12 (66.67%) 6 (33.33%) qsec 1/4 mile time mean 18.2 17.4 Difference means (t-test CI), ref='auto'manual minus auto: -0.82 [-2.12 0.48] Type effect (method, bootstrap, …) also chosen depending characteristics crossed variables (class, size, distribution, …). See crosstable_effect_args() details effect choice algorithm customize .","code":"crosstable(mtcars2, c(vs, qsec), by=am, funs=mean, effect=TRUE) %>%    as_flextable(keep_id=TRUE)"},{"path":"https://danchaltiel.github.io/crosstable/articles/crosstable.html","id":"tests","dir":"Articles","previous_headings":"","what":"Tests","title":"Introduction to Crosstable","text":"also possible perform statistical tests automatically. .id label variable Transmission test auto manual vs Engine straight 7 (50.00%) 7 (50.00%) p value: 0.3409 (Pearson's Chi-squared test) vshaped 12 (66.67%) 6 (33.33%) qsec 1/4 mile time mean 18.2 17.4 p value: 0.2057 (Two Sample t-test) course, done exploratory context, cause extensive alpha inflation otherwise. Tests chosen depending characteristics crossed variables (class, size, distribution, …). See crosstable_test_args() details test choice algorithm.","code":"library(flextable) crosstable(mtcars2, c(vs, qsec), by=am, funs=mean, test=TRUE) %>%    as_flextable(keep_id=TRUE)"},{"path":"https://danchaltiel.github.io/crosstable/articles/percent_pattern.html","id":"initialization","dir":"Articles","previous_headings":"","what":"initialization","title":"Using `percent_pattern`","text":"First, let’s add missing values mtcars2 dataset tweak options:","code":"library(crosstable) mtcars3 = mtcars2 mtcars3$cyl[1:5] = NA mtcars3$vs[5:12] = NA  crosstable_options(   percent_digits=0 )"},{"path":"https://danchaltiel.github.io/crosstable/articles/percent_pattern.html","id":"default-behaviour","dir":"Articles","previous_headings":"","what":"Default behaviour","title":"Using `percent_pattern`","text":"default, crosstable() use percent_pattern=\"{n} ({p_row})\", outputs size n along row’s percentage p_row: label variable Engine straight vshaped NA Number cylinders 4 7 (88%) 1 (12%) 2 6 0 (0%) 1 (100%) 3 8 0 (0%) 11 (100%) 2 NA 2 2 1 , see can tweak percent_pattern order display figures. NOTE: Missing values always described n alone. want describe non-missing values, mutate one, likely using forcats::fct_explicit_na().","code":"crosstable(mtcars3, cyl, by=vs) %>% as_flextable()"},{"path":"https://danchaltiel.github.io/crosstable/articles/percent_pattern.html","id":"allowed-variables","dir":"Articles","previous_headings":"","what":"Allowed variables","title":"Using `percent_pattern`","text":"First, list internal variables can use: n, n_row, n_col, n_tot: respectively size cell, row, column, whole table. p_row, p_col, p_tot: respectively proportion relative row, column, whole table. p_tot_inf, p_tot_sup, p_row_inf, p_row_sup, p_col_inf, p_col_sup: confidence interval (calculated using Wilson score) proportions . ever need , note also possible use external variable defined outside crosstable(). simple example: label variable Engine straight vshaped NA Number cylinders 4 N=7/8 -> p=88% N=1/8 -> p=12% 2 6 N=0/1 -> p=0% N=1/1 -> p=100% 3 8 N=0/11 -> p=0% N=11/11 -> p=100% 2 NA 2 2 1","code":"crosstable(mtcars3, cyl, by=vs,             percent_pattern=\"N={n}/{n_row} -> p={p_row}\") %>%    as_flextable()"},{"path":"https://danchaltiel.github.io/crosstable/articles/percent_pattern.html","id":"missing-values","dir":"Articles","previous_headings":"","what":"Missing values","title":"Using `percent_pattern`","text":"can see, internal variables account missing values (except n, obviously). make sense cases, doesn’t, can use following variables account NA explicitly: n_row_na, n_col_na, n_tot_na p_tot_na, p_row_na, p_col_na p_tot_na_inf, p_tot_na_sup, p_row_na_inf, p_row_na_sup, p_col_na_inf, p_col_na_sup (See last section example) Note use showNA=\"\", difference standard variables _na variables.","code":""},{"path":"https://danchaltiel.github.io/crosstable/articles/percent_pattern.html","id":"proportions-in-totals","dir":"Articles","previous_headings":"","what":"Proportions in totals","title":"Using `percent_pattern`","text":"may noticed, totals considered separately: label variable Engine Total straight vshaped NA Number cylinders 4 N=7, p=88% (7/8) N=1, p=12% (1/8) 2 10 (37%) 6 N=0, p=0% (0/1) N=1, p=100% (1/1) 3 4 (15%) 8 N=0, p=0% (0/11) N=11, p=100% (11/11) 2 13 (48%) NA 2 2 1 5 Total 9 (38%) 15 (62%) 8 32 (100%) Indeed, pattern totals. instance, proportion relative row make sense context entire row . get control percent_pattern totals, pass list names body, total_row, total_col, total_all: label variable Engine Total straight vshaped NA Number cylinders 4 N=7, p=35% (7/20) N=1, p=5% (1/20) 2 10 6 N=0, p=0% (0/20) N=1, p=5% (1/20) 3 4 8 N=0, p=0% (0/20) N=11, p=55% (11/20) 2 13 NA 2 2 1 5 Total N=9 p=(38%) N=15 p=(62%) 8 Total=32","code":"crosstable(mtcars3, cyl, by=vs, total=TRUE,             percent_pattern=\"N={n}, p={p_row} ({n}/{n_row})\") %>%    as_flextable() pp = list(body=\"N={n}, p={p_tot} ({n}/{n_tot})\",            total_row=\"N={n} p=({p_col})\",            total_col=\"{n}\", total_all=\"Total={n}\") crosstable(mtcars3, cyl, by=vs, total=TRUE,             percent_pattern=pp) %>%    as_flextable()"},{"path":"https://danchaltiel.github.io/crosstable/articles/percent_pattern.html","id":"get_percent_pattern","dir":"Articles","previous_headings":"","what":"get_percent_pattern()","title":"Using `percent_pattern`","text":"easily get percent_pattern list, can use get_percent_pattern() helper: can also set result variable modify members . See ?get_percent_pattern information.","code":"get_percent_pattern(\"all\") #> $body #> [1] \"{n} ({p_tot} / {p_row} / {p_col})\" #>  #> $total_row #> [1] \"{n} ({p_col})\" #>  #> $total_col #> [1] \"{n} ({p_row})\" #>  #> $total_all #> [1] \"{n} ({p_tot})\" get_percent_pattern(\"col\", na=TRUE) #> $body #> [1] \"{n} ({p_col_na})\" #>  #> $total_row #> [1] \"{n} ({p_col_na})\" #>  #> $total_col #> [1] \"{n} ({p_row_na})\" #>  #> $total_all #> [1] \"{n} ({p_tot_na})\""},{"path":"https://danchaltiel.github.io/crosstable/articles/percent_pattern.html","id":"ultimate-example","dir":"Articles","previous_headings":"","what":"Ultimate example","title":"Using `percent_pattern`","text":"ultimate example percent_pattern. Give close look possible values surely find one need. label variable Engine Total straight vshaped NA Number cylinders 4 N=7Cell: p = 35% (7/20) [2e+01%; 57%]Col: p = 100% (7/7) [65%; 100%]Row: p = 88% (7/8) [53%; 98%]Cell (NA): p = 22% (7/32) [11%; 39%]Col (NA): p = 78% (7/9) [45%; 94%]Row (NA): p = 70% (7/10) [40%; 89%] N=1Cell: p = 5% (1/20) [9e-01%; 24%]Col: p = 8% (1/13) [1%; 33%]Row: p = 12% (1/8) [2%; 47%]Cell (NA): p = 3% (1/32) [1%; 16%]Col (NA): p = 7% (1/15) [1%; 30%]Row (NA): p = 10% (1/10) [2%; 40%] 2 N=10Col: p = 37% (10/27) [22%; 56%]Col (NA): p = 31% (10/32) [18%; 49%] 6 N=0Cell: p = 0% (0/20) [1e-15%; 16%]Col: p = 0% (0/7) [0%; 35%]Row: p = 0% (0/1) [0%; 79%]Cell (NA): p = 0% (0/32) [0%; 11%]Col (NA): p = 0% (0/9) [0%; 30%]Row (NA): p = 0% (0/4) [0%; 49%] N=1Cell: p = 5% (1/20) [9e-01%; 24%]Col: p = 8% (1/13) [1%; 33%]Row: p = 100% (1/1) [21%; 100%]Cell (NA): p = 3% (1/32) [1%; 16%]Col (NA): p = 7% (1/15) [1%; 30%]Row (NA): p = 25% (1/4) [5%; 70%] 3 N=4Col: p = 15% (4/27) [6%; 32%]Col (NA): p = 12% (4/32) [5%; 28%] 8 N=0Cell: p = 0% (0/20) [1e-15%; 16%]Col: p = 0% (0/7) [0%; 35%]Row: p = 0% (0/11) [0%; 26%]Cell (NA): p = 0% (0/32) [0%; 11%]Col (NA): p = 0% (0/9) [0%; 30%]Row (NA): p = 0% (0/13) [0%; 23%] N=11Cell: p = 55% (11/20) [3e+01%; 74%]Col: p = 85% (11/13) [58%; 96%]Row: p = 100% (11/11) [74%; 100%]Cell (NA): p = 34% (11/32) [20%; 52%]Col (NA): p = 73% (11/15) [48%; 89%]Row (NA): p = 85% (11/13) [58%; 96%] 2 N=13Col: p = 48% (13/27) [31%; 66%]Col (NA): p = 41% (13/32) [26%; 58%] NA 2 2 1 5 Total N=9Row: p = 38% (9/24) [21%; 57%]Row (NA): p = 28% (9/32) [16%; 45%] N=15Row: p = 62% (15/24) [43%; 79%]Row (NA): p = 47% (15/32) [31%; 64%] 8 N=32P: 100% [89%; 100%]P (NA): 100% [89%; 100%]","code":"ULTIMATE_PATTERN=list(   body=\"N={n}         Cell: p = {p_tot} ({n}/{n_tot}) [{p_tot_inf}; {p_tot_sup}]         Col: p = {p_col} ({n}/{n_col}) [{p_col_inf}; {p_col_sup}]         Row: p = {p_row} ({n}/{n_row}) [{p_row_inf}; {p_row_sup}]                  Cell (NA): p = {p_tot_na} ({n}/{n_tot_na}) [{p_tot_na_inf}; {p_tot_na_sup}]         Col (NA): p = {p_col_na} ({n}/{n_col_na}) [{p_col_na_inf}; {p_col_na_sup}]         Row (NA): p = {p_row_na} ({n}/{n_row_na}) [{p_row_na_inf}; {p_row_na_sup}]\",   total_row=\"N={n}              Row: p = {p_row} ({n}/{n_row}) [{p_row_inf}; {p_row_sup}]              Row (NA): p = {p_row_na} ({n}/{n_row_na}) [{p_row_na_inf}; {p_row_na_sup}]\",   total_col=\"N={n}              Col: p = {p_col} ({n}/{n_col}) [{p_col_inf}; {p_col_sup}]              Col (NA): p = {p_col_na} ({n}/{n_col_na}) [{p_col_na_inf}; {p_col_na_sup}]\",   total_all=\"N={n}              P: {p_col} [{p_col_inf}; {p_col_sup}]              P (NA): {p_col} [{p_col_na_inf}; {p_col_na_sup}]\" )  crosstable(mtcars3, cyl, by=vs,            percent_digits=0, total=TRUE, showNA=\"always\",            percent_pattern=ULTIMATE_PATTERN) %>%    as_flextable() %>%    flextable::theme_box()"},{"path":"https://danchaltiel.github.io/crosstable/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dan Chaltiel. Author, maintainer. David Hajage. Conceptor.","code":""},{"path":"https://danchaltiel.github.io/crosstable/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chaltiel D (2023). crosstable: Crosstables Descriptive Analyses. https://danchaltiel.github.io/crosstable/, https://github.com/DanChaltiel/crosstable/.","code":"@Manual{,   title = {crosstable: Crosstables for Descriptive Analyses},   author = {Dan Chaltiel},   year = {2023},   note = {https://danchaltiel.github.io/crosstable/, https://github.com/DanChaltiel/crosstable/}, }"},{"path":"https://danchaltiel.github.io/crosstable/index.html","id":"crosstable-","dir":"","previous_headings":"","what":"An R package Crosstables for descriptive analyses","title":"An R package Crosstables for descriptive analyses","text":"Crosstable package centered single function, crosstable, easily computes descriptive statistics datasets. can use tidyverse syntax interfaced package officer create automatized reports.","code":""},{"path":"https://danchaltiel.github.io/crosstable/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R package Crosstables for descriptive analyses","text":"Note , reproducibility purpose, even better solution use renv.","code":"# Install last version available on CRAN install.packages(\"crosstable\")  # Install development version on Github devtools::install_github(\"DanChaltiel/crosstable\", build_vignettes=TRUE)  # Install specific commit or tagged version (for reproducibility purpose) devtools::install_github(\"DanChaltiel/crosstable@ee012f6\", build_vignettes=TRUE) devtools::install_github(\"DanChaltiel/crosstable@0.6.1\", build_vignettes=TRUE)"},{"path":"https://danchaltiel.github.io/crosstable/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"An R package Crosstables for descriptive analyses","text":"2 examples try show main features crosstable. See documentation website .","code":""},{"path":"https://danchaltiel.github.io/crosstable/index.html","id":"example-1","dir":"","previous_headings":"Overview","what":"Example #1","title":"An R package Crosstables for descriptive analyses","text":"Dear crosstable, using mtcars2 dataset, please describe columns disp vs depending levels column , totals rows columns, proportions formatted group size, percent row percent column, decimals.  arguments, select column describe (c(disp, vs)), define grouping variable (=), set percentage calculation row/column (percent_pattern=), ask totals (total=). Since mtcars2 dataset labels, displayed instead variable name (see add ). crosstable() returning data.frame, use as_flextable() output beautiful HTML table. one can even exported MS Word lines code (see learn ).","code":"library(crosstable) ct1 = crosstable(mtcars2, c(disp, vs), by=am, total=\"both\",                   percent_pattern=\"{n} ({p_row}/{p_col})\", percent_digits=0) %>%   as_flextable() ct1"},{"path":"https://danchaltiel.github.io/crosstable/index.html","id":"example-2","dir":"","previous_headings":"Overview","what":"Example #2","title":"An R package Crosstables for descriptive analyses","text":"advanced example. Dear crosstable, using mtcars2 dataset , please describe columns whose name starts “cy” whose name ends “”, depending levels columns vs, without considering labels, applying mean() quantile() summary function, probs 25% 75% defined latter function, 3 decimals numeric variables:  , variables selected using tidyselect helpers summary functions mean quantile specified, along argument probs latter. Using label=FALSE allowed see variables selected best keep labels final table. as_flextable(), compact=TRUE option yields longer output, may suited contexts (instance publication), header_show_n=1:2 adds group sizes rows header.","code":"ct2 = crosstable(mtcars2, c(starts_with(\"cy\"), ends_with(\"at\")), by=c(am, vs),                   label=FALSE, num_digits=3, funs=c(mean, quantile),                   funs_arg=list(probs=c(.25,.75))) %>%    as_flextable(compact=TRUE, header_show_n=1:2) ct2"},{"path":"https://danchaltiel.github.io/crosstable/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"An R package Crosstables for descriptive analyses","text":"can find whole documentation dedicated website: vignette(\"crosstable\") first step--step guide use crosstable (link) vignette(\"crosstable-report\") creating MS Word reports using either officer Rmarkdown (link) vignette(\"pertent_pattern\") use percent_pattern (link) vignette(\"crosstable-selection\") variable selection (link), although better read https://tidyselect.r-lib.org/articles/syntax.html. lots features can learn , instance (non-exhaustive list): description correlation, dates, survival data (link) variable selection functions, e.g. .numeric (link) formula interface, allowing describe mutated columns, e.g. sqrt(mpg) Surv(time, event) (link) automatic computation statistical tests (link) effect sizes (link) global options avoid repeating arguments (link)","code":""},{"path":"https://danchaltiel.github.io/crosstable/index.html","id":"getting-help-and-giving-feedback","dir":"","previous_headings":"","what":"Getting help and giving feedback","title":"An R package Crosstables for descriptive analyses","text":"question use crosstable, please ask StackOverflow tag crosstable. can @DanChaltiel comment struggling get answers. Don’t forget add minimal reproducible example question, ideally using reprex package. miss feature think belong crosstable, please fill Feature Request issue. encounter unexpected error using crosstable, please fill Bug Report issue. case installation problem, try solutions proposed article first.","code":""},{"path":"https://danchaltiel.github.io/crosstable/index.html","id":"acknowledgement","dir":"","previous_headings":"","what":"Acknowledgement","title":"An R package Crosstables for descriptive analyses","text":"earliest development phase, crosstable based awesome package biostat2 written David Hajage. Thanks David!","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/apply_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch set variable labels — apply_labels","title":"Batch set variable labels — apply_labels","text":"function copycat expss package v0.10.7 (slightly modified) avoid depend expss. See expss::apply_labels() documentation. Note version compatible data.table.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/apply_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch set variable labels — apply_labels","text":"","code":"apply_labels(data, ..., warn_missing = FALSE)"},{"path":"https://danchaltiel.github.io/crosstable/reference/apply_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch set variable labels — apply_labels","text":"data data.frame/list ... named arguments warn_missing TRUE, throw warning names missing","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/apply_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch set variable labels — apply_labels","text":"object type data, labels","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/apply_labels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Batch set variable labels — apply_labels","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/apply_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch set variable labels — apply_labels","text":"","code":"iris %>%   apply_labels(Sepal.Length=\"Length of Sepal\",                Sepal.Width=\"Width of Sepal\") %>%   crosstable() #> # A tibble: 19 × 4 #>    .id          label           variable   value         #>    <chr>        <chr>           <chr>      <chr>         #>  1 Sepal.Length Length of Sepal Min / Max  4.3 / 7.9     #>  2 Sepal.Length Length of Sepal Med [IQR]  5.8 [5.1;6.4] #>  3 Sepal.Length Length of Sepal Mean (std) 5.8 (0.8)     #>  4 Sepal.Length Length of Sepal N (NA)     150 (0)       #>  5 Sepal.Width  Width of Sepal  Min / Max  2.0 / 4.4     #>  6 Sepal.Width  Width of Sepal  Med [IQR]  3.0 [2.8;3.3] #>  7 Sepal.Width  Width of Sepal  Mean (std) 3.1 (0.4)     #>  8 Sepal.Width  Width of Sepal  N (NA)     150 (0)       #>  9 Petal.Length Petal.Length    Min / Max  1.0 / 6.9     #> 10 Petal.Length Petal.Length    Med [IQR]  4.3 [1.6;5.1] #> 11 Petal.Length Petal.Length    Mean (std) 3.8 (1.8)     #> 12 Petal.Length Petal.Length    N (NA)     150 (0)       #> 13 Petal.Width  Petal.Width     Min / Max  0.1 / 2.5     #> 14 Petal.Width  Petal.Width     Med [IQR]  1.3 [0.3;1.8] #> 15 Petal.Width  Petal.Width     Mean (std) 1.2 (0.8)     #> 16 Petal.Width  Petal.Width     N (NA)     150 (0)       #> 17 Species      Species         setosa     50 (33.33%)   #> 18 Species      Species         versicolor 50 (33.33%)   #> 19 Species      Species         virginica  50 (33.33%)"},{"path":"https://danchaltiel.github.io/crosstable/reference/as_flextable.html","id":null,"dir":"Reference","previous_headings":"","what":"Turns a crosstable object into a formatted flextable — as_flextable.crosstable","title":"Turns a crosstable object into a formatted flextable — as_flextable.crosstable","text":"objects imported packages. Follow links see documentation. flextable as_flextable","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/as_flextable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turns a crosstable object into a formatted flextable — as_flextable.crosstable","text":"","code":"# S3 method for crosstable as_flextable(   x,   keep_id = FALSE,   by_header = NULL,   autofit = TRUE,   compact = FALSE,   show_test_name = TRUE,   fontsizes = list(body = 11, subheaders = 11, header = 11),   padding_v = NULL,   remove_header_keys = FALSE,   header_show_n = FALSE,   header_show_n_pattern = \"{.col} (N={.n})\",   generic_labels = list(id = \".id\", variable = \"variable\", value = \"value\", total =     \"Total\", label = \"label\", test = \"test\", effect = \"effect\"),   ... )"},{"path":"https://danchaltiel.github.io/crosstable/reference/as_flextable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turns a crosstable object into a formatted flextable — as_flextable.crosstable","text":"x result crosstable(). keep_id whether keep .id column. by_header string override header x one stratum. autofit whether use flextable::autofit() table. compact whether compact table. TRUE, see ct_compact.crosstable() see use keep_id. show_test_name test column, show test name. fontsizes font sizes list keys. Default list(body=11, subheaders=11, header=11). set arguments instead options, 3 names specified. padding_v vertical padding (body). remove_header_keys TRUE x several strata, header display values. header_show_n numeric vector telling depth group size indicated header. can control pattern using option crosstable_options. See crosstable_options() details . See example use case. header_show_n_pattern glue pattern used header_show_n==TRUE. .col name column .n size group. Default {.col} (N={.n}); can also use {.col_key} {.col_val} multiple stratum. control \"Total\" column, enter list names \"cell\" \"total\". generic_labels names crosstable default columns. Useful translation instance. ... unused.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/as_flextable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turns a crosstable object into a formatted flextable — as_flextable.crosstable","text":"flextable.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/as_flextable.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Turns a crosstable object into a formatted flextable — as_flextable.crosstable","text":"as_flextable(crosstable): Turns crosstable object formatted flextable.","code":""},{"path":[]},{"path":"https://danchaltiel.github.io/crosstable/reference/as_flextable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Turns a crosstable object into a formatted flextable — as_flextable.crosstable","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/as_flextable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turns a crosstable object into a formatted flextable — as_flextable.crosstable","text":"label variable value Sepal.Length Min / Max 4.3 / 7.9 Med [IQR] 5.8 [5.1;6.4] Mean (std) 5.8 (0.8) N (NA) 150 (0) Sepal.Width Min / Max 2.0 / 4.4 Med [IQR] 3.0 [2.8;3.3] Mean (std) 3.1 (0.4) N (NA) 150 (0) Petal.Length Min / Max 1.0 / 6.9 Med [IQR] 4.3 [1.6;5.1] Mean (std) 3.8 (1.8) N (NA) 150 (0) Petal.Width Min / Max 0.1 / 2.5 Med [IQR] 1.3 [0.3;1.8] Mean (std) 1.2 (0.8) N (NA) 150 (0) Species setosa 50 (33.33%) versicolor 50 (33.33%) virginica 50 (33.33%) label variable vs=straight (N=14) vs=vshaped (N=18) =auto (N=7) =manual (N=7) =auto (N=12) =manual (N=6) Miles/(US) gallon Min / Max 17.8 / 24.4 21.4 / 33.9 10.4 / 19.2 15.0 / 26.0 Med [IQR] 21.4 [18.6;22.1] 30.4 [25.1;31.4] 15.2 [14.1;16.6] 20.4 [16.8;21.0] Mean (std) 20.7 (2.5) 28.4 (4.8) 15.1 (2.8) 19.8 (4.0) N (NA) 7 (0) 7 (0) 12 (0) 6 (0) Number cylinders 4 3 (27.27%) 7 (63.64%) 0 (0%) 1 (9.09%) 6 4 (57.14%) 0 (0%) 0 (0%) 3 (42.86%) 8 0 (0%) 0 (0%) 12 (85.71%) 2 (14.29%) Displacement (cu..) Min / Max 120.1 / 258.0 71.1 / 121.0 275.8 / 472.0 120.3 / 351.0 Med [IQR] 167.6 [143.8;196.3] 79.0 [77.2;101.5] 355.0 [296.9;410.0] 160.0 [148.8;265.8] Mean (std) 175.1 (49.1) 89.8 (18.8) 357.6 (71.8) 206.2 (95.2) N (NA) 7 (0) 7 (0) 12 (0) 6 (0) Gross horsepower Min / Max 62.0 / 123.0 52.0 / 113.0 150.0 / 245.0 91.0 / 335.0 Med [IQR] 105.0 [96.0;116.5] 66.0 [65.5;101.0] 180.0 [175.0;218.8] 142.5 [110.0;241.8] Mean (std) 102.1 (20.9) 80.6 (24.1) 194.2 (33.4) 180.8 (98.8) N (NA) 7 (0) 7 (0) 12 (0) 6 (0) Rear axle ratio Min / Max 2.8 / 3.9 3.8 / 4.9 2.8 / 3.7 3.5 / 4.4 Med [IQR] 3.7 [3.4;3.9] 4.1 [4.0;4.2] 3.1 [3.1;3.2] 3.9 [3.7;4.1] Mean (std) 3.6 (0.5) 4.1 (0.4) 3.1 (0.2) 3.9 (0.3) N (NA) 7 (0) 7 (0) 12 (0) 6 (0) Weight (1000 lbs) Min / Max 2.5 / 3.5 1.5 / 2.8 3.4 / 5.4 2.1 / 3.6 Med [IQR] 3.2 [3.2;3.4] 1.9 [1.7;2.3] 3.8 [3.6;4.4] 2.8 [2.7;3.1] Mean (std) 3.2 (0.3) 2.0 (0.4) 4.1 (0.8) 2.9 (0.5) N (NA) 7 (0) 7 (0) 12 (0) 6 (0) 1/4 mile time Min / Max 18.3 / 22.9 16.9 / 19.9 15.4 / 18.0 14.5 / 17.0 Med [IQR] 20.0 [19.2;20.1] 18.6 [18.6;19.2] 17.4 [17.0;17.7] 16.0 [14.8;16.6] Mean (std) 20.0 (1.5) 18.7 (0.9) 17.1 (0.8) 15.8 (1.1) N (NA) 7 (0) 7 (0) 12 (0) 6 (0) Number forward gears 3 3 (20.00%) 0 (0%) 12 (80.00%) 0 (0%) 4 4 (33.33%) 6 (50.00%) 0 (0%) 2 (16.67%) 5 0 (0%) 1 (20.00%) 0 (0%) 4 (80.00%) Number carburetors Min / Max 1.0 / 4.0 1.0 / 2.0 2.0 / 4.0 2.0 / 8.0 Med [IQR] 2.0 [1.0;3.0] 1.0 [1.0;2.0] 3.0 [2.0;4.0] 4.0 [4.0;5.5] Mean (std) 2.1 (1.3) 1.4 (0.5) 3.1 (0.9) 4.7 (2.1) N (NA) 7 (0) 7 (0) 12 (0) 6 (0) nonsense date Min / Max 2010-03-04 - 2010-05-04 2010-02-22 - 2010-04-24 2010-05-31 - 2010-09-03 2010-04-02 - 2010-12-02 Med [IQR] 2010-04-16 [2010-04-06;2010-05-04] 2010-03-08 [2010-03-07;2010-04-20] 2010-06-30 [2010-06-25;2010-08-04] 2010-05-23 [2010-04-21;2010-09-22] Mean (std) 2010-04-13 (20.9 days) 2010-03-22 (24.1 days) 2010-07-14 (1.1 months) 2010-06-30 (3.2 months) N (NA) 7 (0) 7 (0) 12 (0) 6 (0) Date+time Min / Max 2010-01-19 07:12:00 - 2010-01-23 21:36:00 2010-01-17 21:36:00 - 2010-01-20 21:36:00 2010-01-16 09:50:24 - 2010-01-19 2010-01-15 12:00:00 - 2010-01-18 00:28:48 Med [IQR] 2010-01-21 [2010-01-19 21:36:00;2010-01-21 05:16:48] 2010-01-19 14:38:24 [2010-01-19 12:28:48;2010-01-20 11:16:48] 2010-01-18 08:24:00 [2010-01-17 20:52:48;2010-01-18 14:24:00] 2010-01-16 23:31:12 [2010-01-15 14:24:00;2010-01-17 16:48:00] Mean (std) 2010-01-20 23:12:41 (1.5 days) 2010-01-19 16:48:00 (22.7 hours) 2010-01-18 03:25:12 (19.2 hours) 2010-01-16 19:07:12 (1.1 days) N (NA) 7 (0) 7 (0) 12 (0) 6 (0) .id label variable Transmission effect auto manual mpg Miles/(US) gallon Min / Max 10.4 / 24.4 15.0 / 33.9 Difference means (t-test CI), ref='auto'manual minus auto: 7.24 [3.64 10.85] Med [IQR] 17.3 [14.9;19.2] 22.8 [21.0;30.4] Mean (std) 17.1 (3.8) 24.4 (6.2) N (NA) 19 (0) 13 (0) cyl Number cylinders 4 3 (27.27%) 8 (72.73%) Odds ratio [95% Wald CI], ref='manual vs auto'6 vs 4: 0.28 [0.03 1.99]8 vs 4: 0.06 [0.01 0.39] 6 4 (57.14%) 3 (42.86%) 8 12 (85.71%) 2 (14.29%)  Transmission Total(N=32) effect auto (N=19) manual (N=13) Miles/(US) gallon    Difference means (t-test CI), ref='auto'manual minus auto: 7.24 [3.64 10.85] Min / Max 10.4 / 24.4 15.0 / 33.9 10.4 / 33.9  Med [IQR] 17.3 [14.9;19.2] 22.8 [21.0;30.4] 19.2 [15.4;22.8]  Mean (std) 17.1 (3.8) 24.4 (6.2) 20.1 (6.0)  N (NA) 19 (0) 13 (0) 32 (0)  Number cylinders    Odds ratio [95% Wald CI], ref='manual vs auto'6 vs 4: 0.28 [0.03 1.99]8 vs 4: 0.06 [0.01 0.39] 4 3 (27.27%) 8 (72.73%) 11 (34.38%)  6 4 (57.14%) 3 (42.86%) 7 (21.88%)  8 12 (85.71%) 2 (14.29%) 14 (43.75%)  Total 19 (59.38%) 13 (40.62%) 32 (100.00%)  lab math Engine shape Tot fx pval straight vshaped Transmission auto 7 (36.84%) 12 (63.16%) 19 (59.38%) Odds ratio [95% Wald CI], ref='vshaped vs straight'manual vs auto: 0.50 [0.11 2.08] p value: 0.3409 (Pearson's Chi-squared test) manual 7 (53.85%) 6 (46.15%) 13 (40.62%) Total 14 (43.75%) 18 (56.25%) 32 (100.00%)","code":"#Crosstables library(crosstable) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union crosstable_options(crosstable_fontsize_header=14,                    crosstable_fontsize_subheaders=10,                    crosstable_fontsize_body=8) crosstable(iris) %>% as_flextable() .cl-64c84188{}.cl-64be6b72{font-family:'DejaVu Sans';font-size:14pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-64be6b86{font-family:'DejaVu Sans';font-size:8pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-64c23662{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-64c2366c{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-64c253c2{width:1.014in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c253cc{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c253cd{width:0.975in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c253d6{width:1.014in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c253d7{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c253e0{width:0.975in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c253e1{width:1.014in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c253ea{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c253eb{width:0.975in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c253ec{width:1.014in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c253f4{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c253fe{width:0.975in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c253ff{width:1.014in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c25408{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c25409{width:0.975in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c2540a{width:1.014in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c25412{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c25413{width:0.975in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c2541c{width:1.014in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c2541d{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c2541e{width:0.975in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c25426{width:1.014in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c25427{width:1.014in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c25428{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-64c25430{width:0.975in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}labelvariablevalueSepal.LengthMin / Max4.3 / 7.9Med [IQR]5.8 [5.1;6.4]Mean (std)5.8 (0.8)N (NA)150 (0)Sepal.WidthMin / Max2.0 / 4.4Med [IQR]3.0 [2.8;3.3]Mean (std)3.1 (0.4)N (NA)150 (0)Petal.LengthMin / Max1.0 / 6.9Med [IQR]4.3 [1.6;5.1]Mean (std)3.8 (1.8)N (NA)150 (0)Petal.WidthMin / Max0.1 / 2.5Med [IQR]1.3 [0.3;1.8]Mean (std)1.2 (0.8)N (NA)150 (0)Speciessetosa50 (33.33%)versicolor50 (33.33%)virginica50 (33.33%)crosstable(mtcars2, -model, by=c(am, vs)) %>% as_flextable(header_show_n=1:2) .cl-6592ddb2{}.cl-65882980{font-family:'DejaVu Sans';font-size:14pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-6588298a{font-family:'DejaVu Sans';font-size:8pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-658cce2c{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-658cce40{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-658ceb1e{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb28{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb32{width:3.45in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb33{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb3c{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb46{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb47{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb50{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb51{width:3.45in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb5a{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb5b{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb64{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb65{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb66{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb78{width:3.45in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb79{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb7a{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb82{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb8c{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb8d{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb96{width:3.45in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb97{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceb98{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658ceba0{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cebaa{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cebab{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cebb4{width:3.45in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cebbe{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cebbf{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cebc8{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cebc9{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cebd2{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cebd3{width:3.45in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cebdc{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cebdd{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cebe6{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cebe7{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cebf0{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cebf1{width:3.45in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cebfa{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cec04{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cec05{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cec0e{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cec0f{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cec18{width:3.45in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cec22{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cec23{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cec2c{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cec2d{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cec36{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cec37{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cec40{width:3.45in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cec4a{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cec4b{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-658cec54{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}labelvariablevs=straight (N=14)vs=vshaped (N=18)am=auto (N=7)am=manual (N=7)am=auto (N=12)am=manual (N=6)Miles/(US) gallonMin / Max17.8 / 24.421.4 / 33.910.4 / 19.215.0 / 26.0Med [IQR]21.4 [18.6;22.1]30.4 [25.1;31.4]15.2 [14.1;16.6]20.4 [16.8;21.0]Mean (std)20.7 (2.5)28.4 (4.8)15.1 (2.8)19.8 (4.0)N (NA)7 (0)7 (0)12 (0)6 (0)Number of cylinders43 (27.27%)7 (63.64%)0 (0%)1 (9.09%)64 (57.14%)0 (0%)0 (0%)3 (42.86%)80 (0%)0 (0%)12 (85.71%)2 (14.29%)Displacement (cu.in.)Min / Max120.1 / 258.071.1 / 121.0275.8 / 472.0120.3 / 351.0Med [IQR]167.6 [143.8;196.3]79.0 [77.2;101.5]355.0 [296.9;410.0]160.0 [148.8;265.8]Mean (std)175.1 (49.1)89.8 (18.8)357.6 (71.8)206.2 (95.2)N (NA)7 (0)7 (0)12 (0)6 (0)Gross horsepowerMin / Max62.0 / 123.052.0 / 113.0150.0 / 245.091.0 / 335.0Med [IQR]105.0 [96.0;116.5]66.0 [65.5;101.0]180.0 [175.0;218.8]142.5 [110.0;241.8]Mean (std)102.1 (20.9)80.6 (24.1)194.2 (33.4)180.8 (98.8)N (NA)7 (0)7 (0)12 (0)6 (0)Rear axle ratioMin / Max2.8 / 3.93.8 / 4.92.8 / 3.73.5 / 4.4Med [IQR]3.7 [3.4;3.9]4.1 [4.0;4.2]3.1 [3.1;3.2]3.9 [3.7;4.1]Mean (std)3.6 (0.5)4.1 (0.4)3.1 (0.2)3.9 (0.3)N (NA)7 (0)7 (0)12 (0)6 (0)Weight (1000 lbs)Min / Max2.5 / 3.51.5 / 2.83.4 / 5.42.1 / 3.6Med [IQR]3.2 [3.2;3.4]1.9 [1.7;2.3]3.8 [3.6;4.4]2.8 [2.7;3.1]Mean (std)3.2 (0.3)2.0 (0.4)4.1 (0.8)2.9 (0.5)N (NA)7 (0)7 (0)12 (0)6 (0)1/4 mile timeMin / Max18.3 / 22.916.9 / 19.915.4 / 18.014.5 / 17.0Med [IQR]20.0 [19.2;20.1]18.6 [18.6;19.2]17.4 [17.0;17.7]16.0 [14.8;16.6]Mean (std)20.0 (1.5)18.7 (0.9)17.1 (0.8)15.8 (1.1)N (NA)7 (0)7 (0)12 (0)6 (0)Number of forward gears33 (20.00%)0 (0%)12 (80.00%)0 (0%)44 (33.33%)6 (50.00%)0 (0%)2 (16.67%)50 (0%)1 (20.00%)0 (0%)4 (80.00%)Number of carburetorsMin / Max1.0 / 4.01.0 / 2.02.0 / 4.02.0 / 8.0Med [IQR]2.0 [1.0;3.0]1.0 [1.0;2.0]3.0 [2.0;4.0]4.0 [4.0;5.5]Mean (std)2.1 (1.3)1.4 (0.5)3.1 (0.9)4.7 (2.1)N (NA)7 (0)7 (0)12 (0)6 (0)Some nonsense dateMin / Max2010-03-04 - 2010-05-042010-02-22 - 2010-04-242010-05-31 - 2010-09-032010-04-02 - 2010-12-02Med [IQR]2010-04-16 [2010-04-06;2010-05-04]2010-03-08 [2010-03-07;2010-04-20]2010-06-30 [2010-06-25;2010-08-04]2010-05-23 [2010-04-21;2010-09-22]Mean (std)2010-04-13 (20.9 days)2010-03-22 (24.1 days)2010-07-14 (1.1 months)2010-06-30 (3.2 months)N (NA)7 (0)7 (0)12 (0)6 (0)Date+timeMin / Max2010-01-19 07:12:00 - 2010-01-23 21:36:002010-01-17 21:36:00 - 2010-01-20 21:36:002010-01-16 09:50:24 - 2010-01-192010-01-15 12:00:00 - 2010-01-18 00:28:48Med [IQR]2010-01-21 [2010-01-19 21:36:00;2010-01-21 05:16:48]2010-01-19 14:38:24 [2010-01-19 12:28:48;2010-01-20 11:16:48]2010-01-18 08:24:00 [2010-01-17 20:52:48;2010-01-18 14:24:00]2010-01-16 23:31:12 [2010-01-15 14:24:00;2010-01-17 16:48:00]Mean (std)2010-01-20 23:12:41 (1.5 days)2010-01-19 16:48:00 (22.7 hours)2010-01-18 03:25:12 (19.2 hours)2010-01-16 19:07:12 (1.1 days)N (NA)7 (0)7 (0)12 (0)6 (0)crosstable(mtcars2, cols=c(mpg, cyl), by=am, effect=TRUE) %>%    as_flextable(keep_id=TRUE, autofit=FALSE) .cl-65d4864a{}.cl-65cbc136{font-family:'DejaVu Sans';font-size:14pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-65cbc140{font-family:'DejaVu Sans';font-size:8pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-65cf2b0a{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-65cf2b1e{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-65cf431a{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-65cf432e{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-65cf432f{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-65cf4338{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-65cf4339{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-65cf4342{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-65cf434c{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-65cf4356{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.idlabelvariableTransmissioneffectautomanualmpgMiles/(US) gallonMin / Max10.4 / 24.415.0 / 33.9Difference in means (t-test CI), ref='auto'manual minus auto: 7.24 [3.64 to 10.85]Med [IQR]17.3 [14.9;19.2]22.8 [21.0;30.4]Mean (std)17.1 (3.8)24.4 (6.2)N (NA)19 (0)13 (0)cylNumber of cylinders43 (27.27%)8 (72.73%)Odds ratio [95% Wald CI], ref='manual vs auto'6 vs 4: 0.28 [0.03 to 1.99]8 vs 4: 0.06 [0.01 to 0.39]64 (57.14%)3 (42.86%)812 (85.71%)2 (14.29%)crosstable(mtcars2, cols=c(mpg, cyl), by=am, effect=TRUE, total=TRUE) %>%    as_flextable(compact=TRUE, header_show_n=TRUE,                 header_show_n_pattern=list(cell=\"{.col} (N={.n})\", total=\"Total\\n(N={.n})\")) .cl-662d462c{}.cl-66245d78{font-family:'DejaVu Sans';font-size:14pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-66245d8c{font-family:'DejaVu Sans';font-size:10pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-66245d96{font-family:'DejaVu Sans';font-size:10pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-66245d97{font-family:'DejaVu Sans';font-size:8pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-6627f0fa{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-6627f10e{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-6627f118{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:25pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-66280914{width:1.871in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6628091e{width:1.623in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6628091f{width:1.935in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-66280928{width:1.187in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-66280929{width:3.592in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-66280932{width:1.871in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6628093c{width:1.623in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6628093d{width:1.935in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-66280946{width:1.187in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-66280947{width:3.592in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-66280950{width:1.871in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-66280951{width:1.623in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6628095a{width:1.935in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6628095b{width:1.187in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-66280964{width:3.592in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6628096e{width:1.871in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6628096f{width:1.623in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-66280978{width:1.935in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-66280979{width:1.187in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-66280982{width:3.592in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-66280983{width:1.871in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-66280984{width:1.623in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6628098c{width:1.935in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-66280996{width:1.187in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-66280997{width:3.592in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-662809a0{width:1.871in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-662809a1{width:1.623in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-662809aa{width:1.935in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-662809ab{width:1.187in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-662809b4{width:3.592in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-662809b5{width:1.871in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-662809be{width:1.623in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-662809bf{width:1.935in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-662809c0{width:1.187in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-662809c8{width:3.592in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-662809c9{width:1.871in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-662809d2{width:1.623in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-662809d3{width:1.935in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-662809dc{width:1.187in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-662809dd{width:3.592in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}TransmissionTotal(N=32)effectauto (N=19)manual (N=13)Miles/(US) gallonDifference in means (t-test CI), ref='auto'manual minus auto: 7.24 [3.64 to 10.85]Min / Max10.4 / 24.415.0 / 33.910.4 / 33.9Med [IQR]17.3 [14.9;19.2]22.8 [21.0;30.4]19.2 [15.4;22.8]Mean (std)17.1 (3.8)24.4 (6.2)20.1 (6.0)N (NA)19 (0)13 (0)32 (0)Number of cylindersOdds ratio [95% Wald CI], ref='manual vs auto'6 vs 4: 0.28 [0.03 to 1.99]8 vs 4: 0.06 [0.01 to 0.39]43 (27.27%)8 (72.73%)11 (34.38%)64 (57.14%)3 (42.86%)7 (21.88%)812 (85.71%)2 (14.29%)14 (43.75%)Total19 (59.38%)13 (40.62%)32 (100.00%) #Renaming (because why not?) crosstable(mtcars2, am, by=vs, total=\"both\", test=TRUE, effect=TRUE) %>%    rename(ID=.id, math=variable, Tot=Total, lab=label, pval=test, fx=effect) %>%    as_flextable(by_header = \"Engine shape\",                 generic_labels=list(id = \"ID\", variable = \"math\", total=\"Tot\",                                     label = \"lab\", test = \"pval\", effect=\"fx\")) #> Warning: Be aware that automatic global testing should only be done in an exploratory #> context, as it would cause extensive alpha inflation otherwise. #> This warning is displayed once every 8 hours. .cl-667edd02{}.cl-667628ba{font-family:'DejaVu Sans';font-size:14pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-667628c4{font-family:'DejaVu Sans';font-size:8pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-66799568{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-6679957c{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-6679acce{width:1.019in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679acd8{width:0.85in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ace2{width:1.158in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ace3{width:1.208in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679acec{width:1.043in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679aced{width:3.167in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679acf6{width:1.86in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679acf7{width:1.019in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ad00{width:0.85in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ad01{width:1.158in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ad02{width:1.208in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ad14{width:1.043in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ad15{width:3.167in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ad1e{width:1.86in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ad1f{width:1.019in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ad20{width:0.85in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ad28{width:1.158in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ad29{width:1.208in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ad2a{width:1.043in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ad32{width:3.167in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ad33{width:1.86in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ad3c{width:1.019in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ad3d{width:3.167in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ad46{width:1.86in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ad47{width:0.85in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ad50{width:1.158in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ad51{width:1.208in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6679ad52{width:1.043in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}labmathEngine shapeTotfxpvalstraightvshapedTransmissionauto7 (36.84%)12 (63.16%)19 (59.38%)Odds ratio [95% Wald CI], ref='vshaped vs straight'manual vs auto: 0.50 [0.11 to 2.08]p value: 0.3409 (Pearson's Chi-squared test)manual7 (53.85%)6 (46.15%)13 (40.62%)Total14 (43.75%)18 (56.25%)32 (100.00%)"},{"path":"https://danchaltiel.github.io/crosstable/reference/as_gt.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a crosstable object into a formatted gt table. — as_gt.crosstable","title":"Converts a crosstable object into a formatted gt table. — as_gt.crosstable","text":"Converts crosstable object formatted gt table. Method convert object gt table Default method convert object gt table","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/as_gt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a crosstable object into a formatted gt table. — as_gt.crosstable","text":"","code":"# S3 method for crosstable as_gt(   x,   show_test_name = TRUE,   by_header = NULL,   keep_id = FALSE,   generic_labels = list(id = \".id\", variable = \"variable\", value = \"value\", total =     \"Total\", label = \"label\", test = \"test\", effect = \"effect\"),   ... )  as_gt(x, ...)  # S3 method for default as_gt(x, ...)"},{"path":"https://danchaltiel.github.io/crosstable/reference/as_gt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a crosstable object into a formatted gt table. — as_gt.crosstable","text":"x object converted show_test_name test column, show test name by_header string override header keep_id whether keep .id column generic_labels names crosstable default columns ... arguments custom methods","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/as_gt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a crosstable object into a formatted gt table. — as_gt.crosstable","text":"formatted gt table","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/as_gt.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Converts a crosstable object into a formatted gt table. — as_gt.crosstable","text":"as_gt(crosstable): crosstables as_gt(default): default function","code":""},{"path":[]},{"path":"https://danchaltiel.github.io/crosstable/reference/as_gt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Converts a crosstable object into a formatted gt table. — as_gt.crosstable","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/as_gt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts a crosstable object into a formatted gt table. — as_gt.crosstable","text":"","code":"xx = mtcars2 %>% dplyr::select(2:10) crosstable(xx) %>% as_gt #> <div id=\"vkhrghanwl\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\"> #>   <style>#vkhrghanwl table { #>   font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; #>   -webkit-font-smoothing: antialiased; #>   -moz-osx-font-smoothing: grayscale; #> } #>  #> #vkhrghanwl thead, #vkhrghanwl tbody, #vkhrghanwl tfoot, #vkhrghanwl tr, #vkhrghanwl td, #vkhrghanwl th { #>   border-style: none; #> } #>  #> #vkhrghanwl p { #>   margin: 0; #>   padding: 0; #> } #>  #> #vkhrghanwl .gt_table { #>   display: table; #>   border-collapse: collapse; #>   line-height: normal; #>   margin-left: auto; #>   margin-right: auto; #>   color: #333333; #>   font-size: 16px; #>   font-weight: normal; #>   font-style: normal; #>   background-color: #FFFFFF; #>   width: auto; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #A8A8A8; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #A8A8A8; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #> } #>  #> #vkhrghanwl .gt_caption { #>   padding-top: 4px; #>   padding-bottom: 4px; #> } #>  #> #vkhrghanwl .gt_title { #>   color: #333333; #>   font-size: 125%; #>   font-weight: initial; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-color: #FFFFFF; #>   border-bottom-width: 0; #> } #>  #> #vkhrghanwl .gt_subtitle { #>   color: #333333; #>   font-size: 85%; #>   font-weight: initial; #>   padding-top: 3px; #>   padding-bottom: 5px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-color: #FFFFFF; #>   border-top-width: 0; #> } #>  #> #vkhrghanwl .gt_heading { #>   background-color: #FFFFFF; #>   text-align: center; #>   border-bottom-color: #FFFFFF; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #vkhrghanwl .gt_bottom_border { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #vkhrghanwl .gt_col_headings { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #vkhrghanwl .gt_col_heading { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 6px; #>   padding-left: 5px; #>   padding-right: 5px; #>   overflow-x: hidden; #> } #>  #> #vkhrghanwl .gt_column_spanner_outer { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   padding-top: 0; #>   padding-bottom: 0; #>   padding-left: 4px; #>   padding-right: 4px; #> } #>  #> #vkhrghanwl .gt_column_spanner_outer:first-child { #>   padding-left: 0; #> } #>  #> #vkhrghanwl .gt_column_spanner_outer:last-child { #>   padding-right: 0; #> } #>  #> #vkhrghanwl .gt_column_spanner { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 5px; #>   overflow-x: hidden; #>   display: inline-block; #>   width: 100%; #> } #>  #> #vkhrghanwl .gt_spanner_row { #>   border-bottom-style: hidden; #> } #>  #> #vkhrghanwl .gt_group_heading { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   text-align: left; #> } #>  #> #vkhrghanwl .gt_empty_group_heading { #>   padding: 0.5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: middle; #> } #>  #> #vkhrghanwl .gt_from_md > :first-child { #>   margin-top: 0; #> } #>  #> #vkhrghanwl .gt_from_md > :last-child { #>   margin-bottom: 0; #> } #>  #> #vkhrghanwl .gt_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   margin: 10px; #>   border-top-style: solid; #>   border-top-width: 1px; #>   border-top-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   overflow-x: hidden; #> } #>  #> #vkhrghanwl .gt_stub { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #vkhrghanwl .gt_stub_row_group { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #>   vertical-align: top; #> } #>  #> #vkhrghanwl .gt_row_group_first td { #>   border-top-width: 2px; #> } #>  #> #vkhrghanwl .gt_row_group_first th { #>   border-top-width: 2px; #> } #>  #> #vkhrghanwl .gt_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #vkhrghanwl .gt_first_summary_row { #>   border-top-style: solid; #>   border-top-color: #D3D3D3; #> } #>  #> #vkhrghanwl .gt_first_summary_row.thick { #>   border-top-width: 2px; #> } #>  #> #vkhrghanwl .gt_last_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #vkhrghanwl .gt_grand_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #vkhrghanwl .gt_first_grand_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-style: double; #>   border-top-width: 6px; #>   border-top-color: #D3D3D3; #> } #>  #> #vkhrghanwl .gt_last_grand_summary_row_top { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: double; #>   border-bottom-width: 6px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #vkhrghanwl .gt_striped { #>   background-color: rgba(128, 128, 128, 0.05); #> } #>  #> #vkhrghanwl .gt_table_body { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #vkhrghanwl .gt_footnotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #vkhrghanwl .gt_footnote { #>   margin: 0px; #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #vkhrghanwl .gt_sourcenotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #vkhrghanwl .gt_sourcenote { #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #vkhrghanwl .gt_left { #>   text-align: left; #> } #>  #> #vkhrghanwl .gt_center { #>   text-align: center; #> } #>  #> #vkhrghanwl .gt_right { #>   text-align: right; #>   font-variant-numeric: tabular-nums; #> } #>  #> #vkhrghanwl .gt_font_normal { #>   font-weight: normal; #> } #>  #> #vkhrghanwl .gt_font_bold { #>   font-weight: bold; #> } #>  #> #vkhrghanwl .gt_font_italic { #>   font-style: italic; #> } #>  #> #vkhrghanwl .gt_super { #>   font-size: 65%; #> } #>  #> #vkhrghanwl .gt_footnote_marks { #>   font-size: 75%; #>   vertical-align: 0.4em; #>   position: initial; #> } #>  #> #vkhrghanwl .gt_asterisk { #>   font-size: 100%; #>   vertical-align: 0; #> } #>  #> #vkhrghanwl .gt_indent_1 { #>   text-indent: 5px; #> } #>  #> #vkhrghanwl .gt_indent_2 { #>   text-indent: 10px; #> } #>  #> #vkhrghanwl .gt_indent_3 { #>   text-indent: 15px; #> } #>  #> #vkhrghanwl .gt_indent_4 { #>   text-indent: 20px; #> } #>  #> #vkhrghanwl .gt_indent_5 { #>   text-indent: 25px; #> } #> <\/style> #>   <table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\"> #>   <thead> #>      #>     <tr class=\"gt_col_headings\"> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"\"><\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"value\">value<\/th> #>     <\/tr> #>   <\/thead> #>   <tbody class=\"gt_table_body\"> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"2\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Miles/(US) gallon\">Miles/(US) gallon<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_1\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Min / Max<\/th> #> <td headers=\"Miles/(US) gallon stub_1_1 value\" class=\"gt_row gt_left\">10.4 / 33.9<\/td><\/tr> #>     <tr><th id=\"stub_1_2\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Med [IQR]<\/th> #> <td headers=\"Miles/(US) gallon stub_1_2 value\" class=\"gt_row gt_left\">19.2 [15.4;22.8]<\/td><\/tr> #>     <tr><th id=\"stub_1_3\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Mean (std)<\/th> #> <td headers=\"Miles/(US) gallon stub_1_3 value\" class=\"gt_row gt_left\">20.1 (6.0)<\/td><\/tr> #>     <tr><th id=\"stub_1_4\" scope=\"row\" class=\"gt_row gt_left gt_stub\">N (NA)<\/th> #> <td headers=\"Miles/(US) gallon stub_1_4 value\" class=\"gt_row gt_left\">32 (0)<\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"2\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Number of cylinders\">Number of cylinders<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_5\" scope=\"row\" class=\"gt_row gt_left gt_stub\">4<\/th> #> <td headers=\"Number of cylinders stub_1_5 value\" class=\"gt_row gt_left\">11 (34.38%)<\/td><\/tr> #>     <tr><th id=\"stub_1_6\" scope=\"row\" class=\"gt_row gt_left gt_stub\">6<\/th> #> <td headers=\"Number of cylinders stub_1_6 value\" class=\"gt_row gt_left\">7 (21.88%)<\/td><\/tr> #>     <tr><th id=\"stub_1_7\" scope=\"row\" class=\"gt_row gt_left gt_stub\">8<\/th> #> <td headers=\"Number of cylinders stub_1_7 value\" class=\"gt_row gt_left\">14 (43.75%)<\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"2\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Displacement (cu.in.)\">Displacement (cu.in.)<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_8\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Min / Max<\/th> #> <td headers=\"Displacement (cu.in.) stub_1_8 value\" class=\"gt_row gt_left\">71.1 / 472.0<\/td><\/tr> #>     <tr><th id=\"stub_1_9\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Med [IQR]<\/th> #> <td headers=\"Displacement (cu.in.) stub_1_9 value\" class=\"gt_row gt_left\">196.3 [120.8;326.0]<\/td><\/tr> #>     <tr><th id=\"stub_1_10\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Mean (std)<\/th> #> <td headers=\"Displacement (cu.in.) stub_1_10 value\" class=\"gt_row gt_left\">230.7 (123.9)<\/td><\/tr> #>     <tr><th id=\"stub_1_11\" scope=\"row\" class=\"gt_row gt_left gt_stub\">N (NA)<\/th> #> <td headers=\"Displacement (cu.in.) stub_1_11 value\" class=\"gt_row gt_left\">32 (0)<\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"2\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Gross horsepower\">Gross horsepower<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_12\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Min / Max<\/th> #> <td headers=\"Gross horsepower stub_1_12 value\" class=\"gt_row gt_left\">52.0 / 335.0<\/td><\/tr> #>     <tr><th id=\"stub_1_13\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Med [IQR]<\/th> #> <td headers=\"Gross horsepower stub_1_13 value\" class=\"gt_row gt_left\">123.0 [96.5;180.0]<\/td><\/tr> #>     <tr><th id=\"stub_1_14\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Mean (std)<\/th> #> <td headers=\"Gross horsepower stub_1_14 value\" class=\"gt_row gt_left\">146.7 (68.6)<\/td><\/tr> #>     <tr><th id=\"stub_1_15\" scope=\"row\" class=\"gt_row gt_left gt_stub\">N (NA)<\/th> #> <td headers=\"Gross horsepower stub_1_15 value\" class=\"gt_row gt_left\">32 (0)<\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"2\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Rear axle ratio\">Rear axle ratio<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_16\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Min / Max<\/th> #> <td headers=\"Rear axle ratio stub_1_16 value\" class=\"gt_row gt_left\">2.8 / 4.9<\/td><\/tr> #>     <tr><th id=\"stub_1_17\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Med [IQR]<\/th> #> <td headers=\"Rear axle ratio stub_1_17 value\" class=\"gt_row gt_left\">3.7 [3.1;3.9]<\/td><\/tr> #>     <tr><th id=\"stub_1_18\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Mean (std)<\/th> #> <td headers=\"Rear axle ratio stub_1_18 value\" class=\"gt_row gt_left\">3.6 (0.5)<\/td><\/tr> #>     <tr><th id=\"stub_1_19\" scope=\"row\" class=\"gt_row gt_left gt_stub\">N (NA)<\/th> #> <td headers=\"Rear axle ratio stub_1_19 value\" class=\"gt_row gt_left\">32 (0)<\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"2\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Weight (1000 lbs)\">Weight (1000 lbs)<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_20\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Min / Max<\/th> #> <td headers=\"Weight (1000 lbs) stub_1_20 value\" class=\"gt_row gt_left\">1.5 / 5.4<\/td><\/tr> #>     <tr><th id=\"stub_1_21\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Med [IQR]<\/th> #> <td headers=\"Weight (1000 lbs) stub_1_21 value\" class=\"gt_row gt_left\">3.3 [2.6;3.6]<\/td><\/tr> #>     <tr><th id=\"stub_1_22\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Mean (std)<\/th> #> <td headers=\"Weight (1000 lbs) stub_1_22 value\" class=\"gt_row gt_left\">3.2 (1.0)<\/td><\/tr> #>     <tr><th id=\"stub_1_23\" scope=\"row\" class=\"gt_row gt_left gt_stub\">N (NA)<\/th> #> <td headers=\"Weight (1000 lbs) stub_1_23 value\" class=\"gt_row gt_left\">32 (0)<\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"2\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"1/4 mile time\">1/4 mile time<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_24\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Min / Max<\/th> #> <td headers=\"1/4 mile time stub_1_24 value\" class=\"gt_row gt_left\">14.5 / 22.9<\/td><\/tr> #>     <tr><th id=\"stub_1_25\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Med [IQR]<\/th> #> <td headers=\"1/4 mile time stub_1_25 value\" class=\"gt_row gt_left\">17.7 [16.9;18.9]<\/td><\/tr> #>     <tr><th id=\"stub_1_26\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Mean (std)<\/th> #> <td headers=\"1/4 mile time stub_1_26 value\" class=\"gt_row gt_left\">17.8 (1.8)<\/td><\/tr> #>     <tr><th id=\"stub_1_27\" scope=\"row\" class=\"gt_row gt_left gt_stub\">N (NA)<\/th> #> <td headers=\"1/4 mile time stub_1_27 value\" class=\"gt_row gt_left\">32 (0)<\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"2\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Engine\">Engine<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_28\" scope=\"row\" class=\"gt_row gt_left gt_stub\">straight<\/th> #> <td headers=\"Engine stub_1_28 value\" class=\"gt_row gt_left\">14 (43.75%)<\/td><\/tr> #>     <tr><th id=\"stub_1_29\" scope=\"row\" class=\"gt_row gt_left gt_stub\">vshaped<\/th> #> <td headers=\"Engine stub_1_29 value\" class=\"gt_row gt_left\">18 (56.25%)<\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"2\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Transmission\">Transmission<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_30\" scope=\"row\" class=\"gt_row gt_left gt_stub\">auto<\/th> #> <td headers=\"Transmission stub_1_30 value\" class=\"gt_row gt_left\">19 (59.38%)<\/td><\/tr> #>     <tr><th id=\"stub_1_31\" scope=\"row\" class=\"gt_row gt_left gt_stub\">manual<\/th> #> <td headers=\"Transmission stub_1_31 value\" class=\"gt_row gt_left\">13 (40.62%)<\/td><\/tr> #>   <\/tbody> #>    #>    #> <\/table> #> <\/div> crosstable(xx, by=am) %>% as_gt #> <div id=\"whwkjhjlff\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\"> #>   <style>#whwkjhjlff table { #>   font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; #>   -webkit-font-smoothing: antialiased; #>   -moz-osx-font-smoothing: grayscale; #> } #>  #> #whwkjhjlff thead, #whwkjhjlff tbody, #whwkjhjlff tfoot, #whwkjhjlff tr, #whwkjhjlff td, #whwkjhjlff th { #>   border-style: none; #> } #>  #> #whwkjhjlff p { #>   margin: 0; #>   padding: 0; #> } #>  #> #whwkjhjlff .gt_table { #>   display: table; #>   border-collapse: collapse; #>   line-height: normal; #>   margin-left: auto; #>   margin-right: auto; #>   color: #333333; #>   font-size: 16px; #>   font-weight: normal; #>   font-style: normal; #>   background-color: #FFFFFF; #>   width: auto; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #A8A8A8; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #A8A8A8; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #> } #>  #> #whwkjhjlff .gt_caption { #>   padding-top: 4px; #>   padding-bottom: 4px; #> } #>  #> #whwkjhjlff .gt_title { #>   color: #333333; #>   font-size: 125%; #>   font-weight: initial; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-color: #FFFFFF; #>   border-bottom-width: 0; #> } #>  #> #whwkjhjlff .gt_subtitle { #>   color: #333333; #>   font-size: 85%; #>   font-weight: initial; #>   padding-top: 3px; #>   padding-bottom: 5px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-color: #FFFFFF; #>   border-top-width: 0; #> } #>  #> #whwkjhjlff .gt_heading { #>   background-color: #FFFFFF; #>   text-align: center; #>   border-bottom-color: #FFFFFF; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #whwkjhjlff .gt_bottom_border { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #whwkjhjlff .gt_col_headings { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #whwkjhjlff .gt_col_heading { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 6px; #>   padding-left: 5px; #>   padding-right: 5px; #>   overflow-x: hidden; #> } #>  #> #whwkjhjlff .gt_column_spanner_outer { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   padding-top: 0; #>   padding-bottom: 0; #>   padding-left: 4px; #>   padding-right: 4px; #> } #>  #> #whwkjhjlff .gt_column_spanner_outer:first-child { #>   padding-left: 0; #> } #>  #> #whwkjhjlff .gt_column_spanner_outer:last-child { #>   padding-right: 0; #> } #>  #> #whwkjhjlff .gt_column_spanner { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 5px; #>   overflow-x: hidden; #>   display: inline-block; #>   width: 100%; #> } #>  #> #whwkjhjlff .gt_spanner_row { #>   border-bottom-style: hidden; #> } #>  #> #whwkjhjlff .gt_group_heading { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   text-align: left; #> } #>  #> #whwkjhjlff .gt_empty_group_heading { #>   padding: 0.5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: middle; #> } #>  #> #whwkjhjlff .gt_from_md > :first-child { #>   margin-top: 0; #> } #>  #> #whwkjhjlff .gt_from_md > :last-child { #>   margin-bottom: 0; #> } #>  #> #whwkjhjlff .gt_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   margin: 10px; #>   border-top-style: solid; #>   border-top-width: 1px; #>   border-top-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   overflow-x: hidden; #> } #>  #> #whwkjhjlff .gt_stub { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #whwkjhjlff .gt_stub_row_group { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #>   vertical-align: top; #> } #>  #> #whwkjhjlff .gt_row_group_first td { #>   border-top-width: 2px; #> } #>  #> #whwkjhjlff .gt_row_group_first th { #>   border-top-width: 2px; #> } #>  #> #whwkjhjlff .gt_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #whwkjhjlff .gt_first_summary_row { #>   border-top-style: solid; #>   border-top-color: #D3D3D3; #> } #>  #> #whwkjhjlff .gt_first_summary_row.thick { #>   border-top-width: 2px; #> } #>  #> #whwkjhjlff .gt_last_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #whwkjhjlff .gt_grand_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #whwkjhjlff .gt_first_grand_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-style: double; #>   border-top-width: 6px; #>   border-top-color: #D3D3D3; #> } #>  #> #whwkjhjlff .gt_last_grand_summary_row_top { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: double; #>   border-bottom-width: 6px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #whwkjhjlff .gt_striped { #>   background-color: rgba(128, 128, 128, 0.05); #> } #>  #> #whwkjhjlff .gt_table_body { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #whwkjhjlff .gt_footnotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #whwkjhjlff .gt_footnote { #>   margin: 0px; #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #whwkjhjlff .gt_sourcenotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #whwkjhjlff .gt_sourcenote { #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #whwkjhjlff .gt_left { #>   text-align: left; #> } #>  #> #whwkjhjlff .gt_center { #>   text-align: center; #> } #>  #> #whwkjhjlff .gt_right { #>   text-align: right; #>   font-variant-numeric: tabular-nums; #> } #>  #> #whwkjhjlff .gt_font_normal { #>   font-weight: normal; #> } #>  #> #whwkjhjlff .gt_font_bold { #>   font-weight: bold; #> } #>  #> #whwkjhjlff .gt_font_italic { #>   font-style: italic; #> } #>  #> #whwkjhjlff .gt_super { #>   font-size: 65%; #> } #>  #> #whwkjhjlff .gt_footnote_marks { #>   font-size: 75%; #>   vertical-align: 0.4em; #>   position: initial; #> } #>  #> #whwkjhjlff .gt_asterisk { #>   font-size: 100%; #>   vertical-align: 0; #> } #>  #> #whwkjhjlff .gt_indent_1 { #>   text-indent: 5px; #> } #>  #> #whwkjhjlff .gt_indent_2 { #>   text-indent: 10px; #> } #>  #> #whwkjhjlff .gt_indent_3 { #>   text-indent: 15px; #> } #>  #> #whwkjhjlff .gt_indent_4 { #>   text-indent: 20px; #> } #>  #> #whwkjhjlff .gt_indent_5 { #>   text-indent: 25px; #> } #> <\/style> #>   <table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\"> #>   <thead> #>      #>     <tr class=\"gt_col_headings gt_spanner_row\"> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"><\/th> #>       <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\" id=\"Transmission\"> #>         <span class=\"gt_column_spanner\">Transmission<\/span> #>       <\/th> #>     <\/tr> #>     <tr class=\"gt_col_headings\"> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"auto\">auto<\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"manual\">manual<\/th> #>     <\/tr> #>   <\/thead> #>   <tbody class=\"gt_table_body\"> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"3\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Miles/(US) gallon\">Miles/(US) gallon<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_1\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Min / Max<\/th> #> <td headers=\"Miles/(US) gallon stub_1_1 auto\" class=\"gt_row gt_left\">10.4 / 24.4<\/td> #> <td headers=\"Miles/(US) gallon stub_1_1 manual\" class=\"gt_row gt_left\">15.0 / 33.9<\/td><\/tr> #>     <tr><th id=\"stub_1_2\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Med [IQR]<\/th> #> <td headers=\"Miles/(US) gallon stub_1_2 auto\" class=\"gt_row gt_left\">17.3 [14.9;19.2]<\/td> #> <td headers=\"Miles/(US) gallon stub_1_2 manual\" class=\"gt_row gt_left\">22.8 [21.0;30.4]<\/td><\/tr> #>     <tr><th id=\"stub_1_3\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Mean (std)<\/th> #> <td headers=\"Miles/(US) gallon stub_1_3 auto\" class=\"gt_row gt_left\">17.1 (3.8)<\/td> #> <td headers=\"Miles/(US) gallon stub_1_3 manual\" class=\"gt_row gt_left\">24.4 (6.2)<\/td><\/tr> #>     <tr><th id=\"stub_1_4\" scope=\"row\" class=\"gt_row gt_left gt_stub\">N (NA)<\/th> #> <td headers=\"Miles/(US) gallon stub_1_4 auto\" class=\"gt_row gt_left\">19 (0)<\/td> #> <td headers=\"Miles/(US) gallon stub_1_4 manual\" class=\"gt_row gt_left\">13 (0)<\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"3\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Number of cylinders\">Number of cylinders<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_5\" scope=\"row\" class=\"gt_row gt_left gt_stub\">4<\/th> #> <td headers=\"Number of cylinders stub_1_5 auto\" class=\"gt_row gt_left\">3 (27.27%)<\/td> #> <td headers=\"Number of cylinders stub_1_5 manual\" class=\"gt_row gt_left\">8 (72.73%)<\/td><\/tr> #>     <tr><th id=\"stub_1_6\" scope=\"row\" class=\"gt_row gt_left gt_stub\">6<\/th> #> <td headers=\"Number of cylinders stub_1_6 auto\" class=\"gt_row gt_left\">4 (57.14%)<\/td> #> <td headers=\"Number of cylinders stub_1_6 manual\" class=\"gt_row gt_left\">3 (42.86%)<\/td><\/tr> #>     <tr><th id=\"stub_1_7\" scope=\"row\" class=\"gt_row gt_left gt_stub\">8<\/th> #> <td headers=\"Number of cylinders stub_1_7 auto\" class=\"gt_row gt_left\">12 (85.71%)<\/td> #> <td headers=\"Number of cylinders stub_1_7 manual\" class=\"gt_row gt_left\">2 (14.29%)<\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"3\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Displacement (cu.in.)\">Displacement (cu.in.)<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_8\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Min / Max<\/th> #> <td headers=\"Displacement (cu.in.) stub_1_8 auto\" class=\"gt_row gt_left\">120.1 / 472.0<\/td> #> <td headers=\"Displacement (cu.in.) stub_1_8 manual\" class=\"gt_row gt_left\">71.1 / 351.0<\/td><\/tr> #>     <tr><th id=\"stub_1_9\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Med [IQR]<\/th> #> <td headers=\"Displacement (cu.in.) stub_1_9 auto\" class=\"gt_row gt_left\">275.8 [196.3;360.0]<\/td> #> <td headers=\"Displacement (cu.in.) stub_1_9 manual\" class=\"gt_row gt_left\">120.3 [79.0;160.0]<\/td><\/tr> #>     <tr><th id=\"stub_1_10\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Mean (std)<\/th> #> <td headers=\"Displacement (cu.in.) stub_1_10 auto\" class=\"gt_row gt_left\">290.4 (110.2)<\/td> #> <td headers=\"Displacement (cu.in.) stub_1_10 manual\" class=\"gt_row gt_left\">143.5 (87.2)<\/td><\/tr> #>     <tr><th id=\"stub_1_11\" scope=\"row\" class=\"gt_row gt_left gt_stub\">N (NA)<\/th> #> <td headers=\"Displacement (cu.in.) stub_1_11 auto\" class=\"gt_row gt_left\">19 (0)<\/td> #> <td headers=\"Displacement (cu.in.) stub_1_11 manual\" class=\"gt_row gt_left\">13 (0)<\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"3\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Gross horsepower\">Gross horsepower<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_12\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Min / Max<\/th> #> <td headers=\"Gross horsepower stub_1_12 auto\" class=\"gt_row gt_left\">62.0 / 245.0<\/td> #> <td headers=\"Gross horsepower stub_1_12 manual\" class=\"gt_row gt_left\">52.0 / 335.0<\/td><\/tr> #>     <tr><th id=\"stub_1_13\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Med [IQR]<\/th> #> <td headers=\"Gross horsepower stub_1_13 auto\" class=\"gt_row gt_left\">175.0 [116.5;192.5]<\/td> #> <td headers=\"Gross horsepower stub_1_13 manual\" class=\"gt_row gt_left\">109.0 [66.0;113.0]<\/td><\/tr> #>     <tr><th id=\"stub_1_14\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Mean (std)<\/th> #> <td headers=\"Gross horsepower stub_1_14 auto\" class=\"gt_row gt_left\">160.3 (53.9)<\/td> #> <td headers=\"Gross horsepower stub_1_14 manual\" class=\"gt_row gt_left\">126.8 (84.1)<\/td><\/tr> #>     <tr><th id=\"stub_1_15\" scope=\"row\" class=\"gt_row gt_left gt_stub\">N (NA)<\/th> #> <td headers=\"Gross horsepower stub_1_15 auto\" class=\"gt_row gt_left\">19 (0)<\/td> #> <td headers=\"Gross horsepower stub_1_15 manual\" class=\"gt_row gt_left\">13 (0)<\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"3\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Rear axle ratio\">Rear axle ratio<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_16\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Min / Max<\/th> #> <td headers=\"Rear axle ratio stub_1_16 auto\" class=\"gt_row gt_left\">2.8 / 3.9<\/td> #> <td headers=\"Rear axle ratio stub_1_16 manual\" class=\"gt_row gt_left\">3.5 / 4.9<\/td><\/tr> #>     <tr><th id=\"stub_1_17\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Med [IQR]<\/th> #> <td headers=\"Rear axle ratio stub_1_17 auto\" class=\"gt_row gt_left\">3.1 [3.1;3.7]<\/td> #> <td headers=\"Rear axle ratio stub_1_17 manual\" class=\"gt_row gt_left\">4.1 [3.9;4.2]<\/td><\/tr> #>     <tr><th id=\"stub_1_18\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Mean (std)<\/th> #> <td headers=\"Rear axle ratio stub_1_18 auto\" class=\"gt_row gt_left\">3.3 (0.4)<\/td> #> <td headers=\"Rear axle ratio stub_1_18 manual\" class=\"gt_row gt_left\">4.0 (0.4)<\/td><\/tr> #>     <tr><th id=\"stub_1_19\" scope=\"row\" class=\"gt_row gt_left gt_stub\">N (NA)<\/th> #> <td headers=\"Rear axle ratio stub_1_19 auto\" class=\"gt_row gt_left\">19 (0)<\/td> #> <td headers=\"Rear axle ratio stub_1_19 manual\" class=\"gt_row gt_left\">13 (0)<\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"3\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Weight (1000 lbs)\">Weight (1000 lbs)<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_20\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Min / Max<\/th> #> <td headers=\"Weight (1000 lbs) stub_1_20 auto\" class=\"gt_row gt_left\">2.5 / 5.4<\/td> #> <td headers=\"Weight (1000 lbs) stub_1_20 manual\" class=\"gt_row gt_left\">1.5 / 3.6<\/td><\/tr> #>     <tr><th id=\"stub_1_21\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Med [IQR]<\/th> #> <td headers=\"Weight (1000 lbs) stub_1_21 auto\" class=\"gt_row gt_left\">3.5 [3.4;3.8]<\/td> #> <td headers=\"Weight (1000 lbs) stub_1_21 manual\" class=\"gt_row gt_left\">2.3 [1.9;2.8]<\/td><\/tr> #>     <tr><th id=\"stub_1_22\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Mean (std)<\/th> #> <td headers=\"Weight (1000 lbs) stub_1_22 auto\" class=\"gt_row gt_left\">3.8 (0.8)<\/td> #> <td headers=\"Weight (1000 lbs) stub_1_22 manual\" class=\"gt_row gt_left\">2.4 (0.6)<\/td><\/tr> #>     <tr><th id=\"stub_1_23\" scope=\"row\" class=\"gt_row gt_left gt_stub\">N (NA)<\/th> #> <td headers=\"Weight (1000 lbs) stub_1_23 auto\" class=\"gt_row gt_left\">19 (0)<\/td> #> <td headers=\"Weight (1000 lbs) stub_1_23 manual\" class=\"gt_row gt_left\">13 (0)<\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"3\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"1/4 mile time\">1/4 mile time<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_24\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Min / Max<\/th> #> <td headers=\"1/4 mile time stub_1_24 auto\" class=\"gt_row gt_left\">15.4 / 22.9<\/td> #> <td headers=\"1/4 mile time stub_1_24 manual\" class=\"gt_row gt_left\">14.5 / 19.9<\/td><\/tr> #>     <tr><th id=\"stub_1_25\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Med [IQR]<\/th> #> <td headers=\"1/4 mile time stub_1_25 auto\" class=\"gt_row gt_left\">17.8 [17.2;19.2]<\/td> #> <td headers=\"1/4 mile time stub_1_25 manual\" class=\"gt_row gt_left\">17.0 [16.5;18.6]<\/td><\/tr> #>     <tr><th id=\"stub_1_26\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Mean (std)<\/th> #> <td headers=\"1/4 mile time stub_1_26 auto\" class=\"gt_row gt_left\">18.2 (1.8)<\/td> #> <td headers=\"1/4 mile time stub_1_26 manual\" class=\"gt_row gt_left\">17.4 (1.8)<\/td><\/tr> #>     <tr><th id=\"stub_1_27\" scope=\"row\" class=\"gt_row gt_left gt_stub\">N (NA)<\/th> #> <td headers=\"1/4 mile time stub_1_27 auto\" class=\"gt_row gt_left\">19 (0)<\/td> #> <td headers=\"1/4 mile time stub_1_27 manual\" class=\"gt_row gt_left\">13 (0)<\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"3\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Engine\">Engine<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_28\" scope=\"row\" class=\"gt_row gt_left gt_stub\">straight<\/th> #> <td headers=\"Engine stub_1_28 auto\" class=\"gt_row gt_left\">7 (50.00%)<\/td> #> <td headers=\"Engine stub_1_28 manual\" class=\"gt_row gt_left\">7 (50.00%)<\/td><\/tr> #>     <tr><th id=\"stub_1_29\" scope=\"row\" class=\"gt_row gt_left gt_stub\">vshaped<\/th> #> <td headers=\"Engine stub_1_29 auto\" class=\"gt_row gt_left\">12 (66.67%)<\/td> #> <td headers=\"Engine stub_1_29 manual\" class=\"gt_row gt_left\">6 (33.33%)<\/td><\/tr> #>   <\/tbody> #>    #>    #> <\/table> #> <\/div> crosstable(xx, by=cyl, test=TRUE, total=TRUE) %>%    as_gt(keep_id=TRUE, show_test_name=FALSE, by_header=\"Cylinders\") #> <div id=\"llniksmhms\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\"> #>   <style>#llniksmhms table { #>   font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; #>   -webkit-font-smoothing: antialiased; #>   -moz-osx-font-smoothing: grayscale; #> } #>  #> #llniksmhms thead, #llniksmhms tbody, #llniksmhms tfoot, #llniksmhms tr, #llniksmhms td, #llniksmhms th { #>   border-style: none; #> } #>  #> #llniksmhms p { #>   margin: 0; #>   padding: 0; #> } #>  #> #llniksmhms .gt_table { #>   display: table; #>   border-collapse: collapse; #>   line-height: normal; #>   margin-left: auto; #>   margin-right: auto; #>   color: #333333; #>   font-size: 16px; #>   font-weight: normal; #>   font-style: normal; #>   background-color: #FFFFFF; #>   width: auto; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #A8A8A8; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #A8A8A8; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #> } #>  #> #llniksmhms .gt_caption { #>   padding-top: 4px; #>   padding-bottom: 4px; #> } #>  #> #llniksmhms .gt_title { #>   color: #333333; #>   font-size: 125%; #>   font-weight: initial; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-color: #FFFFFF; #>   border-bottom-width: 0; #> } #>  #> #llniksmhms .gt_subtitle { #>   color: #333333; #>   font-size: 85%; #>   font-weight: initial; #>   padding-top: 3px; #>   padding-bottom: 5px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-color: #FFFFFF; #>   border-top-width: 0; #> } #>  #> #llniksmhms .gt_heading { #>   background-color: #FFFFFF; #>   text-align: center; #>   border-bottom-color: #FFFFFF; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #llniksmhms .gt_bottom_border { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #llniksmhms .gt_col_headings { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #llniksmhms .gt_col_heading { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 6px; #>   padding-left: 5px; #>   padding-right: 5px; #>   overflow-x: hidden; #> } #>  #> #llniksmhms .gt_column_spanner_outer { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   padding-top: 0; #>   padding-bottom: 0; #>   padding-left: 4px; #>   padding-right: 4px; #> } #>  #> #llniksmhms .gt_column_spanner_outer:first-child { #>   padding-left: 0; #> } #>  #> #llniksmhms .gt_column_spanner_outer:last-child { #>   padding-right: 0; #> } #>  #> #llniksmhms .gt_column_spanner { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 5px; #>   overflow-x: hidden; #>   display: inline-block; #>   width: 100%; #> } #>  #> #llniksmhms .gt_spanner_row { #>   border-bottom-style: hidden; #> } #>  #> #llniksmhms .gt_group_heading { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   text-align: left; #> } #>  #> #llniksmhms .gt_empty_group_heading { #>   padding: 0.5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: middle; #> } #>  #> #llniksmhms .gt_from_md > :first-child { #>   margin-top: 0; #> } #>  #> #llniksmhms .gt_from_md > :last-child { #>   margin-bottom: 0; #> } #>  #> #llniksmhms .gt_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   margin: 10px; #>   border-top-style: solid; #>   border-top-width: 1px; #>   border-top-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   overflow-x: hidden; #> } #>  #> #llniksmhms .gt_stub { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #llniksmhms .gt_stub_row_group { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #>   vertical-align: top; #> } #>  #> #llniksmhms .gt_row_group_first td { #>   border-top-width: 2px; #> } #>  #> #llniksmhms .gt_row_group_first th { #>   border-top-width: 2px; #> } #>  #> #llniksmhms .gt_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #llniksmhms .gt_first_summary_row { #>   border-top-style: solid; #>   border-top-color: #D3D3D3; #> } #>  #> #llniksmhms .gt_first_summary_row.thick { #>   border-top-width: 2px; #> } #>  #> #llniksmhms .gt_last_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #llniksmhms .gt_grand_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #llniksmhms .gt_first_grand_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-style: double; #>   border-top-width: 6px; #>   border-top-color: #D3D3D3; #> } #>  #> #llniksmhms .gt_last_grand_summary_row_top { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: double; #>   border-bottom-width: 6px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #llniksmhms .gt_striped { #>   background-color: rgba(128, 128, 128, 0.05); #> } #>  #> #llniksmhms .gt_table_body { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #llniksmhms .gt_footnotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #llniksmhms .gt_footnote { #>   margin: 0px; #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #llniksmhms .gt_sourcenotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #llniksmhms .gt_sourcenote { #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #llniksmhms .gt_left { #>   text-align: left; #> } #>  #> #llniksmhms .gt_center { #>   text-align: center; #> } #>  #> #llniksmhms .gt_right { #>   text-align: right; #>   font-variant-numeric: tabular-nums; #> } #>  #> #llniksmhms .gt_font_normal { #>   font-weight: normal; #> } #>  #> #llniksmhms .gt_font_bold { #>   font-weight: bold; #> } #>  #> #llniksmhms .gt_font_italic { #>   font-style: italic; #> } #>  #> #llniksmhms .gt_super { #>   font-size: 65%; #> } #>  #> #llniksmhms .gt_footnote_marks { #>   font-size: 75%; #>   vertical-align: 0.4em; #>   position: initial; #> } #>  #> #llniksmhms .gt_asterisk { #>   font-size: 100%; #>   vertical-align: 0; #> } #>  #> #llniksmhms .gt_indent_1 { #>   text-indent: 5px; #> } #>  #> #llniksmhms .gt_indent_2 { #>   text-indent: 10px; #> } #>  #> #llniksmhms .gt_indent_3 { #>   text-indent: 15px; #> } #>  #> #llniksmhms .gt_indent_4 { #>   text-indent: 20px; #> } #>  #> #llniksmhms .gt_indent_5 { #>   text-indent: 25px; #> } #> <\/style> #>   <table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\"> #>   <thead> #>      #>     <tr class=\"gt_col_headings gt_spanner_row\"> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"><\/th> #>       <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"3\" scope=\"colgroup\" id=\"Cylinders\"> #>         <span class=\"gt_column_spanner\">Cylinders<\/span> #>       <\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"Total\">Total<\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"test\">test<\/th> #>     <\/tr> #>     <tr class=\"gt_col_headings\"> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"4\">4<\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"6\">6<\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"8\">8<\/th> #>     <\/tr> #>   <\/thead> #>   <tbody class=\"gt_table_body\"> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"6\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Miles/(US) gallon (`mpg`)\">Miles/(US) gallon (`mpg`)<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_1\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Min / Max<\/th> #> <td headers=\"Miles/(US) gallon (`mpg`) stub_1_1 4\" class=\"gt_row gt_left\">21.4 / 33.9<\/td> #> <td headers=\"Miles/(US) gallon (`mpg`) stub_1_1 6\" class=\"gt_row gt_left\">17.8 / 21.4<\/td> #> <td headers=\"Miles/(US) gallon (`mpg`) stub_1_1 8\" class=\"gt_row gt_left\">10.4 / 19.2<\/td> #> <td headers=\"Miles/(US) gallon (`mpg`) stub_1_1 Total\" class=\"gt_row gt_left\">10.4 / 33.9<\/td> #> <td headers=\"Miles/(US) gallon (`mpg`) stub_1_1 test\" class=\"gt_row gt_left\">p value: &lt;0.0001 <\/td><\/tr> #>     <tr><th id=\"stub_1_2\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Med [IQR]<\/th> #> <td headers=\"Miles/(US) gallon (`mpg`) stub_1_2 4\" class=\"gt_row gt_left\">26.0 [22.8;30.4]<\/td> #> <td headers=\"Miles/(US) gallon (`mpg`) stub_1_2 6\" class=\"gt_row gt_left\">19.7 [18.6;21.0]<\/td> #> <td headers=\"Miles/(US) gallon (`mpg`) stub_1_2 8\" class=\"gt_row gt_left\">15.2 [14.4;16.2]<\/td> #> <td headers=\"Miles/(US) gallon (`mpg`) stub_1_2 Total\" class=\"gt_row gt_left\">19.2 [15.4;22.8]<\/td> #> <td headers=\"Miles/(US) gallon (`mpg`) stub_1_2 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr><th id=\"stub_1_3\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Mean (std)<\/th> #> <td headers=\"Miles/(US) gallon (`mpg`) stub_1_3 4\" class=\"gt_row gt_left\">26.7 (4.5)<\/td> #> <td headers=\"Miles/(US) gallon (`mpg`) stub_1_3 6\" class=\"gt_row gt_left\">19.7 (1.5)<\/td> #> <td headers=\"Miles/(US) gallon (`mpg`) stub_1_3 8\" class=\"gt_row gt_left\">15.1 (2.6)<\/td> #> <td headers=\"Miles/(US) gallon (`mpg`) stub_1_3 Total\" class=\"gt_row gt_left\">20.1 (6.0)<\/td> #> <td headers=\"Miles/(US) gallon (`mpg`) stub_1_3 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr><th id=\"stub_1_4\" scope=\"row\" class=\"gt_row gt_left gt_stub\">N (NA)<\/th> #> <td headers=\"Miles/(US) gallon (`mpg`) stub_1_4 4\" class=\"gt_row gt_left\">11 (0)<\/td> #> <td headers=\"Miles/(US) gallon (`mpg`) stub_1_4 6\" class=\"gt_row gt_left\">7 (0)<\/td> #> <td headers=\"Miles/(US) gallon (`mpg`) stub_1_4 8\" class=\"gt_row gt_left\">14 (0)<\/td> #> <td headers=\"Miles/(US) gallon (`mpg`) stub_1_4 Total\" class=\"gt_row gt_left\">32 (0)<\/td> #> <td headers=\"Miles/(US) gallon (`mpg`) stub_1_4 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"6\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Displacement (cu.in.) (`disp`)\">Displacement (cu.in.) (`disp`)<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_5\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Min / Max<\/th> #> <td headers=\"Displacement (cu.in.) (`disp`) stub_1_5 4\" class=\"gt_row gt_left\">71.1 / 146.7<\/td> #> <td headers=\"Displacement (cu.in.) (`disp`) stub_1_5 6\" class=\"gt_row gt_left\">145.0 / 258.0<\/td> #> <td headers=\"Displacement (cu.in.) (`disp`) stub_1_5 8\" class=\"gt_row gt_left\">275.8 / 472.0<\/td> #> <td headers=\"Displacement (cu.in.) (`disp`) stub_1_5 Total\" class=\"gt_row gt_left\">71.1 / 472.0<\/td> #> <td headers=\"Displacement (cu.in.) (`disp`) stub_1_5 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr><th id=\"stub_1_6\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Med [IQR]<\/th> #> <td headers=\"Displacement (cu.in.) (`disp`) stub_1_6 4\" class=\"gt_row gt_left\">108.0 [78.8;120.7]<\/td> #> <td headers=\"Displacement (cu.in.) (`disp`) stub_1_6 6\" class=\"gt_row gt_left\">167.6 [160.0;196.3]<\/td> #> <td headers=\"Displacement (cu.in.) (`disp`) stub_1_6 8\" class=\"gt_row gt_left\">350.5 [301.8;390.0]<\/td> #> <td headers=\"Displacement (cu.in.) (`disp`) stub_1_6 Total\" class=\"gt_row gt_left\">196.3 [120.8;326.0]<\/td> #> <td headers=\"Displacement (cu.in.) (`disp`) stub_1_6 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr><th id=\"stub_1_7\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Mean (std)<\/th> #> <td headers=\"Displacement (cu.in.) (`disp`) stub_1_7 4\" class=\"gt_row gt_left\">105.1 (26.9)<\/td> #> <td headers=\"Displacement (cu.in.) (`disp`) stub_1_7 6\" class=\"gt_row gt_left\">183.3 (41.6)<\/td> #> <td headers=\"Displacement (cu.in.) (`disp`) stub_1_7 8\" class=\"gt_row gt_left\">353.1 (67.8)<\/td> #> <td headers=\"Displacement (cu.in.) (`disp`) stub_1_7 Total\" class=\"gt_row gt_left\">230.7 (123.9)<\/td> #> <td headers=\"Displacement (cu.in.) (`disp`) stub_1_7 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr><th id=\"stub_1_8\" scope=\"row\" class=\"gt_row gt_left gt_stub\">N (NA)<\/th> #> <td headers=\"Displacement (cu.in.) (`disp`) stub_1_8 4\" class=\"gt_row gt_left\">11 (0)<\/td> #> <td headers=\"Displacement (cu.in.) (`disp`) stub_1_8 6\" class=\"gt_row gt_left\">7 (0)<\/td> #> <td headers=\"Displacement (cu.in.) (`disp`) stub_1_8 8\" class=\"gt_row gt_left\">14 (0)<\/td> #> <td headers=\"Displacement (cu.in.) (`disp`) stub_1_8 Total\" class=\"gt_row gt_left\">32 (0)<\/td> #> <td headers=\"Displacement (cu.in.) (`disp`) stub_1_8 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"6\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Gross horsepower (`hp`)\">Gross horsepower (`hp`)<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_9\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Min / Max<\/th> #> <td headers=\"Gross horsepower (`hp`) stub_1_9 4\" class=\"gt_row gt_left\">52.0 / 113.0<\/td> #> <td headers=\"Gross horsepower (`hp`) stub_1_9 6\" class=\"gt_row gt_left\">105.0 / 175.0<\/td> #> <td headers=\"Gross horsepower (`hp`) stub_1_9 8\" class=\"gt_row gt_left\">150.0 / 335.0<\/td> #> <td headers=\"Gross horsepower (`hp`) stub_1_9 Total\" class=\"gt_row gt_left\">52.0 / 335.0<\/td> #> <td headers=\"Gross horsepower (`hp`) stub_1_9 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr><th id=\"stub_1_10\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Med [IQR]<\/th> #> <td headers=\"Gross horsepower (`hp`) stub_1_10 4\" class=\"gt_row gt_left\">91.0 [65.5;96.0]<\/td> #> <td headers=\"Gross horsepower (`hp`) stub_1_10 6\" class=\"gt_row gt_left\">110.0 [110.0;123.0]<\/td> #> <td headers=\"Gross horsepower (`hp`) stub_1_10 8\" class=\"gt_row gt_left\">192.5 [176.2;241.2]<\/td> #> <td headers=\"Gross horsepower (`hp`) stub_1_10 Total\" class=\"gt_row gt_left\">123.0 [96.5;180.0]<\/td> #> <td headers=\"Gross horsepower (`hp`) stub_1_10 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr><th id=\"stub_1_11\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Mean (std)<\/th> #> <td headers=\"Gross horsepower (`hp`) stub_1_11 4\" class=\"gt_row gt_left\">82.6 (20.9)<\/td> #> <td headers=\"Gross horsepower (`hp`) stub_1_11 6\" class=\"gt_row gt_left\">122.3 (24.3)<\/td> #> <td headers=\"Gross horsepower (`hp`) stub_1_11 8\" class=\"gt_row gt_left\">209.2 (51.0)<\/td> #> <td headers=\"Gross horsepower (`hp`) stub_1_11 Total\" class=\"gt_row gt_left\">146.7 (68.6)<\/td> #> <td headers=\"Gross horsepower (`hp`) stub_1_11 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr><th id=\"stub_1_12\" scope=\"row\" class=\"gt_row gt_left gt_stub\">N (NA)<\/th> #> <td headers=\"Gross horsepower (`hp`) stub_1_12 4\" class=\"gt_row gt_left\">11 (0)<\/td> #> <td headers=\"Gross horsepower (`hp`) stub_1_12 6\" class=\"gt_row gt_left\">7 (0)<\/td> #> <td headers=\"Gross horsepower (`hp`) stub_1_12 8\" class=\"gt_row gt_left\">14 (0)<\/td> #> <td headers=\"Gross horsepower (`hp`) stub_1_12 Total\" class=\"gt_row gt_left\">32 (0)<\/td> #> <td headers=\"Gross horsepower (`hp`) stub_1_12 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"6\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Rear axle ratio (`drat`)\">Rear axle ratio (`drat`)<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_13\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Min / Max<\/th> #> <td headers=\"Rear axle ratio (`drat`) stub_1_13 4\" class=\"gt_row gt_left\">3.7 / 4.9<\/td> #> <td headers=\"Rear axle ratio (`drat`) stub_1_13 6\" class=\"gt_row gt_left\">2.8 / 3.9<\/td> #> <td headers=\"Rear axle ratio (`drat`) stub_1_13 8\" class=\"gt_row gt_left\">2.8 / 4.2<\/td> #> <td headers=\"Rear axle ratio (`drat`) stub_1_13 Total\" class=\"gt_row gt_left\">2.8 / 4.9<\/td> #> <td headers=\"Rear axle ratio (`drat`) stub_1_13 test\" class=\"gt_row gt_left\">p value: 0.0007 <\/td><\/tr> #>     <tr><th id=\"stub_1_14\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Med [IQR]<\/th> #> <td headers=\"Rear axle ratio (`drat`) stub_1_14 4\" class=\"gt_row gt_left\">4.1 [3.8;4.2]<\/td> #> <td headers=\"Rear axle ratio (`drat`) stub_1_14 6\" class=\"gt_row gt_left\">3.9 [3.4;3.9]<\/td> #> <td headers=\"Rear axle ratio (`drat`) stub_1_14 8\" class=\"gt_row gt_left\">3.1 [3.1;3.2]<\/td> #> <td headers=\"Rear axle ratio (`drat`) stub_1_14 Total\" class=\"gt_row gt_left\">3.7 [3.1;3.9]<\/td> #> <td headers=\"Rear axle ratio (`drat`) stub_1_14 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr><th id=\"stub_1_15\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Mean (std)<\/th> #> <td headers=\"Rear axle ratio (`drat`) stub_1_15 4\" class=\"gt_row gt_left\">4.1 (0.4)<\/td> #> <td headers=\"Rear axle ratio (`drat`) stub_1_15 6\" class=\"gt_row gt_left\">3.6 (0.5)<\/td> #> <td headers=\"Rear axle ratio (`drat`) stub_1_15 8\" class=\"gt_row gt_left\">3.2 (0.4)<\/td> #> <td headers=\"Rear axle ratio (`drat`) stub_1_15 Total\" class=\"gt_row gt_left\">3.6 (0.5)<\/td> #> <td headers=\"Rear axle ratio (`drat`) stub_1_15 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr><th id=\"stub_1_16\" scope=\"row\" class=\"gt_row gt_left gt_stub\">N (NA)<\/th> #> <td headers=\"Rear axle ratio (`drat`) stub_1_16 4\" class=\"gt_row gt_left\">11 (0)<\/td> #> <td headers=\"Rear axle ratio (`drat`) stub_1_16 6\" class=\"gt_row gt_left\">7 (0)<\/td> #> <td headers=\"Rear axle ratio (`drat`) stub_1_16 8\" class=\"gt_row gt_left\">14 (0)<\/td> #> <td headers=\"Rear axle ratio (`drat`) stub_1_16 Total\" class=\"gt_row gt_left\">32 (0)<\/td> #> <td headers=\"Rear axle ratio (`drat`) stub_1_16 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"6\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Weight (1000 lbs) (`wt`)\">Weight (1000 lbs) (`wt`)<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_17\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Min / Max<\/th> #> <td headers=\"Weight (1000 lbs) (`wt`) stub_1_17 4\" class=\"gt_row gt_left\">1.5 / 3.2<\/td> #> <td headers=\"Weight (1000 lbs) (`wt`) stub_1_17 6\" class=\"gt_row gt_left\">2.6 / 3.5<\/td> #> <td headers=\"Weight (1000 lbs) (`wt`) stub_1_17 8\" class=\"gt_row gt_left\">3.2 / 5.4<\/td> #> <td headers=\"Weight (1000 lbs) (`wt`) stub_1_17 Total\" class=\"gt_row gt_left\">1.5 / 5.4<\/td> #> <td headers=\"Weight (1000 lbs) (`wt`) stub_1_17 test\" class=\"gt_row gt_left\">p value: &lt;0.0001 <\/td><\/tr> #>     <tr><th id=\"stub_1_18\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Med [IQR]<\/th> #> <td headers=\"Weight (1000 lbs) (`wt`) stub_1_18 4\" class=\"gt_row gt_left\">2.2 [1.9;2.6]<\/td> #> <td headers=\"Weight (1000 lbs) (`wt`) stub_1_18 6\" class=\"gt_row gt_left\">3.2 [2.8;3.4]<\/td> #> <td headers=\"Weight (1000 lbs) (`wt`) stub_1_18 8\" class=\"gt_row gt_left\">3.8 [3.5;4.0]<\/td> #> <td headers=\"Weight (1000 lbs) (`wt`) stub_1_18 Total\" class=\"gt_row gt_left\">3.3 [2.6;3.6]<\/td> #> <td headers=\"Weight (1000 lbs) (`wt`) stub_1_18 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr><th id=\"stub_1_19\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Mean (std)<\/th> #> <td headers=\"Weight (1000 lbs) (`wt`) stub_1_19 4\" class=\"gt_row gt_left\">2.3 (0.6)<\/td> #> <td headers=\"Weight (1000 lbs) (`wt`) stub_1_19 6\" class=\"gt_row gt_left\">3.1 (0.4)<\/td> #> <td headers=\"Weight (1000 lbs) (`wt`) stub_1_19 8\" class=\"gt_row gt_left\">4.0 (0.8)<\/td> #> <td headers=\"Weight (1000 lbs) (`wt`) stub_1_19 Total\" class=\"gt_row gt_left\">3.2 (1.0)<\/td> #> <td headers=\"Weight (1000 lbs) (`wt`) stub_1_19 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr><th id=\"stub_1_20\" scope=\"row\" class=\"gt_row gt_left gt_stub\">N (NA)<\/th> #> <td headers=\"Weight (1000 lbs) (`wt`) stub_1_20 4\" class=\"gt_row gt_left\">11 (0)<\/td> #> <td headers=\"Weight (1000 lbs) (`wt`) stub_1_20 6\" class=\"gt_row gt_left\">7 (0)<\/td> #> <td headers=\"Weight (1000 lbs) (`wt`) stub_1_20 8\" class=\"gt_row gt_left\">14 (0)<\/td> #> <td headers=\"Weight (1000 lbs) (`wt`) stub_1_20 Total\" class=\"gt_row gt_left\">32 (0)<\/td> #> <td headers=\"Weight (1000 lbs) (`wt`) stub_1_20 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"6\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"1/4 mile time (`qsec`)\">1/4 mile time (`qsec`)<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_21\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Min / Max<\/th> #> <td headers=\"1/4 mile time (`qsec`) stub_1_21 4\" class=\"gt_row gt_left\">16.7 / 22.9<\/td> #> <td headers=\"1/4 mile time (`qsec`) stub_1_21 6\" class=\"gt_row gt_left\">15.5 / 20.2<\/td> #> <td headers=\"1/4 mile time (`qsec`) stub_1_21 8\" class=\"gt_row gt_left\">14.5 / 18.0<\/td> #> <td headers=\"1/4 mile time (`qsec`) stub_1_21 Total\" class=\"gt_row gt_left\">14.5 / 22.9<\/td> #> <td headers=\"1/4 mile time (`qsec`) stub_1_21 test\" class=\"gt_row gt_left\">p value: 0.0062 <\/td><\/tr> #>     <tr><th id=\"stub_1_22\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Med [IQR]<\/th> #> <td headers=\"1/4 mile time (`qsec`) stub_1_22 4\" class=\"gt_row gt_left\">18.9 [18.6;19.9]<\/td> #> <td headers=\"1/4 mile time (`qsec`) stub_1_22 6\" class=\"gt_row gt_left\">18.3 [16.7;19.2]<\/td> #> <td headers=\"1/4 mile time (`qsec`) stub_1_22 8\" class=\"gt_row gt_left\">17.2 [16.1;17.6]<\/td> #> <td headers=\"1/4 mile time (`qsec`) stub_1_22 Total\" class=\"gt_row gt_left\">17.7 [16.9;18.9]<\/td> #> <td headers=\"1/4 mile time (`qsec`) stub_1_22 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr><th id=\"stub_1_23\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Mean (std)<\/th> #> <td headers=\"1/4 mile time (`qsec`) stub_1_23 4\" class=\"gt_row gt_left\">19.1 (1.7)<\/td> #> <td headers=\"1/4 mile time (`qsec`) stub_1_23 6\" class=\"gt_row gt_left\">18.0 (1.7)<\/td> #> <td headers=\"1/4 mile time (`qsec`) stub_1_23 8\" class=\"gt_row gt_left\">16.8 (1.2)<\/td> #> <td headers=\"1/4 mile time (`qsec`) stub_1_23 Total\" class=\"gt_row gt_left\">17.8 (1.8)<\/td> #> <td headers=\"1/4 mile time (`qsec`) stub_1_23 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr><th id=\"stub_1_24\" scope=\"row\" class=\"gt_row gt_left gt_stub\">N (NA)<\/th> #> <td headers=\"1/4 mile time (`qsec`) stub_1_24 4\" class=\"gt_row gt_left\">11 (0)<\/td> #> <td headers=\"1/4 mile time (`qsec`) stub_1_24 6\" class=\"gt_row gt_left\">7 (0)<\/td> #> <td headers=\"1/4 mile time (`qsec`) stub_1_24 8\" class=\"gt_row gt_left\">14 (0)<\/td> #> <td headers=\"1/4 mile time (`qsec`) stub_1_24 Total\" class=\"gt_row gt_left\">32 (0)<\/td> #> <td headers=\"1/4 mile time (`qsec`) stub_1_24 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"6\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Engine (`vs`)\">Engine (`vs`)<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_25\" scope=\"row\" class=\"gt_row gt_left gt_stub\">straight<\/th> #> <td headers=\"Engine (`vs`) stub_1_25 4\" class=\"gt_row gt_left\">10 (71.43%)<\/td> #> <td headers=\"Engine (`vs`) stub_1_25 6\" class=\"gt_row gt_left\">4 (28.57%)<\/td> #> <td headers=\"Engine (`vs`) stub_1_25 8\" class=\"gt_row gt_left\">0 (0%)<\/td> #> <td headers=\"Engine (`vs`) stub_1_25 Total\" class=\"gt_row gt_left\">14 (43.75%)<\/td> #> <td headers=\"Engine (`vs`) stub_1_25 test\" class=\"gt_row gt_left\">p value: &lt;0.0001 <\/td><\/tr> #>     <tr><th id=\"stub_1_26\" scope=\"row\" class=\"gt_row gt_left gt_stub\">vshaped<\/th> #> <td headers=\"Engine (`vs`) stub_1_26 4\" class=\"gt_row gt_left\">1 (5.56%)<\/td> #> <td headers=\"Engine (`vs`) stub_1_26 6\" class=\"gt_row gt_left\">3 (16.67%)<\/td> #> <td headers=\"Engine (`vs`) stub_1_26 8\" class=\"gt_row gt_left\">14 (77.78%)<\/td> #> <td headers=\"Engine (`vs`) stub_1_26 Total\" class=\"gt_row gt_left\">18 (56.25%)<\/td> #> <td headers=\"Engine (`vs`) stub_1_26 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr><th id=\"stub_1_27\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Total<\/th> #> <td headers=\"Engine (`vs`) stub_1_27 4\" class=\"gt_row gt_left\">11 (34.38%)<\/td> #> <td headers=\"Engine (`vs`) stub_1_27 6\" class=\"gt_row gt_left\">7 (21.88%)<\/td> #> <td headers=\"Engine (`vs`) stub_1_27 8\" class=\"gt_row gt_left\">14 (43.75%)<\/td> #> <td headers=\"Engine (`vs`) stub_1_27 Total\" class=\"gt_row gt_left\">32 (100.00%)<\/td> #> <td headers=\"Engine (`vs`) stub_1_27 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr class=\"gt_group_heading_row\"> #>       <th colspan=\"6\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Transmission (`am`)\">Transmission (`am`)<\/th> #>     <\/tr> #>     <tr class=\"gt_row_group_first\"><th id=\"stub_1_28\" scope=\"row\" class=\"gt_row gt_left gt_stub\">auto<\/th> #> <td headers=\"Transmission (`am`) stub_1_28 4\" class=\"gt_row gt_left\">3 (15.79%)<\/td> #> <td headers=\"Transmission (`am`) stub_1_28 6\" class=\"gt_row gt_left\">4 (21.05%)<\/td> #> <td headers=\"Transmission (`am`) stub_1_28 8\" class=\"gt_row gt_left\">12 (63.16%)<\/td> #> <td headers=\"Transmission (`am`) stub_1_28 Total\" class=\"gt_row gt_left\">19 (59.38%)<\/td> #> <td headers=\"Transmission (`am`) stub_1_28 test\" class=\"gt_row gt_left\">p value: 0.0091 <\/td><\/tr> #>     <tr><th id=\"stub_1_29\" scope=\"row\" class=\"gt_row gt_left gt_stub\">manual<\/th> #> <td headers=\"Transmission (`am`) stub_1_29 4\" class=\"gt_row gt_left\">8 (61.54%)<\/td> #> <td headers=\"Transmission (`am`) stub_1_29 6\" class=\"gt_row gt_left\">3 (23.08%)<\/td> #> <td headers=\"Transmission (`am`) stub_1_29 8\" class=\"gt_row gt_left\">2 (15.38%)<\/td> #> <td headers=\"Transmission (`am`) stub_1_29 Total\" class=\"gt_row gt_left\">13 (40.62%)<\/td> #> <td headers=\"Transmission (`am`) stub_1_29 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>     <tr><th id=\"stub_1_30\" scope=\"row\" class=\"gt_row gt_left gt_stub\">Total<\/th> #> <td headers=\"Transmission (`am`) stub_1_30 4\" class=\"gt_row gt_left\">11 (34.38%)<\/td> #> <td headers=\"Transmission (`am`) stub_1_30 6\" class=\"gt_row gt_left\">7 (21.88%)<\/td> #> <td headers=\"Transmission (`am`) stub_1_30 8\" class=\"gt_row gt_left\">14 (43.75%)<\/td> #> <td headers=\"Transmission (`am`) stub_1_30 Total\" class=\"gt_row gt_left\">32 (100.00%)<\/td> #> <td headers=\"Transmission (`am`) stub_1_30 test\" class=\"gt_row gt_left\"><\/td><\/tr> #>   <\/tbody> #>    #>    #> <\/table> #> <\/div>"},{"path":"https://danchaltiel.github.io/crosstable/reference/as_workbook.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a crosstable object into a formatted, savable openxlsx workbook. — as_workbook","title":"Converts a crosstable object into a formatted, savable openxlsx workbook. — as_workbook","text":"Converts crosstable object formatted, savable openxlsx workbook.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/as_workbook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a crosstable object into a formatted, savable openxlsx workbook. — as_workbook","text":"","code":"as_workbook(   x,   show_test_name = TRUE,   by_header = NULL,   keep_id = FALSE,   generic_labels = list(id = \".id\", variable = \"variable\", value = \"value\", total =     \"Total\", label = \"label\", test = \"test\", effect = \"effect\"),   ... )"},{"path":"https://danchaltiel.github.io/crosstable/reference/as_workbook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a crosstable object into a formatted, savable openxlsx workbook. — as_workbook","text":"x result crosstable() list crosstables show_test_name test column, show test name by_header string override header keep_id whether keep .id column generic_labels names crosstable default columns ... unused","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/as_workbook.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a crosstable object into a formatted, savable openxlsx workbook. — as_workbook","text":"openxlsx workbook containing crosstable(s)","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/as_workbook.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Converts a crosstable object into a formatted, savable openxlsx workbook. — as_workbook","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/as_workbook.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts a crosstable object into a formatted, savable openxlsx workbook. — as_workbook","text":"","code":"library(openxlsx) target = tempfile(fileext=\".xlsx\")  x=crosstable(mtcars2, c(mpg, vs, gear), total=TRUE, test=TRUE) as_workbook(x, keep_id=TRUE) %>%     saveWorkbook(file=target) if(interactive()) browseURL(target)  target = tempfile(fileext=\".xlsx\") x2=list(iris=crosstable(iris2), crosstable(mtcars2)) as_workbook(x2, keep_id=TRUE) %>%     saveWorkbook(file=target) if(interactive()) browseURL(target)"},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_crosstable.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a crosstable to an officer document — body_add_crosstable","title":"Add a crosstable to an officer document — body_add_crosstable","text":"body_add_crosstable() adds flextable officer document.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_crosstable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a crosstable to an officer document — body_add_crosstable","text":"","code":"body_add_crosstable(   doc,   x,   body_fontsize = NULL,   header_fontsize = ceiling(body_fontsize * 1.2),   padding_v = NULL,   allow_break = TRUE,   max_cols = 25,   ... )"},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_crosstable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a crosstable to an officer document — body_add_crosstable","text":"doc rdocx object, created officer::read_docx() x crosstable object body_fontsize fontsize body header_fontsize fontsize header padding_v vertical padding table rows allow_break allow crosstable rows break across pages max_cols max number columns x ... arguments passed as_flextable.crosstable()","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_crosstable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a crosstable to an officer document — body_add_crosstable","text":"docx object doc","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_crosstable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add a crosstable to an officer document — body_add_crosstable","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_crosstable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a crosstable to an officer document — body_add_crosstable","text":"","code":"#Officer library(officer) mytable = crosstable(mtcars2) doc = read_docx() %>%     body_add_crosstable(mytable) %>%     body_add_break %>%     body_add_crosstable(mytable, compact=TRUE)  dfile = tempfile(fileext=\".docx\") print(doc, target = dfile) if(interactive()) browseURL(dfile)"},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_crosstable_footnote.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds a standard footnote explaining the abbreviations used in a crosstable — body_add_crosstable_footnote","title":"Adds a standard footnote explaining the abbreviations used in a crosstable — body_add_crosstable_footnote","text":"Use body_add_crosstable(). Footnote: Med: median, IQR: interquartile range, Std: standard deviation. Percentages expressed column.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_crosstable_footnote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds a standard footnote explaining the abbreviations used in a crosstable — body_add_crosstable_footnote","text":"","code":"body_add_crosstable_footnote(doc)"},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_crosstable_footnote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds a standard footnote explaining the abbreviations used in a crosstable — body_add_crosstable_footnote","text":"doc rdocx object","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_crosstable_footnote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds a standard footnote explaining the abbreviations used in a crosstable — body_add_crosstable_footnote","text":"docx object doc","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_crosstable_footnote.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adds a standard footnote explaining the abbreviations used in a crosstable — body_add_crosstable_footnote","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_gg2.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternative to officer::body_add_gg() which uses ggplot syntax — body_add_gg2","title":"Alternative to officer::body_add_gg() which uses ggplot syntax — body_add_gg2","text":"Alternative officer::body_add_gg() uses ggplot syntax","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_gg2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternative to officer::body_add_gg() which uses ggplot syntax — body_add_gg2","text":"","code":"body_add_gg2(   doc,   value,   width = 6,   height = 5,   units = getOption(\"crosstable_units\", \"in\"),   style = getOption(\"crosstable_style_image\", doc$default_styles$paragraph),   res = 300,   ... )"},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_gg2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alternative to officer::body_add_gg() which uses ggplot syntax — body_add_gg2","text":"doc rdocx object value ggplot object width, height width height. Can abbreviated w h. units units width height style paragraph style res resolution png image ppi (passed argument dpi ggplot2::ggsave()) ... arguments passed ggplot2::ggsave()","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_gg2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alternative to officer::body_add_gg() which uses ggplot syntax — body_add_gg2","text":"docx object doc","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_gg2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Alternative to officer::body_add_gg() which uses ggplot syntax — body_add_gg2","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_gg2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alternative to officer::body_add_gg() which uses ggplot syntax — body_add_gg2","text":"","code":"library(officer) library(ggplot2) p = ggplot(data = iris ) +  geom_point(mapping = aes(Sepal.Length, Petal.Length)) crosstable_options(   units=\"cm\",   style_image=\"centered\" ) doc = read_docx() %>%  body_add_normal(\"Text before\") %>%  body_add_gg2(p, w=14, h=10, scale=1.5) %>% #or units=\"cm\" instead of using options  body_add_normal(\"Text after\") write_and_open(doc)"},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_img2.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternative to officer::body_add_img() which adds a units choice — body_add_img2","title":"Alternative to officer::body_add_img() which adds a units choice — body_add_img2","text":"Alternative officer::body_add_img() adds units choice","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_img2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternative to officer::body_add_img() which adds a units choice — body_add_img2","text":"","code":"body_add_img2(   doc,   src,   width,   height,   units = getOption(\"crosstable_units\", \"in\"),   style = getOption(\"crosstable_style_image\", doc$default_styles$paragraph),   ... )"},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_img2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alternative to officer::body_add_img() which adds a units choice — body_add_img2","text":"doc rdocx object src image filename, basename file must contain blank. width, height width height. Can abbreviated w h. units units width height style paragraph style ... arguments passed officer::body_add_img()","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_img2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alternative to officer::body_add_img() which adds a units choice — body_add_img2","text":"docx object doc","code":""},{"path":[]},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_img2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Alternative to officer::body_add_img() which adds a units choice — body_add_img2","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_img2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alternative to officer::body_add_img() which adds a units choice — body_add_img2","text":"","code":"img.file = file.path( R.home(\"doc\"), \"html\", \"logo.jpg\" ) if(file.exists(img.file)){     library(officer)     options(crosstable_units=\"cm\")     doc = read_docx() %>%         body_add_normal(\"This is the R logo.\") %>%         body_add_img2(img.file, h=7.6, w=10, style=\"centered\") #or units=\"cm\" without options     #write_and_open(doc) }"},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a legend to a table or a figure — body_add_legend","title":"Add a legend to a table or a figure — body_add_legend","text":"Add legend table figure officer document. Legends can referred using @ref syntax body_add_normal() (see examples use cases). Table legends inserted table figure legends inserted figure.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a legend to a table or a figure — body_add_legend","text":"","code":"body_add_table_legend(   doc,   legend,   ...,   bookmark = NULL,   legend_style = getOption(\"crosstable_style_legend\", doc$default_styles$paragraph),   style = deprecated(),   legend_prefix = NULL,   name_format = NULL,   legend_name = \"Table\",   seqfield = \"SEQ Table \\\\* Arabic\",   par_before = FALSE,   legacy = FALSE )  body_add_figure_legend(   doc,   legend,   ...,   bookmark = NULL,   legend_style = getOption(\"crosstable_style_legend\", doc$default_styles$paragraph),   style = deprecated(),   legend_prefix = NULL,   name_format = NULL,   legend_name = \"Figure\",   seqfield = \"SEQ Figure \\\\* Arabic\",   par_after = FALSE,   legacy = FALSE )"},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a legend to a table or a figure — body_add_legend","text":"doc docx object legend table legend. glue::glue(), expressions enclosed braces evaluated R code. ... unused bookmark id bookmark. id called body_add_normal() using \"\\\\@ref(id)\" syntax. Forbidden characters removed. legend_style style whole legend. May depend docx template. However, name_format provided specific font.size, size apply whole legend consistency. style deprecated favor name_format. legend_prefix prefix comes legend, numbering name_format format legend's LHS (legend_name + numbering) using officer::fp_text_lite() officer::fp_text(). Default fp_text_lite(bold=TRUE) addition format defined legend_style. Note reference bookmark specific format text. legend_name name numbering. Default either \"Table\" \"Figure\". seqfield Keep default. Otherwise, may figure : docx file, insert table legend, right click inserted number select \"Toggle Field Codes\". argument value field, extra escaping. par_before, par_after empty paragraph inserted /legend? legacy use old version function, update {officer} v0.4+","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_legend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a legend to a table or a figure — body_add_legend","text":"docx object doc","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_legend.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Add a legend to a table or a figure — body_add_legend","text":"aware unfortunately reference bookmark using method. Writing: body_add_normal(\"Table \\\\@ref(iris_col1) flowers. really like Table \\\\@ref(iris_col1).\") prevent numbering applying.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_legend.html","id":"what-to-do-if-there-is-still-no-numbering-","dir":"Reference","previous_headings":"","what":"What to do if there is still no numbering?","title":"Add a legend to a table or a figure — body_add_legend","text":"opening document, MS Word might ask \"update fields\", answer \"Yes\".   asked answer \"\", legends added body_add_table_legend() body_add_figure_legend() might actual numbers displayed.  case, manually update references MS Word: select (Ctrl+), update (F9), sometimes twice. info https://ardata-fr.github.io/officeverse/faq.html#update-fields.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_legend.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add a legend to a table or a figure — body_add_legend","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_legend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a legend to a table or a figure — body_add_legend","text":"","code":"library(officer) library(ggplot2) p = ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width, color=Species)) + geom_point() fp_italic = fp_text_lite(italic=TRUE, font.size=10) x = read_docx() %>%     body_add_normal(\"There is Table \\\\@ref(iris_col1) and Table \\\\@ref(iris_col2). \",                     \"The `iris` dataset is about flowers.\") %>%     body_add_normal() %>%     body_add_table_legend(\"Iris dataset, column 1 (mean={round(mean(iris[[1]]), 2)})\",                            bookmark=\"iris_col1\") %>%     body_add_crosstable(crosstable(iris[1])) %>%     body_add_normal() %>%     body_add_table_legend(\"Iris dataset, column 2 (mean={round(mean(iris[[2]]), 2)})\",                           bookmark=\"iris_col2\",                           name_format=fp_italic, legend_style=\"Balloon Text\") %>%     body_add_crosstable(crosstable(iris[2])) %>%     body_add_normal() %>%     body_add_normal(\"There is also the figure \\\\@ref(iris_fig)\") %>%     body_add_gg(p) %>%     body_add_figure_legend(\"Iris plot\", bookmark=\"iris_fig\") write_and_open(x) #If asked to update fields, press \"Yes\". Otherwise press Ctrl+A then F9 twice for the references #to appear."},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a list to an officer document — body_add_list","title":"Add a list to an officer document — body_add_list","text":"Add list officer document","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a list to an officer document — body_add_list","text":"","code":"body_add_list(doc, value, ordered = FALSE, style = NULL, ...)  body_add_list_item(doc, value, ordered = FALSE, style = NULL, ...)"},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a list to an officer document — body_add_list","text":"doc docx object value character (body_add_list()) string (body_add_list_item) ordered TRUE, adds ordered list, FALSE, adds bullet list style specify style manually, overriding ordered. better way set options crosstable_style_list_ordered crosstable_style_list_unordered globally. ... passed officer::body_add_par()","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a list to an officer document — body_add_list","text":"docx object doc","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a list to an officer document — body_add_list","text":"Ordered lists bullet lists supported default officer template (see https://github.com/davidgohel/officer/issues/262). manually set custom styles matching list custom Word template file. , can use either style argument crosstable options. See examples details.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_list.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add a list to an officer document — body_add_list","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a list to an officer document — body_add_list","text":"","code":"if (FALSE) { #For this example to work, `my_template.docx` should include styles named #`ordered_list` and `unordered_list`  library(officer) library(crosstable) options(crosstable_style_list_ordered=\"ordered_list\") options(crosstable_style_list_unordered=\"unordered_list\")  read_docx(\"my_template.docx\") %>%  body_add_list(c(\"Numbered item 1\", \"Numbered item 2\"), ordered = TRUE) %>%  body_add_list_item(\"Numbered item 3\", ordered = TRUE) %>%  body_add_list(c(\"Bullet item 1\", \"Bullet item 2\"), ordered = FALSE) %>%  body_add_list_item(\"Bullet item 3\", ordered = FALSE) %>%  write_and_open() }"},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a new paragraph with default style — body_add_normal","title":"Add a new paragraph with default style — body_add_normal","text":"Add new paragraph officer document default style. Variables can inserted text multiple strings (paste() style) enclosed braces (glue() style).   Basic markdown syntax available: **bold**, *italic*, _underlined_.  References bookmark can inserted using syntax \\\\@ref(bookmark).","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a new paragraph with default style — body_add_normal","text":"","code":"body_add_normal(   doc,   ...,   .sep = \"\",   style = NULL,   squish = TRUE,   parse = c(\"ref\", \"format\", \"code\") )"},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a new paragraph with default style — body_add_normal","text":"doc doc object (created read_docx function officer package) ... one several character strings, pasted using .sep. glue::glue(), expressions enclosed braces evaluated R code. one variable passed, length 1. .sep Separator used separate elements. style Style normal text. Best set crosstable_options(). squish Whether squish result (remove trailing repeated spaces). Default TRUE. Allows add multiline paragraph without breaking string. parse format parse. Default formats (c(\"ref\", \"format\", \"code\")).","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a new paragraph with default style — body_add_normal","text":"new doc object docx object doc","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_normal.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add a new paragraph with default style — body_add_normal","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a new paragraph with default style — body_add_normal","text":"","code":"library(officer) library(crosstable)  info_rows = c(\"Also, table iris has {nrow(iris)} rows.\",               \"And table mtcars has {nrow(mtcars)} rows.\") doc = read_docx()  %>%     body_add_normal(\"Table iris has\", ncol(iris), \"columns.\", .sep=\" \") %>% #paste style     body_add_normal(\"However, table mtcars has {ncol(mtcars)} columns\") %>% #glue style     body_add_normal(info_rows)                                          %>% #vector style     body_add_normal(\"\") doc = doc %>%     body_add_normal(\"You can write text in *italic1*, _underlined1_, **bold1**, and `code`,                     and you can also add * **references** *, for instance a ref to Table                     @ref(my_table). Multiple spaces are ignored (squished) so that you                     can enter multiline text.\") %>%     body_add_normal() %>%     body_add_normal(\"Here I should use `body_add_crosstable()` to add a table before the                      legend.\") %>%     body_add_table_legend(\"My pretty table\", bookmark=\"my_table\") #> [1] \"fp_args\" #> $italic #> [1] TRUE #>  #> [1] \"fp_args\" #> $underlined #> [1] TRUE #>  #> [1] \"fp_args\" #> $bold #> [1] TRUE #>  #> [1] \"fp_args\" #> $bold #> [1] TRUE #>  #> $italic #> [1] TRUE #>  write_and_open(doc)"},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_table_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a list of tables — body_add_table_list","title":"Add a list of tables — body_add_table_list","text":"Add list tables officer document. crosstables added using body_add_crosstable() flextables added using flextable::body_add_flextable(). Plain dataframes converted flextables.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_table_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a list of tables — body_add_table_list","text":"","code":"body_add_table_list(   doc,   l,   fun_before = \"title2\",   fun_after = NULL,   fun = fun_before,   ... )  body_add_flextable_list(...)  body_add_crosstable_list(...)"},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_table_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a list of tables — body_add_table_list","text":"doc rdocx object, created officer::read_docx() l named list tables (class crosstable, flextable, data.frame). fun_before function used table fun_after function used table. fun Deprecated ... arguments passed body_add_crosstable() body_add_flextable()","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_table_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a list of tables — body_add_table_list","text":"docx object doc","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_table_list.html","id":"fun-before-and-fun-after","dir":"Reference","previous_headings":"","what":"fun_before and fun_after","title":"Add a list of tables — body_add_table_list","text":"function form function(doc, .name) .name name current table list. can also pass \"title2\" add name title level 2 table (works levels 3 4 well), \"newline\" simply add new line, even NULL separate (beware tables might merge ). fun_before designed add title fun_after designed add table legend (cf. examples).","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_table_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a list of tables — body_add_table_list","text":"","code":"library(officer) ctl = list(iris2=crosstable(iris2, 1),            \"Just a flextable\"=flextable::flextable(mtcars2[1:5,1:5]),            \"Just a dataframe\"=iris2[1:5,1:5])  fun1 = function(doc, .name){     doc %>%         body_add_title(\" This is table '{.name}' as a flex/crosstable\", level=2) %>%         body_add_normal(\"Here is the table:\") } fun2 = function(doc, .name){   doc %>% body_add_table_legend(\"{.name}\", bookmark=.name) } read_docx() %>%   body_add_title(\"Separated by subtitle\", 1) %>%   body_add_table_list(ctl, fun_before=\"title2\") %>%   body_add_break() %>%   body_add_title(\"Separated using a custom function\", 1) %>%   body_add_normal(\"You can therefore use bookmarks, for instance here are                    tables \\\\@ref(iris2), \\\\@ref(just_a_flextable)                    and \\\\@ref(just_a_dataframe).\") %>%   body_add_table_list(ctl, fun_before=fun1, fun_after=fun2, body_fontsize=8) %>%   write_and_open()"},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a title to an officer document — body_add_title","title":"Add a title to an officer document — body_add_title","text":"Add title officer document","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a title to an officer document — body_add_title","text":"","code":"body_add_title(   doc,   value,   level = 1,   squish = TRUE,   style = getOption(\"crosstable_style_heading\", \"heading\") )"},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a title to an officer document — body_add_title","text":"doc doc object (created read_docx function officer package) value character string level level title. See styles_info(doc) know possibilities. squish Whether squish result (remove trailing repeated spaces). Default TRUE. style name title style. See styles_info(doc) know possibilities.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a title to an officer document — body_add_title","text":"docx object doc","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_title.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add a title to an officer document — body_add_title","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_add_title.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a title to an officer document — body_add_title","text":"","code":"library(officer) library(crosstable) library(dplyr) doc = read_docx() %>%    body_add_title(\"La table iris (nrow={nrow(iris)})\", 1) %>%    body_add_title(\"Description\", 2) %>%    body_add_normal(\"La table iris a \", ncol(iris), \" colonnes.\") #write_and_open(doc)"},{"path":"https://danchaltiel.github.io/crosstable/reference/body_replace_text_at_bkms.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace text on several bookmarks at once — body_replace_text_at_bkms","title":"Replace text on several bookmarks at once — body_replace_text_at_bkms","text":"Replace text several bookmarks ","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_replace_text_at_bkms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace text on several bookmarks at once — body_replace_text_at_bkms","text":"","code":"body_replace_text_at_bkms(doc, ...)"},{"path":"https://danchaltiel.github.io/crosstable/reference/body_replace_text_at_bkms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace text on several bookmarks at once — body_replace_text_at_bkms","text":"doc rdocx object ... named","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_replace_text_at_bkms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace text on several bookmarks at once — body_replace_text_at_bkms","text":"docx object doc","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/body_replace_text_at_bkms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Replace text on several bookmarks at once — body_replace_text_at_bkms","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/clean_names_with_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Cleans names of a dataframe while retaining old names as labels — clean_names_with_labels","title":"Cleans names of a dataframe while retaining old names as labels — clean_names_with_labels","text":"Cleans names dataframe retaining old names labels","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/clean_names_with_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cleans names of a dataframe while retaining old names as labels — clean_names_with_labels","text":"","code":"clean_names_with_labels(   df,   except = NULL,   .fun = getOption(\"crosstable_clean_names_fun\") )"},{"path":"https://danchaltiel.github.io/crosstable/reference/clean_names_with_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cleans names of a dataframe while retaining old names as labels — clean_names_with_labels","text":"df data.frame except <tidy-select> columns renamed. .fun function used clean names. Default function limited; cleaning good enough use janitor::make_clean_names()","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/clean_names_with_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cleans names of a dataframe while retaining old names as labels — clean_names_with_labels","text":"dataframe clean names label attributes","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/clean_names_with_labels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cleans names of a dataframe while retaining old names as labels — clean_names_with_labels","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/clean_names_with_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cleans names of a dataframe while retaining old names as labels — clean_names_with_labels","text":"","code":"#options(crosstable_clean_names_fun=janitor::make_clean_names) x = data.frame(\"name with space\"=1, TwoWords=1, \"total $ (2009)\"=1, àccénts=1,                check.names=FALSE) cleaned = clean_names_with_labels(x, except=TwoWords) cleaned %>% names() #> [1] \"name_with_space\" \"TwoWords\"        \"total_2009\"      \"accents\"         cleaned %>% get_label() #>   name_with_space          TwoWords        total_2009           accents  #> \"name with space\"        \"TwoWords\"  \"total $ (2009)\"         \"àccénts\""},{"path":"https://danchaltiel.github.io/crosstable/reference/confint_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence interval of a numeric vector — confint_numeric","title":"Confidence interval of a numeric vector — confint_numeric","text":"S3 method, might conflicted stats::confint.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/confint_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence interval of a numeric vector — confint_numeric","text":"","code":"confint_numeric(object, level = 0.95, B = 0)"},{"path":"https://danchaltiel.github.io/crosstable/reference/confint_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence interval of a numeric vector — confint_numeric","text":"object vector, numeric equivalent (date, logical...) level confidence level required B >0, number bootstraps","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/confint_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence interval of a numeric vector — confint_numeric","text":"vector [conf_inf, conf_sup]","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/confint_numeric.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Confidence interval of a numeric vector — confint_numeric","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/confint_numeric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence interval of a numeric vector — confint_numeric","text":"","code":"confint_numeric(iris$Sepal.Length) #>    2.5 %   97.5 %  #> 5.710818 5.975849  confint_numeric(mtcars2$hp_date) #>        2.5 %       97.5 %  #> \"2010-05-03\" \"2010-06-20\"  confint_numeric(mtcars2$hp_date, level=0.99) #>        0.5 %       99.5 %  #> \"2010-04-26\" \"2010-06-27\""},{"path":"https://danchaltiel.github.io/crosstable/reference/cross_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a numeric vector — cross_summary","title":"Summarize a numeric vector — cross_summary","text":"Summarize numeric vector min, max, mean, sd, median, IQR, n missings.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/cross_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a numeric vector — cross_summary","text":"","code":"cross_summary(x, dig = 1, ...)"},{"path":"https://danchaltiel.github.io/crosstable/reference/cross_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a numeric vector — cross_summary","text":"x numeric vector dig number digits ... params pass format_fixed(): zero_digits only_round","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/cross_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a numeric vector — cross_summary","text":"list named functions","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/cross_summary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarize a numeric vector — cross_summary","text":"Dan Chaltiel, David Hajage","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/cross_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize a numeric vector — cross_summary","text":"","code":"cross_summary(iris$Sepal.Length) #>       Min / Max       Med [IQR]      Mean (std)          N (NA)  #>     \"4.3 / 7.9\" \"5.8 [5.1;6.4]\"     \"5.8 (0.8)\"       \"150 (0)\"  cross_summary(iris$Petal.Width, dig=3) #>             Min / Max             Med [IQR]            Mean (std)  #>       \"0.100 / 2.500\" \"1.300 [0.300;1.800]\"       \"1.199 (0.762)\"  #>                N (NA)  #>             \"150 (0)\"  cross_summary(mtcars2$hp_date) #>                            Min / Max                            Med [IQR]  #>            \"2010-02-22 - 2010-12-02\" \"2010-05-04 [2010-04-06;2010-06-30]\"  #>                           Mean (std)                               N (NA)  #>            \"2010-05-27 (2.3 months)\"                             \"32 (0)\"  cross_summary(mtcars2$qsec_posix, date_format=\"%d/%m %H:%M\") #>                               Min / Max                               Med [IQR]  #>             \"15/01 12:00 - 23/01 21:36\" \"18/01 17:02 [17/01 20:52;19/01 21:36]\"  #>                              Mean (std)                                  N (NA)  #>                \"18/01 20:22 (1.8 days)\"                                \"32 (0)\""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable-package.html","id":null,"dir":"Reference","previous_headings":"","what":"crosstable: Crosstables for Descriptive Analyses — crosstable-package","title":"crosstable: Crosstables for Descriptive Analyses — crosstable-package","text":"Create descriptive tables continuous categorical variables. Apply summary statistics counting function, without grouping variable, create beautiful reports using 'rmarkdown' 'officer'. can also compute effect sizes statistical tests needed.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"crosstable: Crosstables for Descriptive Analyses — crosstable-package","text":"crosstablepackage centered crosstable()` function. See vignettes information.","code":""},{"path":[]},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"crosstable: Crosstables for Descriptive Analyses — crosstable-package","text":"Maintainer: Dan Chaltiel dan.chaltiel@gmail.com (ORCID) contributors: David Hajage [conceptor]","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable.html","id":null,"dir":"Reference","previous_headings":"","what":"Easily describe datasets — crosstable","title":"Easily describe datasets — crosstable","text":"Generate descriptive table chosen columns, contingency tables categorical variables calculation summaries numeric variables. argument points one several categorical variables, crosstable output description columns level. Otherwise, points numeric variable, crosstable calculate correlation coefficients selected numeric columns. Finally, points Surv object, crosstable describe survival different times. Can formatted HTML table using as_flextable().","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Easily describe datasets — crosstable","text":"","code":"crosstable(   data,   cols = everything(),   ...,   by = NULL,   total = c(\"none\", \"row\", \"column\", \"both\"),   percent_pattern = \"{n} ({p_row})\",   percent_digits = 2,   num_digits = 1,   showNA = c(\"ifany\", \"always\", \"no\"),   label = TRUE,   funs = c(` ` = cross_summary),   funs_arg = list(),   cor_method = c(\"pearson\", \"kendall\", \"spearman\"),   drop_levels = FALSE,   unique_numeric = 3,   date_format = NULL,   times = NULL,   followup = FALSE,   test = FALSE,   test_args = crosstable_test_args(),   effect = FALSE,   effect_args = crosstable_effect_args(),   margin = deprecated(),   .vars = deprecated() )"},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Easily describe datasets — crosstable","text":"data data.frame cols <tidy-select> Columns describe, default everything(). See examples vignette(\"crosstable-selection\") details. ... Unused. parameters one must named. variable group . Character name. total one [\"none\", \"row\", \"column\" \"\"] indicate whether add total rows /columns. Default none. percent_pattern Pattern used describe proportions categorical data. Syntax uses glue::glue() specification, see section details. Default \"{n} ({p_col})\" null \"{n} ({p_row})\" . percent_digits Number digits percentages. num_digits Number digits numeric summaries. showNA Whether show NA categorical variables (one c(\"ifany\", \"always\", \"\"), like table()). label Whether show labels. See import_labels() set_label()add labels dataset columns. funs Functions apply numeric variables. Default cross_summary(). funs_arg Additional parameters funs, e.g. digits (number decimal places) default cross_summary(). Ultimately, arguments passed format_fixed(). cor_method One c(\"pearson\", \"kendall\", \"spearman\") indicate correlation coefficient used. drop_levels Whether drop unused levels factor variables. Default TRUE. unique_numeric number non-missing different levels variable considered numeric. date_format x vector Date POSIXt, format apply (see strptime formats) times using formula survival::Surv() objects, times summarize. followup using formula survival::Surv() objects, whether display follow-time. test Whether perform tests. test_args See crosstable_test_args override default testing behaviour. effect Whether compute effect measure. effect_args See crosstable_effect_args override default behaviour. margin Deprecated favor percent_pattern. One [\"row\", \"column\", \"cell\", \"none\", \"\"]. Default row. .vars Deprecated favor cols.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Easily describe datasets — crosstable","text":"data.frame/tibble class crosstable","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable.html","id":"about-percent-pattern","dir":"Reference","previous_headings":"","what":"About percent_pattern","title":"Easily describe datasets — crosstable","text":"percent_pattern argument powerful can difficult understand first : usually single string uses glue syntax, variables put curly braces ({x}). Counts expressed {n}, {n_row}, {n_col}, {n_tot}, proportions {p_row}, {p_col}, {p_cell}, depending margin calculated. variable, version including missing values total proposed {n_xxx_na} {p_xxx_na}. proportion, confidence interval also calculated using Wilson score can expressed {p_xxx_inf} {p_xxx_sup}. See examples practical applications. Alternatively, percent_pattern can list characters names body, total_row, total_col, total_all also control pattern parts crosstable body.","code":""},{"path":[]},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Easily describe datasets — crosstable","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Easily describe datasets — crosstable","text":"","code":"#whole table crosstable(iris) #> # A tibble: 19 × 4 #>    .id          label        variable   value         #>    <chr>        <chr>        <chr>      <chr>         #>  1 Sepal.Length Sepal.Length Min / Max  4.3 / 7.9     #>  2 Sepal.Length Sepal.Length Med [IQR]  5.8 [5.1;6.4] #>  3 Sepal.Length Sepal.Length Mean (std) 5.8 (0.8)     #>  4 Sepal.Length Sepal.Length N (NA)     150 (0)       #>  5 Sepal.Width  Sepal.Width  Min / Max  2.0 / 4.4     #>  6 Sepal.Width  Sepal.Width  Med [IQR]  3.0 [2.8;3.3] #>  7 Sepal.Width  Sepal.Width  Mean (std) 3.1 (0.4)     #>  8 Sepal.Width  Sepal.Width  N (NA)     150 (0)       #>  9 Petal.Length Petal.Length Min / Max  1.0 / 6.9     #> 10 Petal.Length Petal.Length Med [IQR]  4.3 [1.6;5.1] #> 11 Petal.Length Petal.Length Mean (std) 3.8 (1.8)     #> 12 Petal.Length Petal.Length N (NA)     150 (0)       #> 13 Petal.Width  Petal.Width  Min / Max  0.1 / 2.5     #> 14 Petal.Width  Petal.Width  Med [IQR]  1.3 [0.3;1.8] #> 15 Petal.Width  Petal.Width  Mean (std) 1.2 (0.8)     #> 16 Petal.Width  Petal.Width  N (NA)     150 (0)       #> 17 Species      Species      setosa     50 (33.33%)   #> 18 Species      Species      versicolor 50 (33.33%)   #> 19 Species      Species      virginica  50 (33.33%)   crosstable(mtcars) #> # A tibble: 38 × 4 #>    .id   label variable   value               #>    <chr> <chr> <chr>      <chr>               #>  1 mpg   mpg   Min / Max  10.4 / 33.9         #>  2 mpg   mpg   Med [IQR]  19.2 [15.4;22.8]    #>  3 mpg   mpg   Mean (std) 20.1 (6.0)          #>  4 mpg   mpg   N (NA)     32 (0)              #>  5 cyl   cyl   4          11 (34.38%)         #>  6 cyl   cyl   6          7 (21.88%)          #>  7 cyl   cyl   8          14 (43.75%)         #>  8 disp  disp  Min / Max  71.1 / 472.0        #>  9 disp  disp  Med [IQR]  196.3 [120.8;326.0] #> 10 disp  disp  Mean (std) 230.7 (123.9)       #> # ℹ 28 more rows crosstable(mtcars2) #> # A tibble: 78 × 4 #>    .id   label variable           value     #>    <chr> <chr> <chr>              <chr>     #>  1 model Model AMC Javelin        1 (3.12%) #>  2 model Model Cadillac Fleetwood 1 (3.12%) #>  3 model Model Camaro Z28         1 (3.12%) #>  4 model Model Chrysler Imperial  1 (3.12%) #>  5 model Model Datsun 710         1 (3.12%) #>  6 model Model Dodge Challenger   1 (3.12%) #>  7 model Model Duster 360         1 (3.12%) #>  8 model Model Ferrari Dino       1 (3.12%) #>  9 model Model Fiat 128           1 (3.12%) #> 10 model Model Fiat X1-9          1 (3.12%) #> # ℹ 68 more rows  #tidyselection, custom functions library(dplyr) crosstable(mtcars2, c(ends_with(\"t\"), starts_with(\"c\")), by=vs,            funs=c(mean, quantile), funs_arg=list(probs=c(.25,.75))) #> # A tibble: 12 × 5 #>    .id   label                 variable     straight    vshaped      #>    <chr> <chr>                 <chr>        <chr>       <chr>        #>  1 drat  Rear axle ratio       mean         3.9         3.4          #>  2 drat  Rear axle ratio       quantile 25% 3.7         3.1          #>  3 drat  Rear axle ratio       quantile 75% 4.1         3.7          #>  4 wt    Weight (1000 lbs)     mean         2.6         3.7          #>  5 wt    Weight (1000 lbs)     quantile 25% 2.0         3.2          #>  6 wt    Weight (1000 lbs)     quantile 75% 3.2         3.8          #>  7 cyl   Number of cylinders   4            10 (90.91%) 1 (9.09%)    #>  8 cyl   Number of cylinders   6            4 (57.14%)  3 (42.86%)   #>  9 cyl   Number of cylinders   8            0 (0%)      14 (100.00%) #> 10 carb  Number of carburetors mean         1.8         3.6          #> 11 carb  Number of carburetors quantile 25% 1.0         2.2          #> 12 carb  Number of carburetors quantile 75% 2.0         4.0           #margin and totals, multiple by crosstable(mtcars2, c(disp, cyl), by=c(am, vs),            margin=c(\"row\", \"col\"), total = \"both\") #> # A tibble: 8 × 8 #>   .id   label             variable am=auto & vs=straigh…¹ am=manual & vs=strai…² #>   <chr> <chr>             <chr>    <chr>                  <chr>                  #> 1 disp  Displacement (cu… Min / M… 120.1 / 258.0          71.1 / 121.0           #> 2 disp  Displacement (cu… Med [IQ… 167.6 [143.8;196.3]    79.0 [77.2;101.5]      #> 3 disp  Displacement (cu… Mean (s… 175.1 (49.1)           89.8 (18.8)            #> 4 disp  Displacement (cu… N (NA)   7 (0)                  7 (0)                  #> 5 cyl   Number of cylind… 4        3 (42.86% / 27.27%)    7 (100.00% / 63.64%)   #> 6 cyl   Number of cylind… 6        4 (57.14% / 57.14%)    0 (0% / 0%)            #> 7 cyl   Number of cylind… 8        0 (0% / 0%)            0 (0% / 0%)            #> 8 cyl   Number of cylind… Total    7 (21.88%)             7 (21.88%)             #> # ℹ abbreviated names: ¹​`am=auto & vs=straight`, ²​`am=manual & vs=straight` #> # ℹ 3 more variables: `am=auto & vs=vshaped` <chr>, #> #   `am=manual & vs=vshaped` <chr>, Total <chr>  #predicate selection, correlation, effect calculation crosstable(mtcars2, where(is.numeric), by=hp, effect=TRUE) #> # A tibble: 6 × 4 #>   .id   label                 variable `Gross horsepower`            #>   <chr> <chr>                 <chr>    <chr>                         #> 1 mpg   Miles/(US) gallon     pearson  \"-0.78 \\n95%CI [-0.89;-0.59]\" #> 2 disp  Displacement (cu.in.) pearson  \"0.79 \\n95%CI [0.61;0.89]\"    #> 3 drat  Rear axle ratio       pearson  \"-0.45 \\n95%CI [-0.69;-0.12]\" #> 4 wt    Weight (1000 lbs)     pearson  \"0.66 \\n95%CI [0.4;0.82]\"     #> 5 qsec  1/4 mile time         pearson  \"-0.71 \\n95%CI [-0.85;-0.48]\" #> 6 carb  Number of carburetors pearson  \"0.75 \\n95%CI [0.54;0.87]\"     #lambda selection & statistical tests crosstable(mtcars2, ~is.numeric(.x) && mean(.x)>50, by=vs, test=TRUE) #> # A tibble: 8 × 6 #>   .id   label                 variable   straight           vshaped        test  #>   <chr> <chr>                 <chr>      <chr>              <chr>          <chr> #> 1 disp  Displacement (cu.in.) Min / Max  71.1 / 258.0       120.3 / 472.0  \"p v… #> 2 disp  Displacement (cu.in.) Med [IQR]  120.5 [83.0;162.4] 311.0 [275.8;… \"p v… #> 3 disp  Displacement (cu.in.) Mean (std) 132.5 (56.9)       307.1 (106.8)  \"p v… #> 4 disp  Displacement (cu.in.) N (NA)     14 (0)             18 (0)         \"p v… #> 5 hp    Gross horsepower      Min / Max  52.0 / 123.0       91.0 / 335.0   \"p v… #> 6 hp    Gross horsepower      Med [IQR]  96.0 [66.0;109.8]  180.0 [156.2;… \"p v… #> 7 hp    Gross horsepower      Mean (std) 91.4 (24.4)        189.7 (60.3)   \"p v… #> 8 hp    Gross horsepower      N (NA)     14 (0)             18 (0)         \"p v…  #Dates mtcars2$my_date = as.Date(mtcars2$hp , origin=\"2010-01-01\") %>% set_label(\"Some nonsense date\") crosstable(mtcars2, my_date, by=vs, date_format=\"%d/%m/%Y\") #> # A tibble: 4 × 5 #>   .id     label              variable   straight                         vshaped #>   <chr>   <chr>              <chr>      <chr>                            <chr>   #> 1 my_date Some nonsense date Min / Max  22/02/2010 - 04/05/2010          02/04/… #> 2 my_date Some nonsense date Med [IQR]  07/04/2010 [08/03/2010;21/04/20… 30/06/… #> 3 my_date Some nonsense date Mean (std) 02/04/2010 (24.4 days)           09/07/… #> 4 my_date Some nonsense date N (NA)     14 (0)                           18 (0)   #Survival data (using formula syntax) library(survival) crosstable(aml, Surv(time, status) ~ x, times=c(0,15,30,150), followup=TRUE) #> # A tibble: 6 × 5 #>   .id                label              variable        Maintained Nonmaintained #>   <chr>              <chr>              <chr>           <chr>      <chr>         #> 1 Surv(time, status) Surv(time, status) t=0             1.00 (0/1… 1.00 (0/12)   #> 2 Surv(time, status) Surv(time, status) t=15            0.82 (2/8) 0.58 (5/7)    #> 3 Surv(time, status) Surv(time, status) t=30            0.61 (2/5) 0.29 (3/4)    #> 4 Surv(time, status) Surv(time, status) t=150           0.18 (3/1) 0 (3/0)       #> 5 Surv(time, status) Surv(time, status) Median follow … 103 [13 ;… NA [16 ; 45]  #> 6 Surv(time, status) Surv(time, status) Median survival 31         23             #Patterns crosstable(mtcars2, vs, by=am, percent_digits=0,            percent_pattern=\"{n} ({p_col} / {p_row})\") #> # A tibble: 2 × 5 #>   .id   label  variable auto           manual        #>   <chr> <chr>  <chr>    <chr>          <chr>         #> 1 vs    Engine straight 7 (37% / 50%)  7 (54% / 50%) #> 2 vs    Engine vshaped  12 (63% / 67%) 6 (46% / 33%) crosstable(mtcars2, vs, by=am, percent_digits=0,            percent_pattern=\"N={n} \\np[95%CI] = {p_col} [{p_col_inf}; {p_col_sup}]\") #> # A tibble: 2 × 5 #>   .id   label  variable auto                               manual                #>   <chr> <chr>  <chr>    <chr>                              <chr>                 #> 1 vs    Engine straight \"N=7 \\np[95%CI] = 37% [19%; 59%]\"  \"N=7 \\np[95%CI] = 54… #> 2 vs    Engine vshaped  \"N=12 \\np[95%CI] = 63% [41%; 81%]\" \"N=6 \\np[95%CI] = 46… str_high=\"n>5\"; str_lo=\"n<=5\" crosstable(mtcars2, vs, by=am, percent_digits=0,            percent_pattern=\"col={p_col}, row={p_row} ({ifelse(n<5, str_lo, str_high)})\") #> Error in map(.x, .f, ..., .progress = .progress): ℹ In index: 1. #> ℹ With name: body. #> Caused by error in `crosstable()`: #> ! Could not resolve a variable used in `percent_pattern`. #> ℹ Authorized variables are `n`, `n_tot`, `n_row`, `n_col`, `p_tot`, `p_row`, #>   and `p_col`, along with `p_xxx_inf` and `p_xxx_sup` for proportions. #> ℹ Provided `percent_pattern`: `col={p_col}, row={p_row} ({ifelse(n<5, str_lo, #>   str_high)})` #> ✖ Error: \"object 'str_lo' not found\""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_effect_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Default arguments for calculating and displaying effects in crosstable() — crosstable_effect_args","title":"Default arguments for calculating and displaying effects in crosstable() — crosstable_effect_args","text":"helper function provides default parameters defining effect sizes computed. belongs effect_args argument crosstable() function. See effect_summary, effect_tabular, effect_survival insight.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_effect_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default arguments for calculating and displaying effects in crosstable() — crosstable_effect_args","text":"","code":"crosstable_effect_args(   effect_summarize = diff_mean_auto,   effect_tabular = effect_odds_ratio,   effect_survival = effect_survival_coxph,   effect_display = display_effect,   conf_level = 0.95,   digits = 2 )"},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_effect_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default arguments for calculating and displaying effects in crosstable() — crosstable_effect_args","text":"effect_summarize function three arguments (continuous variable, grouping variable conf_level), used compare continuous variable. Returns list five components: effect (effect value(s)), ci (matrix confidence interval(s)), effect.name (interpretation(s) effect value(s)), effect.type (description measure used) conf_level (confidence interval level). Users can use diff_mean_auto(), diff_mean_student(), diff_mean_boot(), diff_median(), custom function. effect_tabular function three arguments (two categorical variables conf_level) used measure associations two factors. Returns list five components: effect (effect value(s)), ci (matrix confidence interval(s)), effect.name (interpretation(s) effect value(s)), effect.type (description measure used) conf_level (confidence interval level).Users can use effect_odds_ratio(), effect_relative_risk(), effect_risk_difference(), custom function. effect_survival function two argument (formula conf_level), used measure association censored factor. Returns components created effect_summarize.Users can use effect_survival_coxph() custom function. effect_display function format effect. See display_effect(). conf_level desired confidence interval level digits decimal places","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_effect_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default arguments for calculating and displaying effects in crosstable() — crosstable_effect_args","text":"list effect parameters","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_effect_args.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Default arguments for calculating and displaying effects in crosstable() — crosstable_effect_args","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Options for the package crosstable — crosstable_options","title":"Options for the package crosstable — crosstable_options","text":"Use function manage crosstable parameters globally taking advantage autocompletion. Use crosstable_peek_options() see option currently set crosstable_reset_options() set options back default.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Options for the package crosstable — crosstable_options","text":"","code":"crosstable_options(   ...,   zero_percent = FALSE,   only_round = FALSE,   verbosity_autotesting = \"default\",   verbosity_duplicate_cols = \"default\",   crosstable_fishertest_B = 1e+05,   total,   percent_pattern,   margin,   percent_digits,   num_digits,   showNA,   label,   funs,   funs_arg,   cor_method,   drop_levels,   unique_numeric,   date_format,   times,   followup,   test_arg,   effect_args,   wrap_id = 70,   compact_padding = 25,   header_show_n_pattern = \"{.col} (N={.n})\",   keep_id,   autofit,   compact,   remove_header_keys,   show_test_name,   padding_v,   header_show_n,   fontsize_body,   fontsize_subheaders,   fontsize_header,   units = \"in\",   peek_docx = TRUE,   font_code = \"Consolas\",   add_max_cols = 25,   format_legend_name,   table_legend_par_before,   table_legend_prefix,   figure_legend_par_after,   figure_legend_prefix,   normal_squish,   title_squish,   allow_break,   style_normal,   style_character,   style_strong,   style_image,   style_legend,   style_heading,   style_list_ordered,   style_list_unordered,   scientific_log,   .local = FALSE,   reset = deprecated() )"},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Options for the package crosstable — crosstable_options","text":"... unused zero_percent set TRUE proportions displayed n==0 only_round default argument format_fixed() verbosity_autotesting one default, quiet, verbose verbosity_duplicate_cols one default, quiet, verbose. crosstable_fishertest_B number simulations perform fisher.test() failing (FEXACT error 7). total setting crosstable() arguments globally. percent_pattern setting crosstable() arguments globally. margin setting crosstable() arguments globally. percent_digits setting crosstable() arguments globally. num_digits setting crosstable() arguments globally. showNA setting crosstable() arguments globally. label setting crosstable() arguments globally. funs setting crosstable() arguments globally. funs_arg setting crosstable() arguments globally. cor_method setting crosstable() arguments globally. drop_levels setting crosstable() arguments globally. unique_numeric setting crosstable() arguments globally. date_format setting crosstable() arguments globally. times setting crosstable() arguments globally. followup setting crosstable() arguments globally. test_arg setting crosstable() arguments globally. effect_args setting crosstable() arguments globally. wrap_id id contains spaces, wrap maximum number characters. compact_padding flextables, left-padding non-headers rows compact=TRUE. header_show_n_pattern glue pattern used showing N header flextables. .col name column .n size group. Default {.col} (N={.n}). keep_id setting as_flextable() arguments globally. autofit setting as_flextable() arguments globally. compact setting as_flextable() arguments globally. remove_header_keys setting as_flextable() arguments globally. show_test_name setting as_flextable() arguments globally. padding_v setting as_flextable() arguments globally. header_show_n setting as_flextable() arguments globally. fontsize_body setting as_flextable() arguments globally. fontsize_subheaders setting as_flextable() arguments globally. Subheaders considered compact=TRUE. fontsize_header setting as_flextable() arguments globally. units default units body_add_gg2() body_add_img2() peek_docx behavior peek(), open docx TRUE (default) xlsx FALSE font_code font family used show code, likely monospaced typeface Consolas (default) add_max_cols max number columns crosstable can added Word document format_legend_name legend name (\"Table\", \"Figure\") formatted. Default officer::fp_text_lite(bold=TRUE) table_legend_par_before whether add empty paragraph table legends table_legend_prefix, figure_legend_prefix prefix legend, numbering figure_legend_par_after whether add empty paragraph figure legends normal_squish squish text normal paragraphs? title_squish squish text headers paragraphs? allow_break allow crosstable rows break across pages style_normal specifying styles used officer template. style_character specifying styles used officer template. style_strong specifying styles used officer template. style_image specifying styles used officer template. style_legend specifying styles used officer template. style_heading specifying styles used headings different levels. Levels pasted end (e.g. use \"title\" level 2 heading style \"title2\"). style_list_ordered, style_list_unordered specifying styles used lists rdocx template. Needed body_add_list() work. scientific_log maximum power number can formatted scientific. Default 4 applies numbers <1e-4 >1e4. .local TRUE, effect apply local frame (thanks rlang::local_options()) reset TRUE, set options back default","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Options for the package crosstable — crosstable_options","text":"Nothing, called side effects","code":""},{"path":[]},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_peek_options.html","id":null,"dir":"Reference","previous_headings":"","what":"See which crosstable option is currently set. — crosstable_peek_options","title":"See which crosstable option is currently set. — crosstable_peek_options","text":"See crosstable option currently set.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_peek_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"See which crosstable option is currently set. — crosstable_peek_options","text":"","code":"crosstable_peek_options(keep_null = FALSE)"},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_peek_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"See which crosstable option is currently set. — crosstable_peek_options","text":"keep_null set TRUE get list","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_peek_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"See which crosstable option is currently set. — crosstable_peek_options","text":"named list crosstable options","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_reset_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset all crosstable options. — crosstable_reset_options","title":"Reset all crosstable options. — crosstable_reset_options","text":"Reset crosstable options.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_reset_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset all crosstable options. — crosstable_reset_options","text":"","code":"crosstable_reset_options(quiet = FALSE)"},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_reset_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset all crosstable options. — crosstable_reset_options","text":"quiet set TRUE remove message.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_reset_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset all crosstable options. — crosstable_reset_options","text":"Nothing, called side effects","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_test_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Default arguments for calculating and displaying tests in crosstable() — crosstable_test_args","title":"Default arguments for calculating and displaying tests in crosstable() — crosstable_test_args","text":"starting point refining testing algorithm used crosstable. Users can provide functions test.~.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_test_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default arguments for calculating and displaying tests in crosstable() — crosstable_test_args","text":"","code":"crosstable_test_args(   test_summarize = test_summarize_auto,   test_tabular = test_tabular_auto,   test_correlation = test_correlation_auto,   test_survival = test_survival_logrank,   test_display = display_test,   plim = 4,   show_method = TRUE )"},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_test_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default arguments for calculating and displaying tests in crosstable() — crosstable_test_args","text":"test_summarize function two arguments (continuous variable grouping variable), used compare continuous variable. Must return list two components: p.value method. See test_summarize_auto test_summarize_linear_contrasts examples functions. test_tabular function two arguments (two categorical variables), used test association two categorical variables.  Must return list two components: p.value method. See test_tabular_auto example. test_correlation function three arguments (two continuous variables plus correlation method), used test association two continuous variables.  Like cor.test, must return list least estimate, p.value, method, also conf.int optionally. See test_correlation_auto example. test_survival function one argument (formula surv~), used compare survival estimations. Must return list two components: p.value method. See test_survival_logrank example. test_display function used display test result. See display_test. plim number digits p value. show_method whether display test name (logical).","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_test_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default arguments for calculating and displaying tests in crosstable() — crosstable_test_args","text":"list test parameters","code":""},{"path":[]},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_test_args.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Default arguments for calculating and displaying tests in crosstable() — crosstable_test_args","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/crosstable_test_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default arguments for calculating and displaying tests in crosstable() — crosstable_test_args","text":"","code":"library(dplyr) my_test_args=crosstable_test_args() my_test_args$test_summarize = test_summarize_linear_contrasts iris %>%   mutate(Petal.Width.qt = paste0(\"Q\", ntile(Petal.Width, 5)) %>% ordered()) %>%   crosstable(Petal.Length ~ Petal.Width.qt, test=TRUE, test_args = my_test_args) #> # A tibble: 4 × 9 #>   .id          label        variable   Q1          Q2    Q3    Q4    Q5    test  #>   <chr>        <chr>        <chr>      <chr>       <chr> <chr> <chr> <chr> <chr> #> 1 Petal.Length Petal.Length Min / Max  1.0 / 1.9   1.3 … 3.6 … 4.5 … 4.9 … \"p v… #> 2 Petal.Length Petal.Length Med [IQR]  1.4 [1.3;1… 1.6 … 4.3 … 5.0 … 5.6 … \"p v… #> 3 Petal.Length Petal.Length Mean (std) 1.4 (0.2)   2.2 … 4.4 … 5.1 … 5.7 … \"p v… #> 4 Petal.Length Petal.Length N (NA)     30 (0)      30 (… 30 (… 30 (… 30 (… \"p v…"},{"path":"https://danchaltiel.github.io/crosstable/reference/ct_compact.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function to compact a table (publication formatting) — ct_compact","title":"Generic function to compact a table (publication formatting) — ct_compact","text":"Generic function compact table (publication formatting)","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/ct_compact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function to compact a table (publication formatting) — ct_compact","text":"","code":"# S3 method for data.frame ct_compact(   data,   name_from,   name_to = \"variable\",   wrap_cols = NULL,   rtn_flextable = FALSE,   ... )  # S3 method for crosstable ct_compact(   data,   name_from = c(\"label\", \".id\"),   name_to = \"variable\",   keep_id = FALSE,   ... )"},{"path":"https://danchaltiel.github.io/crosstable/reference/ct_compact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function to compact a table (publication formatting) — ct_compact","text":"data object compact ... additional arguments (used) name_from name column collapsed compacting name_to name column receive collapsed column. created exist. wrap_cols name columns wrap rtn_flextable whether return formatted flextable() object simple data.frame keep_id glue pattern keep column name along label. TRUE, default \"{label} ({.id})\".","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/ct_compact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function to compact a table (publication formatting) — ct_compact","text":"compacted data.frame","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/ct_compact.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generic function to compact a table (publication formatting) — ct_compact","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/ct_compact.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic function to compact a table (publication formatting) — ct_compact","text":"","code":"#dataframes x=iris[c(1:5,51:55,101:105),] ct_compact(x, name_from=\"Species\") #>      variable Sepal.Length Sepal.Width Petal.Length Petal.Width #> 1      setosa                                                   #> 2                      5.1         3.5          1.4         0.2 #> 3                      4.9           3          1.4         0.2 #> 4                      4.7         3.2          1.3         0.2 #> 5                      4.6         3.1          1.5         0.2 #> 6                        5         3.6          1.4         0.2 #> 7  versicolor                                                   #> 8                        7         3.2          4.7         1.4 #> 9                      6.4         3.2          4.5         1.5 #> 10                     6.9         3.1          4.9         1.5 #> 11                     5.5         2.3            4         1.3 #> 12                     6.5         2.8          4.6         1.5 #> 13  virginica                                                   #> 14                     6.3         3.3            6         2.5 #> 15                     5.8         2.7          5.1         1.9 #> 16                     7.1           3          5.9         2.1 #> 17                     6.3         2.9          5.6         1.8 #> 18                     6.5           3          5.8         2.2 ct_compact(x, name_from=\"Species\", name_to=\"Petal.Length\") #>    Petal.Length Sepal.Length Sepal.Width Petal.Width #> 1        setosa                                      #> 2           1.4          5.1         3.5         0.2 #> 3           1.4          4.9           3         0.2 #> 4           1.3          4.7         3.2         0.2 #> 5           1.5          4.6         3.1         0.2 #> 6           1.4            5         3.6         0.2 #> 7    versicolor                                      #> 8           4.7            7         3.2         1.4 #> 9           4.5          6.4         3.2         1.5 #> 10          4.9          6.9         3.1         1.5 #> 11            4          5.5         2.3         1.3 #> 12          4.6          6.5         2.8         1.5 #> 13    virginica                                      #> 14            6          6.3         3.3         2.5 #> 15          5.1          5.8         2.7         1.9 #> 16          5.9          7.1           3         2.1 #> 17          5.6          6.3         2.9         1.8 #> 18          5.8          6.5           3         2.2 x$Species2 = substr(x$Species, 1, 1) ct_compact(x, name_from=\"Species\", wrap_cols=\"Species2\") #>      variable Sepal.Length Sepal.Width Petal.Length Petal.Width Species2 #> 1      setosa                                                          s #> 2                      5.1         3.5          1.4         0.2          #> 3                      4.9           3          1.4         0.2          #> 4                      4.7         3.2          1.3         0.2          #> 5                      4.6         3.1          1.5         0.2          #> 6                        5         3.6          1.4         0.2          #> 7  versicolor                                                          v #> 8                        7         3.2          4.7         1.4          #> 9                      6.4         3.2          4.5         1.5          #> 10                     6.9         3.1          4.9         1.5          #> 11                     5.5         2.3            4         1.3          #> 12                     6.5         2.8          4.6         1.5          #> 13  virginica                                                          v #> 14                     6.3         3.3            6         2.5          #> 15                     5.8         2.7          5.1         1.9          #> 16                     7.1           3          5.9         2.1          #> 17                     6.3         2.9          5.6         1.8          #> 18                     6.5           3          5.8         2.2           #crosstables x=crosstable(mtcars2, c(disp,hp,am), by=vs, test=TRUE, effect=TRUE) ct_compact(x) #>                 variable           straight             vshaped #> 1  Displacement (cu.in.)                                        #> 2              Min / Max       71.1 / 258.0       120.3 / 472.0 #> 3              Med [IQR] 120.5 [83.0;162.4] 311.0 [275.8;360.0] #> 4             Mean (std)       132.5 (56.9)       307.1 (106.8) #> 5                 N (NA)             14 (0)              18 (0) #> 6       Gross horsepower                                        #> 7              Min / Max       52.0 / 123.0        91.0 / 335.0 #> 8              Med [IQR]  96.0 [66.0;109.8] 180.0 [156.2;226.2] #> 9             Mean (std)        91.4 (24.4)        189.7 (60.3) #> 10                N (NA)             14 (0)              18 (0) #> 11          Transmission                                        #> 12                  auto         7 (36.84%)         12 (63.16%) #> 13                manual         7 (53.85%)          6 (46.15%) #>                                                                                               effect #> 1  Difference in means (Welch CI), ref='straight'\\nvshaped minus straight: 174.69 [114.36 to 235.02] #> 2                                                                                                    #> 3                                                                                                    #> 4                                                                                                    #> 5                                                                                                    #> 6    Difference in means (Welch CI), ref='straight'\\nvshaped minus straight: 98.37 [66.06 to 130.67] #> 7                                                                                                    #> 8                                                                                                    #> 9                                                                                                    #> 10                                                                                                   #> 11          Odds ratio [95% Wald CI], ref='vshaped vs straight'\\nmanual vs auto: 0.50 [0.11 to 2.08] #> 12                                                                                                   #> 13                                                                                                   #>                                              test #> 1    p value: <0.0001 \\n(Welch Two Sample t-test) #> 2                                                 #> 3                                                 #> 4                                                 #> 5                                                 #> 6    p value: <0.0001 \\n(Welch Two Sample t-test) #> 7                                                 #> 8                                                 #> 9                                                 #> 10                                                #> 11 p value: 0.3409 \\n(Pearson's Chi-squared test) #> 12                                                #> 13                                                ct_compact(x, name_from=\".id\") #>      variable           straight             vshaped #> 1        disp                                        #> 2   Min / Max       71.1 / 258.0       120.3 / 472.0 #> 3   Med [IQR] 120.5 [83.0;162.4] 311.0 [275.8;360.0] #> 4  Mean (std)       132.5 (56.9)       307.1 (106.8) #> 5      N (NA)             14 (0)              18 (0) #> 6          hp                                        #> 7   Min / Max       52.0 / 123.0        91.0 / 335.0 #> 8   Med [IQR]  96.0 [66.0;109.8] 180.0 [156.2;226.2] #> 9  Mean (std)        91.4 (24.4)        189.7 (60.3) #> 10     N (NA)             14 (0)              18 (0) #> 11         am                                        #> 12       auto         7 (36.84%)         12 (63.16%) #> 13     manual         7 (53.85%)          6 (46.15%) #>                                                                                               effect #> 1  Difference in means (Welch CI), ref='straight'\\nvshaped minus straight: 174.69 [114.36 to 235.02] #> 2                                                                                                    #> 3                                                                                                    #> 4                                                                                                    #> 5                                                                                                    #> 6    Difference in means (Welch CI), ref='straight'\\nvshaped minus straight: 98.37 [66.06 to 130.67] #> 7                                                                                                    #> 8                                                                                                    #> 9                                                                                                    #> 10                                                                                                   #> 11          Odds ratio [95% Wald CI], ref='vshaped vs straight'\\nmanual vs auto: 0.50 [0.11 to 2.08] #> 12                                                                                                   #> 13                                                                                                   #>                                              test #> 1    p value: <0.0001 \\n(Welch Two Sample t-test) #> 2                                                 #> 3                                                 #> 4                                                 #> 5                                                 #> 6    p value: <0.0001 \\n(Welch Two Sample t-test) #> 7                                                 #> 8                                                 #> 9                                                 #> 10                                                #> 11 p value: 0.3409 \\n(Pearson's Chi-squared test) #> 12                                                #> 13"},{"path":"https://danchaltiel.github.io/crosstable/reference/display_effect.html","id":null,"dir":"Reference","previous_headings":"","what":"Default function to display the effect — display_effect","title":"Default function to display the effect — display_effect","text":"User can provide custom version crosstable_effect_args()","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/display_effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default function to display the effect — display_effect","text":"","code":"display_effect(effect, digits = 4)"},{"path":"https://danchaltiel.github.io/crosstable/reference/display_effect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default function to display the effect — display_effect","text":"effect effect digits digits","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/display_effect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default function to display the effect — display_effect","text":"character vector","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/display_effect.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Default function to display the effect — display_effect","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/display_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Default function to display a test result — display_test","title":"Default function to display a test result — display_test","text":"Default function display test result","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/display_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default function to display a test result — display_test","text":"","code":"display_test(test, digits = 4, method = TRUE)"},{"path":"https://danchaltiel.github.io/crosstable/reference/display_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default function to display a test result — display_test","text":"test test digits number digits method display method","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/display_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default function to display a test result — display_test","text":"string","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/display_test.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Default function to display a test result — display_test","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/docx_bookmarks2.html","id":null,"dir":"Reference","previous_headings":"","what":"List Word bookmarks, including the ones in header and footer — docx_bookmarks2","title":"List Word bookmarks, including the ones in header and footer — docx_bookmarks2","text":"correction officer::docx_bookmarks(). See PR.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/docx_bookmarks2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Word bookmarks, including the ones in header and footer — docx_bookmarks2","text":"","code":"docx_bookmarks2(   x,   return_vector = FALSE,   target = c(\"all\", \"header\", \"body\", \"footer\") )"},{"path":"https://danchaltiel.github.io/crosstable/reference/docx_bookmarks2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Word bookmarks, including the ones in header and footer — docx_bookmarks2","text":"x rdocx object return_vector use TRUE compatibility officer::docx_bookmarks() target one c(\"\", \"header\", \"body\", \"footer\")","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/docx_bookmarks2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Word bookmarks, including the ones in header and footer — docx_bookmarks2","text":"list bookmarks","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/docx_bookmarks2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"List Word bookmarks, including the ones in header and footer — docx_bookmarks2","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/effect_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Effect measure for association between one continuous and one categorical variable — effect_summary","title":"Effect measure for association between one continuous and one categorical variable — effect_summary","text":"User can either use extend functions configure effect calculation.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/effect_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Effect measure for association between one continuous and one categorical variable — effect_summary","text":"","code":"diff_mean_auto(x, by, conf_level = 0.95, R = 500)  diff_mean_boot(x, by, conf_level = 0.95, R = 500)  diff_median_boot(x, by, conf_level = 0.95, R = 500)  diff_mean_student(x, by, conf_level = 0.95)"},{"path":"https://danchaltiel.github.io/crosstable/reference/effect_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Effect measure for association between one continuous and one categorical variable — effect_summary","text":"x numeric vector categorical vector (exactly 2 unique levels) conf_level confidence interval level R number bootstrap replication","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/effect_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Effect measure for association between one continuous and one categorical variable — effect_summary","text":"list five components: effect, ci, effect.name, effect.type, conf_level","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/effect_summary.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Effect measure for association between one continuous and one categorical variable — effect_summary","text":"diff_mean_auto(): (Default) calculate specific \"difference means\" effect based normality (Shapiro Anderson test) variance homogeneity (Bartlett test) diff_mean_boot(): calculate \"difference means\" effect bootstrapped CI using standard deviation diff_median_boot(): calculate \"difference medians\" effect bootstrapped CI using quantiles#' diff_mean_student(): calculate \"difference means\" effect using t.test confidence intervals","code":""},{"path":[]},{"path":"https://danchaltiel.github.io/crosstable/reference/effect_summary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Effect measure for association between one continuous and one categorical variable — effect_summary","text":"Dan Chaltiel, David Hajage","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/effect_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Effect measure for association between one censored variable and one categorical variable — effect_survival","title":"Effect measure for association between one censored variable and one categorical variable — effect_survival","text":"Effect measure association one censored variable one categorical variable","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/effect_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Effect measure for association between one censored variable and one categorical variable — effect_survival","text":"","code":"effect_survival_coxph(x, by, conf_level = 0.95)"},{"path":"https://danchaltiel.github.io/crosstable/reference/effect_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Effect measure for association between one censored variable and one categorical variable — effect_survival","text":"x survival vector (made using survival::Surv()) categorical vector (exactly 2 unique levels) conf_level confidence interval level","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/effect_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Effect measure for association between one censored variable and one categorical variable — effect_survival","text":"list two components: p.value method","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/effect_survival.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Effect measure for association between one censored variable and one categorical variable — effect_survival","text":"Dan Chaltiel, David Hajage","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/effect_tabular.html","id":null,"dir":"Reference","previous_headings":"","what":"Effect measure for association between two categorical variables — effect_tabular","title":"Effect measure for association between two categorical variables — effect_tabular","text":"User can either use extend functions configure effect calculation.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/effect_tabular.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Effect measure for association between two categorical variables — effect_tabular","text":"","code":"effect_odds_ratio(x, by, conf_level = 0.95)  effect_relative_risk(x, by, conf_level = 0.95)  effect_risk_difference(x, by, conf_level = 0.95)"},{"path":"https://danchaltiel.github.io/crosstable/reference/effect_tabular.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Effect measure for association between two categorical variables — effect_tabular","text":"x categorical vector (character, factor, ...) categorical vector (exactly 2 unique levels) conf_level confidence interval level","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/effect_tabular.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Effect measure for association between two categorical variables — effect_tabular","text":"list five components: effect, ci, effect.name, effect.type, conf_level","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/effect_tabular.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Effect measure for association between two categorical variables — effect_tabular","text":"effect_odds_ratio(): (Default) calculate odds ratio effect_relative_risk(): calculate relative risk effect_risk_difference(): calculate risk difference","code":""},{"path":[]},{"path":"https://danchaltiel.github.io/crosstable/reference/effect_tabular.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Effect measure for association between two categorical variables — effect_tabular","text":"Dan Chaltiel, David Hajage","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/format_fixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Format numbers with the exact same number of decimals, including trailing zeros — format_fixed","title":"Format numbers with the exact same number of decimals, including trailing zeros — format_fixed","text":"Format numbers exact number decimals, including trailing zeros","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/format_fixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format numbers with the exact same number of decimals, including trailing zeros — format_fixed","text":"","code":"format_fixed(   x,   digits = 1,   zero_digits = 1,   date_format = NULL,   percent = FALSE,   scientific = getOption(\"crosstable_scientific_log\", 4),   only_round = getOption(\"crosstable_only_round\", FALSE),   ... )"},{"path":"https://danchaltiel.github.io/crosstable/reference/format_fixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format numbers with the exact same number of decimals, including trailing zeros — format_fixed","text":"x numeric vector format digits number decimals zero_digits number significant digits values rounded 0 (can set NULL keep original 0 value) date_format x vector Date POSIXt, format apply (see strptime formats) percent TRUE, format values percentages scientific power ten /numbers displayed scientific notation. only_round TRUE, format_fixed simply returns rounded value. Can set globally options(\"crosstable_only_round\"=TRUE). ... unused","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/format_fixed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format numbers with the exact same number of decimals, including trailing zeros — format_fixed","text":"character vector formatted numbers","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/format_fixed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Format numbers with the exact same number of decimals, including trailing zeros — format_fixed","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/format_fixed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format numbers with the exact same number of decimals, including trailing zeros — format_fixed","text":"","code":"x = c(1, 1.2, 12.78749, pi, 0.00000012) format_fixed(x, digits=3) #default zero_digits=1 #> [1] \"1.000e+00\" \"1.200e+00\" \"1.279e+01\" \"3.142e+00\" \"1.200e-07\" format_fixed(x, digits=3, zero_digits=2) #> [1] \"1.000e+00\" \"1.200e+00\" \"1.279e+01\" \"3.142e+00\" \"1.200e-07\" format_fixed(x, digits=3, zero_digits=NULL) #> [1] \"1.000e+00\" \"1.200e+00\" \"1.279e+01\" \"3.142e+00\" \"1.200e-07\"  x_sd = sd(iris$Sepal.Length/10000, na.rm=TRUE) format_fixed(x_sd, dig=6) #> [1] \"8.280661e-05\" format_fixed(x_sd, dig=3, zero_digits=2) #default only_round=FALSE #> [1] \"8.281e-05\" format_fixed(x_sd, dig=3, zero_digits=2, only_round=TRUE) #> [1] \"8.281e-05\" options(\"crosstable_only_round\"=TRUE) format_fixed(x_sd, dig=3, zero_digits=2) #override default #> [1] \"8.281e-05\" options(\"crosstable_only_round\"=NULL)  x2 = mtcars$mpg/max(mtcars$mpg) x2 = c(0.01, 0.1001, 0.500005, 0.00000012) format_fixed(x2, percent=TRUE, dig=6) #> [1] \"1.000000e+00%\" \"1.001000e+01%\" \"5.000050e+01%\" \"1.200000e-05%\""},{"path":"https://danchaltiel.github.io/crosstable/reference/generate_autofit_macro.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a macro file for autofitting — generate_autofit_macro","title":"Generate a macro file for autofitting — generate_autofit_macro","text":"function generates file can imported MS Word order use macro autofitting tables document . macro file imported per computer.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/generate_autofit_macro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a macro file for autofitting — generate_autofit_macro","text":"","code":"generate_autofit_macro()"},{"path":"https://danchaltiel.github.io/crosstable/reference/generate_autofit_macro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a macro file for autofitting — generate_autofit_macro","text":"Nothing, called side effects","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/generate_autofit_macro.html","id":"installation","dir":"Reference","previous_headings":"","what":"Installation","title":"Generate a macro file for autofitting — generate_autofit_macro","text":"R console, run generate_autofit_macro() generate file crosstable_autofit.bas working directory. MS Word, press Alt+F11 open VB Editor. Editor, go File > Import press Ctrl+M open import dialog, import crosstable_autofit.bas. now \"CrosstableMacros\" module \"Normal\" project. Run macro, either VB Editor View > Macros > View Macros > Run. process make macro accessible Word file computer. Note , Editor, can also drag module document project make macro accessible file. file named docm extension though.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/generate_autofit_macro.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate a macro file for autofitting — generate_autofit_macro","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/get_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Get label if wanted and available, or default (name) otherwise — get_label","title":"Get label if wanted and available, or default (name) otherwise — get_label","text":"Get label wanted available, default (name) otherwise","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/get_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get label if wanted and available, or default (name) otherwise — get_label","text":"","code":"get_label(x, default = names(x), object = FALSE, simplify = TRUE)"},{"path":"https://danchaltiel.github.io/crosstable/reference/get_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get label if wanted and available, or default (name) otherwise — get_label","text":"x labelled object. x list/data.frame, get_label() return labels children recursively default value returned label. Default names(x). object x list/data.frame, object=TRUE force getting labels object instead children simplify x list object=FALSE, simplify result vector","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/get_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get label if wanted and available, or default (name) otherwise — get_label","text":"character vector simplify==TRUE, list otherwise","code":""},{"path":[]},{"path":"https://danchaltiel.github.io/crosstable/reference/get_label.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get label if wanted and available, or default (name) otherwise — get_label","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/get_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get label if wanted and available, or default (name) otherwise — get_label","text":"","code":"xx=mtcars2 %>%   set_label(\"The mtcars2 dataset\", object=TRUE) xx$cyl=remove_label(xx$cyl)  #vectors get_label(xx$mpg) #label=\"Miles/(US) gallon\" #> [1] \"Miles/(US) gallon\" get_label(xx$cyl) #default to NULL (as names(xx$cyl)==NULL) #> NULL get_label(xx$cyl, default=\"Default value\") #> [1] \"Default value\"  #data.frames get_label(xx) #>                     model                       mpg                       cyl  #>                   \"Model\"       \"Miles/(US) gallon\"                     \"cyl\"  #>                      disp                        hp                      drat  #>   \"Displacement (cu.in.)\"        \"Gross horsepower\"         \"Rear axle ratio\"  #>                        wt                      qsec                        vs  #>       \"Weight (1000 lbs)\"           \"1/4 mile time\"                  \"Engine\"  #>                        am                      gear                      carb  #>            \"Transmission\" \"Number of forward gears\"   \"Number of carburetors\"  #>                   hp_date                qsec_posix  #>      \"Some nonsense date\"               \"Date+time\"  get_label(xx, object=TRUE) #> [1] \"The mtcars2 dataset\" data.frame(name=names(xx), label=get_label(xx, default=NA)) #cyl is NA #>                  name                   label #> model           model                   Model #> mpg               mpg       Miles/(US) gallon #> cyl               cyl                    <NA> #> disp             disp   Displacement (cu.in.) #> hp                 hp        Gross horsepower #> drat             drat         Rear axle ratio #> wt                 wt       Weight (1000 lbs) #> qsec             qsec           1/4 mile time #> vs                 vs                  Engine #> am                 am            Transmission #> gear             gear Number of forward gears #> carb             carb   Number of carburetors #> hp_date       hp_date      Some nonsense date #> qsec_posix qsec_posix               Date+time  #lists get_label(list(xx$cyl, xx$mpg)) #> [1] NA                  \"Miles/(US) gallon\" get_label(list(foo=xx$cyl, bar=xx$mpg)) #>                 foo                 bar  #>               \"foo\" \"Miles/(US) gallon\"  get_label(list(foo=xx$cyl, bar=xx$mpg), default=\"Default value\") #>                 foo                 bar  #>     \"Default value\" \"Miles/(US) gallon\""},{"path":"https://danchaltiel.github.io/crosstable/reference/get_percent_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Percent pattern helper — get_percent_pattern","title":"Percent pattern helper — get_percent_pattern","text":"Get list pre-filled values percent_pattern.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/get_percent_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Percent pattern helper — get_percent_pattern","text":"","code":"get_percent_pattern(   margin = c(\"row\", \"column\", \"cell\", \"none\", \"all\"),   na = FALSE )"},{"path":"https://danchaltiel.github.io/crosstable/reference/get_percent_pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Percent pattern helper — get_percent_pattern","text":"margin vector giving margins compute. na whether use NA","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/get_percent_pattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Percent pattern helper — get_percent_pattern","text":"list","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/get_percent_pattern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Percent pattern helper — get_percent_pattern","text":"","code":"get_percent_pattern(c(\"cells\",\"row\",\"column\")) #> $body #> {n} ({p_tot} / {p_col} / {p_row}) #>  #> $total_row #> [1] \"{n} ({p_col})\" #>  #> $total_col #> [1] \"{n} ({p_row})\" #>  #> $total_all #> [1] \"{n} ({p_tot})\" #>  get_percent_pattern(c(\"cells\",\"row\",\"column\"), na=TRUE) #> $body #> [1] \"{n} ({p_tot_na} / {p_col_na} / {p_row_na})\" #>  #> $total_row #> [1] \"{n} ({p_col_na})\" #>  #> $total_col #> [1] \"{n} ({p_row_na})\" #>  #> $total_all #> [1] \"{n} ({p_tot_na})\" #>"},{"path":"https://danchaltiel.github.io/crosstable/reference/import_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Import labels — import_labels","title":"Import labels — import_labels","text":"import_labels imports labels data.frame (data_label) another one (.tbl). Works synergy save_labels(). save_labels saves labels data.frame temporary variable can retrieve import_labels.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/import_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import labels — import_labels","text":"","code":"import_labels(   .tbl,   data_label,   name_from = \"name\",   label_from = \"label\",   warn_name = FALSE,   warn_label = FALSE,   verbose = deprecated() )  save_labels(.tbl)"},{"path":"https://danchaltiel.github.io/crosstable/reference/import_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import labels — import_labels","text":".tbl data.frame labelled data_label data.frame import labels. missing, function take labels last dataframe save_labels() called. name_from data_label, column get variable name (default name) label_from data_label, column get variable label (default label) warn_name TRUE, displays warning variable name found data_label warn_label TRUE, displays warning label found .tbl verbose deprecated","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/import_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import labels — import_labels","text":"dataframe, .tbl, labels .tbl invisibly. Used side effects.","code":""},{"path":[]},{"path":"https://danchaltiel.github.io/crosstable/reference/import_labels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import labels — import_labels","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/import_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import labels — import_labels","text":"","code":"#import the labels from a data.frame to another iris_label = data.frame(   name=c(\"Sepal.Length\", \"Sepal.Width\",          \"Petal.Length\", \"Petal.Width\", \"Species\"),   label=c(\"Length of Sepals\", \"Width of Sepals\",           \"Length of Petals\", \"Width of Petals\", \"Specie name\") ) iris %>%   import_labels(iris_label) %>%   crosstable #> # A tibble: 19 × 4 #>    .id          label            variable   value         #>    <chr>        <chr>            <chr>      <chr>         #>  1 Sepal.Length Length of Sepals Min / Max  4.3 / 7.9     #>  2 Sepal.Length Length of Sepals Med [IQR]  5.8 [5.1;6.4] #>  3 Sepal.Length Length of Sepals Mean (std) 5.8 (0.8)     #>  4 Sepal.Length Length of Sepals N (NA)     150 (0)       #>  5 Sepal.Width  Width of Sepals  Min / Max  2.0 / 4.4     #>  6 Sepal.Width  Width of Sepals  Med [IQR]  3.0 [2.8;3.3] #>  7 Sepal.Width  Width of Sepals  Mean (std) 3.1 (0.4)     #>  8 Sepal.Width  Width of Sepals  N (NA)     150 (0)       #>  9 Petal.Length Length of Petals Min / Max  1.0 / 6.9     #> 10 Petal.Length Length of Petals Med [IQR]  4.3 [1.6;5.1] #> 11 Petal.Length Length of Petals Mean (std) 3.8 (1.8)     #> 12 Petal.Length Length of Petals N (NA)     150 (0)       #> 13 Petal.Width  Width of Petals  Min / Max  0.1 / 2.5     #> 14 Petal.Width  Width of Petals  Med [IQR]  1.3 [0.3;1.8] #> 15 Petal.Width  Width of Petals  Mean (std) 1.2 (0.8)     #> 16 Petal.Width  Width of Petals  N (NA)     150 (0)       #> 17 Species      Specie name      setosa     50 (33.33%)   #> 18 Species      Specie name      versicolor 50 (33.33%)   #> 19 Species      Specie name      virginica  50 (33.33%)    #save the labels, use some dplyr label-removing function, then retrieve the labels library(dplyr) mtcars2 %>%   save_labels() %>%   transmute(disp=as.numeric(disp)+1) %>%   import_labels(warn_label=FALSE) %>% #   crosstable(disp) #> # A tibble: 4 × 4 #>   .id   label                 variable   value               #>   <chr> <chr>                 <chr>      <chr>               #> 1 disp  Displacement (cu.in.) Min / Max  72.1 / 473.0        #> 2 disp  Displacement (cu.in.) Med [IQR]  197.3 [121.8;327.0] #> 3 disp  Displacement (cu.in.) Mean (std) 231.7 (123.9)       #> 4 disp  Displacement (cu.in.) N (NA)     32 (0)"},{"path":"https://danchaltiel.github.io/crosstable/reference/iris2.html","id":null,"dir":"Reference","previous_headings":"","what":"Modified iris dataset — iris2","title":"Modified iris dataset — iris2","text":"Modified iris dataset : every column labelled (using label attribute) Species column considered factor See iris informations original \"Edgar Anderson's Iris Data\" dataset.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/iris2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modified iris dataset — iris2","text":"","code":"iris2"},{"path":"https://danchaltiel.github.io/crosstable/reference/iris2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Modified iris dataset — iris2","text":"data frame 150 observations 5 variables labels.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/iris2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Modified iris dataset — iris2","text":"","code":"library(dplyr) iris2 = iris %>%     expss::apply_labels( #I also could have used [import_labels] or even `labelled::set_variable_labels()`         Species = \"Specie\",         Sepal.Length = \"Length of Sepal\",         Sepal.Width = \"Width of Sepal\",         Petal.Length = \"Length of Petal\",         Petal.Width = \"Width of Petal\"     ) %>%     as_tibble()"},{"path":"https://danchaltiel.github.io/crosstable/reference/iris2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modified iris dataset — iris2","text":"label variable Specie setosa versicolor virginica Length Sepal Min / Max 4.3 / 5.8 4.9 / 7.0 4.9 / 7.9 Med [IQR] 5.0 [4.8;5.2] 5.9 [5.6;6.3] 6.5 [6.2;6.9] Mean (std) 5.0 (0.4) 5.9 (0.5) 6.6 (0.6) N (NA) 50 (0) 50 (0) 50 (0) Width Sepal Min / Max 2.3 / 4.4 2.0 / 3.4 2.2 / 3.8 Med [IQR] 3.4 [3.2;3.7] 2.8 [2.5;3.0] 3.0 [2.8;3.2] Mean (std) 3.4 (0.4) 2.8 (0.3) 3.0 (0.3) N (NA) 50 (0) 50 (0) 50 (0) Length Petal Min / Max 1.0 / 1.9 3.0 / 5.1 4.5 / 6.9 Med [IQR] 1.5 [1.4;1.6] 4.3 [4.0;4.6] 5.5 [5.1;5.9] Mean (std) 1.5 (0.2) 4.3 (0.5) 5.6 (0.6) N (NA) 50 (0) 50 (0) 50 (0) Width Petal Min / Max 0.1 / 0.6 1.0 / 1.8 1.4 / 2.5 Med [IQR] 0.2 [0.2;0.3] 1.3 [1.2;1.5] 2.0 [1.8;2.3] Mean (std) 0.2 (0.1) 1.3 (0.2) 2.0 (0.3) N (NA) 50 (0) 50 (0) 50 (0)","code":"library(crosstable) ct=crosstable(iris2, by=Species) ct #> # A tibble: 16 × 6 #>    .id          label           variable   setosa        versicolor    virginica #>    <chr>        <chr>           <chr>      <chr>         <chr>         <chr>     #>  1 Sepal.Length Length of Sepal Min / Max  4.3 / 5.8     4.9 / 7.0     4.9 / 7.9 #>  2 Sepal.Length Length of Sepal Med [IQR]  5.0 [4.8;5.2] 5.9 [5.6;6.3] 6.5 [6.2… #>  3 Sepal.Length Length of Sepal Mean (std) 5.0 (0.4)     5.9 (0.5)     6.6 (0.6) #>  4 Sepal.Length Length of Sepal N (NA)     50 (0)        50 (0)        50 (0)    #>  5 Sepal.Width  Width of Sepal  Min / Max  2.3 / 4.4     2.0 / 3.4     2.2 / 3.8 #>  6 Sepal.Width  Width of Sepal  Med [IQR]  3.4 [3.2;3.7] 2.8 [2.5;3.0] 3.0 [2.8… #>  7 Sepal.Width  Width of Sepal  Mean (std) 3.4 (0.4)     2.8 (0.3)     3.0 (0.3) #>  8 Sepal.Width  Width of Sepal  N (NA)     50 (0)        50 (0)        50 (0)    #>  9 Petal.Length Length of Petal Min / Max  1.0 / 1.9     3.0 / 5.1     4.5 / 6.9 #> 10 Petal.Length Length of Petal Med [IQR]  1.5 [1.4;1.6] 4.3 [4.0;4.6] 5.5 [5.1… #> 11 Petal.Length Length of Petal Mean (std) 1.5 (0.2)     4.3 (0.5)     5.6 (0.6) #> 12 Petal.Length Length of Petal N (NA)     50 (0)        50 (0)        50 (0)    #> 13 Petal.Width  Width of Petal  Min / Max  0.1 / 0.6     1.0 / 1.8     1.4 / 2.5 #> 14 Petal.Width  Width of Petal  Med [IQR]  0.2 [0.2;0.3] 1.3 [1.2;1.5] 2.0 [1.8… #> 15 Petal.Width  Width of Petal  Mean (std) 0.2 (0.1)     1.3 (0.2)     2.0 (0.3) #> 16 Petal.Width  Width of Petal  N (NA)     50 (0)        50 (0)        50 (0)    as_flextable(ct) .cl-732bfeea{}.cl-7323dc9c{font-family:'DejaVu Sans';font-size:14pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-7323dcb0{font-family:'DejaVu Sans';font-size:8pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-7327410c{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-73274116{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-73275854{width:1.156in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-73275868{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-73275869{width:1.006in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7327586a{width:1.367in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-73275872{width:1.232in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7327587c{width:1.156in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7327587d{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-73275886{width:1.006in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-73275887{width:1.367in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-73275888{width:1.232in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-73275890{width:1.156in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-73275891{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7327589a{width:1.006in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7327589b{width:1.367in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-732758a4{width:1.232in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-732758a5{width:1.156in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-732758ae{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-732758b8{width:1.006in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-732758b9{width:1.367in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-732758c2{width:1.232in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-732758c3{width:1.156in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-732758cc{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-732758d6{width:1.006in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-732758d7{width:1.367in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-732758d8{width:1.232in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-732758e0{width:1.156in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-732758ea{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-732758eb{width:1.006in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-732758f4{width:1.367in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-732758fe{width:1.232in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-732758ff{width:1.156in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-73275908{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-73275909{width:1.006in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7327590a{width:1.367in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-73275912{width:1.232in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7327591c{width:1.156in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7327591d{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7327591e{width:1.006in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-73275926{width:1.367in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-73275930{width:1.232in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}labelvariableSpeciesetosaversicolorvirginicaLength of SepalMin / Max4.3 / 5.84.9 / 7.04.9 / 7.9Med [IQR]5.0 [4.8;5.2]5.9 [5.6;6.3]6.5 [6.2;6.9]Mean (std)5.0 (0.4)5.9 (0.5)6.6 (0.6)N (NA)50 (0)50 (0)50 (0)Width of SepalMin / Max2.3 / 4.42.0 / 3.42.2 / 3.8Med [IQR]3.4 [3.2;3.7]2.8 [2.5;3.0]3.0 [2.8;3.2]Mean (std)3.4 (0.4)2.8 (0.3)3.0 (0.3)N (NA)50 (0)50 (0)50 (0)Length of PetalMin / Max1.0 / 1.93.0 / 5.14.5 / 6.9Med [IQR]1.5 [1.4;1.6]4.3 [4.0;4.6]5.5 [5.1;5.9]Mean (std)1.5 (0.2)4.3 (0.5)5.6 (0.6)N (NA)50 (0)50 (0)50 (0)Width of PetalMin / Max0.1 / 0.61.0 / 1.81.4 / 2.5Med [IQR]0.2 [0.2;0.3]1.3 [1.2;1.5]2.0 [1.8;2.3]Mean (std)0.2 (0.1)1.3 (0.2)2.0 (0.3)N (NA)50 (0)50 (0)50 (0)"},{"path":"https://danchaltiel.github.io/crosstable/reference/is.crosstable.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if an object is a crosstable — is.crosstable","title":"Test if an object is a crosstable — is.crosstable","text":"Test object crosstable","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/is.crosstable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if an object is a crosstable — is.crosstable","text":"","code":"is.crosstable(x)  is.transposed_crosstable(x)  is.compacted_crosstable(x)  is.multiby_crosstable(x)"},{"path":"https://danchaltiel.github.io/crosstable/reference/is.crosstable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if an object is a crosstable — is.crosstable","text":"x object","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/is.crosstable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if an object is a crosstable — is.crosstable","text":"TRUE object inherits crosstable class subclasses.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/mtcars2.html","id":null,"dir":"Reference","previous_headings":"","what":"Modified mtcars dataset — mtcars2","title":"Modified mtcars dataset — mtcars2","text":"Modified mtcars dataset : every column labelled (using label attribute) rownames character column named model gear cyl columns considered numerical factors vs columns considered character vector See mtcars informations original \"Motor Trend Car Road Tests\" dataset.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/mtcars2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modified mtcars dataset — mtcars2","text":"","code":"mtcars2"},{"path":"https://danchaltiel.github.io/crosstable/reference/mtcars2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Modified mtcars dataset — mtcars2","text":"data frame 32 observations 11 variables labels.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/mtcars2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Modified mtcars dataset — mtcars2","text":"","code":"library(dplyr) mtcars2 = mtcars %>%     mutate(        model=rownames(mtcars),        vs=ifelse(vs==0, \"vshaped\", \"straight\"),        am=ifelse(am==0, \"auto\", \"manual\"),        across(c(\"cyl\", \"gear\"), factor),        .before=1     ) %>%     expss::apply_labels( #I also could have used [import_labels] or even `labelled::set_variable_labels()`         mpg=\"Miles/(US) gallon\",         cyl=\"Number of cylinders\",         disp=\"Displacement (cu.in.)\",         hp=\"Gross horsepower\",         drat=\"Rear axle ratio\",         wt=\"Weight (1000 lbs)\",         qsec=\"1/4 mile time\",         vs=\"Engine\",         am=\"Transmission\",         gear=\"Number of forward gears\",        carb=\"Number of carburetors\"     )"},{"path":"https://danchaltiel.github.io/crosstable/reference/mtcars2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modified mtcars dataset — mtcars2","text":"label variable Engine straight vshaped Model AMC Javelin 0 (0%) 1 (100.00%) Cadillac Fleetwood 0 (0%) 1 (100.00%) Camaro Z28 0 (0%) 1 (100.00%) Chrysler Imperial 0 (0%) 1 (100.00%) Datsun 710 1 (100.00%) 0 (0%) Dodge Challenger 0 (0%) 1 (100.00%) Duster 360 0 (0%) 1 (100.00%) Ferrari Dino 0 (0%) 1 (100.00%) Fiat 128 1 (100.00%) 0 (0%) Fiat X1-9 1 (100.00%) 0 (0%) Ford Pantera L 0 (0%) 1 (100.00%) Honda Civic 1 (100.00%) 0 (0%) Hornet 4 Drive 1 (100.00%) 0 (0%) Hornet Sportabout 0 (0%) 1 (100.00%) Lincoln Continental 0 (0%) 1 (100.00%) Lotus Europa 1 (100.00%) 0 (0%) Maserati Bora 0 (0%) 1 (100.00%) Mazda RX4 0 (0%) 1 (100.00%) Mazda RX4 Wag 0 (0%) 1 (100.00%) Merc 230 1 (100.00%) 0 (0%) Merc 240D 1 (100.00%) 0 (0%) Merc 280 1 (100.00%) 0 (0%) Merc 280C 1 (100.00%) 0 (0%) Merc 450SE 0 (0%) 1 (100.00%) Merc 450SL 0 (0%) 1 (100.00%) Merc 450SLC 0 (0%) 1 (100.00%) Pontiac Firebird 0 (0%) 1 (100.00%) Porsche 914-2 0 (0%) 1 (100.00%) Toyota Corolla 1 (100.00%) 0 (0%) Toyota Corona 1 (100.00%) 0 (0%) Valiant 1 (100.00%) 0 (0%) Volvo 142E 1 (100.00%) 0 (0%) Miles/(US) gallon Min / Max 17.8 / 33.9 10.4 / 26.0 Med [IQR] 22.8 [21.4;29.6] 15.7 [14.8;19.1] Mean (std) 24.6 (5.4) 16.6 (3.9) N (NA) 14 (0) 18 (0) Number cylinders 4 10 (90.91%) 1 (9.09%) 6 4 (57.14%) 3 (42.86%) 8 0 (0%) 14 (100.00%) Displacement (cu..) Min / Max 71.1 / 258.0 120.3 / 472.0 Med [IQR] 120.5 [83.0;162.4] 311.0 [275.8;360.0] Mean (std) 132.5 (56.9) 307.1 (106.8) N (NA) 14 (0) 18 (0) Gross horsepower Min / Max 52.0 / 123.0 91.0 / 335.0 Med [IQR] 96.0 [66.0;109.8] 180.0 [156.2;226.2] Mean (std) 91.4 (24.4) 189.7 (60.3) N (NA) 14 (0) 18 (0) Rear axle ratio Min / Max 2.8 / 4.9 2.8 / 4.4 Med [IQR] 3.9 [3.7;4.1] 3.2 [3.1;3.7] Mean (std) 3.9 (0.5) 3.4 (0.5) N (NA) 14 (0) 18 (0) Weight (1000 lbs) Min / Max 1.5 / 3.5 2.1 / 5.4 Med [IQR] 2.6 [2.0;3.2] 3.6 [3.2;3.8] Mean (std) 2.6 (0.7) 3.7 (0.9) N (NA) 14 (0) 18 (0) 1/4 mile time Min / Max 16.9 / 22.9 14.5 / 18.0 Med [IQR] 19.2 [18.6;20.0] 17.0 [16.0;17.4] Mean (std) 19.3 (1.4) 16.7 (1.1) N (NA) 14 (0) 18 (0) Transmission auto 7 (36.84%) 12 (63.16%) manual 7 (53.85%) 6 (46.15%) Number forward gears 3 3 (20.00%) 12 (80.00%) 4 10 (83.33%) 2 (16.67%) 5 1 (20.00%) 4 (80.00%) Number carburetors Min / Max 1.0 / 4.0 2.0 / 8.0 Med [IQR] 1.5 [1.0;2.0] 4.0 [2.2;4.0] Mean (std) 1.8 (1.1) 3.6 (1.5) N (NA) 14 (0) 18 (0) nonsense date Min / Max 2010-02-22 - 2010-05-04 2010-04-02 - 2010-12-02 Med [IQR] 2010-04-07 [2010-03-08;2010-04-21] 2010-06-30 [2010-05-31;2010-08-19] Mean (std) 2010-04-02 (24.4 days) 2010-07-09 (2.0 months) N (NA) 14 (0) 18 (0) Date+time Min / Max 2010-01-17 21:36:00 - 2010-01-23 21:36:00 2010-01-15 12:00:00 - 2010-01-19 Med [IQR] 2010-01-20 04:04:48 [2010-01-19 14:24:00;2010-01-21 00:00:00] 2010-01-18 00:28:48 [2010-01-16 20:09:36;2010-01-18 10:04:48] Mean (std) 2010-01-20 08:00:20 (1.4 days) 2010-01-17 16:39:12 (1.1 days) N (NA) 14 (0) 18 (0)","code":"library(crosstable) ct=crosstable(mtcars2, by=vs) ct #> # A tibble: 76 × 5 #>    .id   label variable           straight    vshaped     #>    <chr> <chr> <chr>              <chr>       <chr>       #>  1 model Model AMC Javelin        0 (0%)      1 (100.00%) #>  2 model Model Cadillac Fleetwood 0 (0%)      1 (100.00%) #>  3 model Model Camaro Z28         0 (0%)      1 (100.00%) #>  4 model Model Chrysler Imperial  0 (0%)      1 (100.00%) #>  5 model Model Datsun 710         1 (100.00%) 0 (0%)      #>  6 model Model Dodge Challenger   0 (0%)      1 (100.00%) #>  7 model Model Duster 360         0 (0%)      1 (100.00%) #>  8 model Model Ferrari Dino       0 (0%)      1 (100.00%) #>  9 model Model Fiat 128           1 (100.00%) 0 (0%)      #> 10 model Model Fiat X1-9          1 (100.00%) 0 (0%)      #> # ℹ 66 more rows as_flextable(ct) .cl-744da1de{}.cl-7443d7e4{font-family:'DejaVu Sans';font-size:14pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-7443d7ee{font-family:'DejaVu Sans';font-size:8pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-7447aa86{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-7447aa9a{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-7447c46c{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c476{width:1.356in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c480{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c481{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c48a{width:1.356in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c48b{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c494{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c495{width:1.356in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c49e{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c49f{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c4a8{width:1.356in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c4a9{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c4b2{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c4b3{width:1.356in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c4b4{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c4bc{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c4c6{width:1.356in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c4c7{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c4d0{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c4d1{width:1.356in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c4da{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c4db{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c4e4{width:1.356in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c4e5{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c4e6{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c4ee{width:1.356in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c4ef{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c4f8{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c4f9{width:1.356in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c502{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c50c{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c50d{width:1.356in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c516{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c517{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c520{width:1.356in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c521{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c52a{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c52b{width:1.356in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c534{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c535{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c53e{width:1.683in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c53f{width:1.356in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-7447c540{width:3.985in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}labelvariableEnginestraightvshapedModelAMC Javelin0 (0%)1 (100.00%)Cadillac Fleetwood0 (0%)1 (100.00%)Camaro Z280 (0%)1 (100.00%)Chrysler Imperial0 (0%)1 (100.00%)Datsun 7101 (100.00%)0 (0%)Dodge Challenger0 (0%)1 (100.00%)Duster 3600 (0%)1 (100.00%)Ferrari Dino0 (0%)1 (100.00%)Fiat 1281 (100.00%)0 (0%)Fiat X1-91 (100.00%)0 (0%)Ford Pantera L0 (0%)1 (100.00%)Honda Civic1 (100.00%)0 (0%)Hornet 4 Drive1 (100.00%)0 (0%)Hornet Sportabout0 (0%)1 (100.00%)Lincoln Continental0 (0%)1 (100.00%)Lotus Europa1 (100.00%)0 (0%)Maserati Bora0 (0%)1 (100.00%)Mazda RX40 (0%)1 (100.00%)Mazda RX4 Wag0 (0%)1 (100.00%)Merc 2301 (100.00%)0 (0%)Merc 240D1 (100.00%)0 (0%)Merc 2801 (100.00%)0 (0%)Merc 280C1 (100.00%)0 (0%)Merc 450SE0 (0%)1 (100.00%)Merc 450SL0 (0%)1 (100.00%)Merc 450SLC0 (0%)1 (100.00%)Pontiac Firebird0 (0%)1 (100.00%)Porsche 914-20 (0%)1 (100.00%)Toyota Corolla1 (100.00%)0 (0%)Toyota Corona1 (100.00%)0 (0%)Valiant1 (100.00%)0 (0%)Volvo 142E1 (100.00%)0 (0%)Miles/(US) gallonMin / Max17.8 / 33.910.4 / 26.0Med [IQR]22.8 [21.4;29.6]15.7 [14.8;19.1]Mean (std)24.6 (5.4)16.6 (3.9)N (NA)14 (0)18 (0)Number of cylinders410 (90.91%)1 (9.09%)64 (57.14%)3 (42.86%)80 (0%)14 (100.00%)Displacement (cu.in.)Min / Max71.1 / 258.0120.3 / 472.0Med [IQR]120.5 [83.0;162.4]311.0 [275.8;360.0]Mean (std)132.5 (56.9)307.1 (106.8)N (NA)14 (0)18 (0)Gross horsepowerMin / Max52.0 / 123.091.0 / 335.0Med [IQR]96.0 [66.0;109.8]180.0 [156.2;226.2]Mean (std)91.4 (24.4)189.7 (60.3)N (NA)14 (0)18 (0)Rear axle ratioMin / Max2.8 / 4.92.8 / 4.4Med [IQR]3.9 [3.7;4.1]3.2 [3.1;3.7]Mean (std)3.9 (0.5)3.4 (0.5)N (NA)14 (0)18 (0)Weight (1000 lbs)Min / Max1.5 / 3.52.1 / 5.4Med [IQR]2.6 [2.0;3.2]3.6 [3.2;3.8]Mean (std)2.6 (0.7)3.7 (0.9)N (NA)14 (0)18 (0)1/4 mile timeMin / Max16.9 / 22.914.5 / 18.0Med [IQR]19.2 [18.6;20.0]17.0 [16.0;17.4]Mean (std)19.3 (1.4)16.7 (1.1)N (NA)14 (0)18 (0)Transmissionauto7 (36.84%)12 (63.16%)manual7 (53.85%)6 (46.15%)Number of forward gears33 (20.00%)12 (80.00%)410 (83.33%)2 (16.67%)51 (20.00%)4 (80.00%)Number of carburetorsMin / Max1.0 / 4.02.0 / 8.0Med [IQR]1.5 [1.0;2.0]4.0 [2.2;4.0]Mean (std)1.8 (1.1)3.6 (1.5)N (NA)14 (0)18 (0)Some nonsense dateMin / Max2010-02-22 - 2010-05-042010-04-02 - 2010-12-02Med [IQR]2010-04-07 [2010-03-08;2010-04-21]2010-06-30 [2010-05-31;2010-08-19]Mean (std)2010-04-02 (24.4 days)2010-07-09 (2.0 months)N (NA)14 (0)18 (0)Date+timeMin / Max2010-01-17 21:36:00 - 2010-01-23 21:36:002010-01-15 12:00:00 - 2010-01-19Med [IQR]2010-01-20 04:04:48 [2010-01-19 14:24:00;2010-01-21 00:00:00]2010-01-18 00:28:48 [2010-01-16 20:09:36;2010-01-18 10:04:48]Mean (std)2010-01-20 08:00:20 (1.4 days)2010-01-17 16:39:12 (1.1 days)N (NA)14 (0)18 (0)"},{"path":"https://danchaltiel.github.io/crosstable/reference/n.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the number of non NA observations — N","title":"Return the number of non NA observations — N","text":"Return number non NA observations","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the number of non NA observations — N","text":"","code":"N(x)"},{"path":"https://danchaltiel.github.io/crosstable/reference/n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the number of non NA observations — N","text":"x vector","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the number of non NA observations — N","text":"integer, number non NA observations","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/n.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return the number of non NA observations — N","text":"David Hajage","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/na.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the number of NA observations — na","title":"Return the number of NA observations — na","text":"Return number NA observations","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the number of NA observations — na","text":"","code":"na(x)"},{"path":"https://danchaltiel.github.io/crosstable/reference/na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the number of NA observations — na","text":"x vector","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the number of NA observations — na","text":"integer, number NA observations","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/na.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return the number of NA observations — na","text":"David Hajage","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/narm.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove missing values — narm","title":"Remove missing values — narm","text":"Remove missing values","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/narm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove missing values — narm","text":"","code":"narm(x)"},{"path":"https://danchaltiel.github.io/crosstable/reference/narm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove missing values — narm","text":"x vector","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/narm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove missing values — narm","text":"vector without missing values","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/peek.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a crosstable in a temporary document — peek","title":"Open a crosstable in a temporary document — peek","text":"eases copy-pasting","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/peek.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a crosstable in a temporary document — peek","text":"","code":"peek(x, docx = getOption(\"crosstable_peek_docx\", TRUE), ...)"},{"path":"https://danchaltiel.github.io/crosstable/reference/peek.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a crosstable in a temporary document — peek","text":"x crosstable docx true, peek docx, else, peek xlsx ... passed as_flextable.crosstable() as_workbook()","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/peek.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a crosstable in a temporary document — peek","text":"Nothing, called side effects","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/peek.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Open a crosstable in a temporary document — peek","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/pivot_crosstable.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot a crosstable — pivot_crosstable","title":"Pivot a crosstable — pivot_crosstable","text":"Pivot crosstable variable column spread across values.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/pivot_crosstable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot a crosstable — pivot_crosstable","text":"","code":"pivot_crosstable(ct)"},{"path":"https://danchaltiel.github.io/crosstable/reference/pivot_crosstable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot a crosstable — pivot_crosstable","text":"ct crosstable","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/pivot_crosstable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot a crosstable — pivot_crosstable","text":"tibble class pivoted_crosstable","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/pivot_crosstable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pivot a crosstable — pivot_crosstable","text":"label Variable Min / Max Med [IQR] Mean (std) N (NA) Miles/(US) gallon 10.4 / 33.9 19.2 [15.4;22.8] 20.1 (6.0) 32 (0) Rear axle ratio 2.8 / 4.9 3.7 [3.1;3.9] 3.6 (0.5) 32 (0) Weight (1000 lbs) 1.5 / 5.4 3.3 [2.6;3.6] 3.2 (1.0) 32 (0) 1/4 mile time 14.5 / 22.9 17.7 [16.9;18.9] 17.8 (1.8) 32 (0)","code":"ct = crosstable(mtcars2, c(mpg, drat, wt, qsec)) p_ct = pivot_crosstable(ct) as_flextable(p_ct) .cl-74ec8402{}.cl-74e539e0{font-family:'DejaVu Sans';font-size:14pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-74e539f4{font-family:'DejaVu Sans';font-size:8pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-74e85c2e{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-74e85c38{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-74e87286{width:1.278in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e87290{width:1.34in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e8729a{width:1.383in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e8729b{width:1.473in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e872a4{width:1.007in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e872a5{width:1.278in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e872ae{width:1.34in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e872b8{width:1.383in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e872b9{width:1.473in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e872c2{width:1.007in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e872c3{width:1.278in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e872cc{width:1.34in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e872d6{width:1.383in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e872d7{width:1.473in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e872d8{width:1.007in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e872e0{width:1.278in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e872e1{width:1.34in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e872ea{width:1.383in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e872f4{width:1.473in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e872f5{width:1.007in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e872fe{width:1.278in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e872ff{width:1.34in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e87308{width:1.383in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e87312{width:1.473in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e87313{width:1.007in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e8731c{width:1.278in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e8731d{width:1.34in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e87326{width:1.383in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e87327{width:1.473in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-74e87330{width:1.007in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}labelVariableMin / MaxMed [IQR]Mean (std)N (NA)Miles/(US) gallon10.4 / 33.919.2 [15.4;22.8]20.1 (6.0)32 (0)Rear axle ratio2.8 / 4.93.7 [3.1;3.9]3.6 (0.5)32 (0)Weight (1000 lbs)1.5 / 5.43.3 [2.6;3.6]3.2 (1.0)32 (0)1/4 mile time14.5 / 22.917.7 [16.9;18.9]17.8 (1.8)32 (0)"},{"path":"https://danchaltiel.github.io/crosstable/reference/plim.html","id":null,"dir":"Reference","previous_headings":"","what":"Format p values (alternative to format.pval()) — plim","title":"Format p values (alternative to format.pval()) — plim","text":"Format p values (alternative format.pval())","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/plim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format p values (alternative to format.pval()) — plim","text":"","code":"plim(p, digits = 4)"},{"path":"https://danchaltiel.github.io/crosstable/reference/plim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format p values (alternative to format.pval()) — plim","text":"p p values digits number digits","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/plim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format p values (alternative to format.pval()) — plim","text":"formatted p values","code":""},{"path":[]},{"path":"https://danchaltiel.github.io/crosstable/reference/plim.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Format p values (alternative to format.pval()) — plim","text":"David Hajage","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>%, all_of, any_of, contains, ends_with, everything, matches, starts_with","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/remove_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove all label attributes. — remove_labels","title":"Remove all label attributes. — remove_labels","text":"Use remove_labels() remove label object recursively remove labels collection objects (list data.frame).  can useful functions reacting badly labelled objects.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/remove_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove all label attributes. — remove_labels","text":"","code":"remove_labels(x)"},{"path":"https://danchaltiel.github.io/crosstable/reference/remove_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove all label attributes. — remove_labels","text":"x object unlabel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/remove_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove all label attributes. — remove_labels","text":"object type x, labels","code":""},{"path":[]},{"path":"https://danchaltiel.github.io/crosstable/reference/remove_labels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove all label attributes. — remove_labels","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/remove_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove all label attributes. — remove_labels","text":"","code":"mtcars2 %>% remove_labels %>% crosstable(mpg) #no label #> # A tibble: 4 × 4 #>   .id   label variable   value            #>   <chr> <chr> <chr>      <chr>            #> 1 mpg   mpg   Min / Max  10.4 / 33.9      #> 2 mpg   mpg   Med [IQR]  19.2 [15.4;22.8] #> 3 mpg   mpg   Mean (std) 20.1 (6.0)       #> 4 mpg   mpg   N (NA)     32 (0)           mtcars2$hp %>% remove_labels %>% get_label() #NULL #> NULL"},{"path":"https://danchaltiel.github.io/crosstable/reference/rename_with_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename every column of a dataframe with its label — rename_with_labels","title":"Rename every column of a dataframe with its label — rename_with_labels","text":"Rename every column dataframe label","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/rename_with_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename every column of a dataframe with its label — rename_with_labels","text":"","code":"rename_with_labels(df, except = NULL)"},{"path":"https://danchaltiel.github.io/crosstable/reference/rename_with_labels.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Rename every column of a dataframe with its label — rename_with_labels","text":"https://stackoverflow.com/q/75848408/3888000","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/rename_with_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename every column of a dataframe with its label — rename_with_labels","text":"df data.frame except <tidy-select> columns renamed.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/rename_with_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename every column of a dataframe with its label — rename_with_labels","text":"dataframe names copied label attribute","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/rename_with_labels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rename every column of a dataframe with its label — rename_with_labels","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/rename_with_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename every column of a dataframe with its label — rename_with_labels","text":"","code":"rename_with_labels(mtcars2[,1:5], except=5) %>% names() #> [1] \"Model\"                 \"Miles/(US) gallon\"     \"Number of cylinders\"   #> [4] \"Displacement (cu.in.)\" \"hp\"                    rename_with_labels(iris2, except=Sepal.Length) %>% names() #> [1] \"Sepal.Length\"    \"Width of Sepal\"  \"Length of Petal\" \"Width of Petal\"  #> [5] \"Specie\"          rename_with_labels(iris2, except=starts_with(\"Pet\")) %>% names() #> [1] \"Length of Sepal\" \"Width of Sepal\"  \"Petal.Length\"    \"Petal.Width\"     #> [5] \"Specie\""},{"path":"https://danchaltiel.github.io/crosstable/reference/set_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the ","title":"Set the ","text":"Set \"label\" attribute object Copy label one variable another","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/set_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the ","text":"","code":"set_label(x, value, object = FALSE)  copy_label_from(x, from)"},{"path":"https://danchaltiel.github.io/crosstable/reference/set_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the ","text":"x variable label value value label. x list/data.frame, labels set recursively object x list/data.frame, object=TRUE force setting labels object instead children variable whose label must copied","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/set_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the ","text":"object type x, labels","code":""},{"path":[]},{"path":"https://danchaltiel.github.io/crosstable/reference/set_label.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set the ","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/set_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the ","text":"","code":"library(dplyr) mtcars %>%    mutate(mpg2=set_label(mpg, \"Miles per gallon\"),           mpg3=mpg %>% copy_label_from(mpg2)) %>%    crosstable(c(mpg, mpg2, mpg3)) #> # A tibble: 12 × 4 #>    .id   label            variable   value            #>    <chr> <chr>            <chr>      <chr>            #>  1 mpg   mpg              Min / Max  10.4 / 33.9      #>  2 mpg   mpg              Med [IQR]  19.2 [15.4;22.8] #>  3 mpg   mpg              Mean (std) 20.1 (6.0)       #>  4 mpg   mpg              N (NA)     32 (0)           #>  5 mpg2  Miles per gallon Min / Max  10.4 / 33.9      #>  6 mpg2  Miles per gallon Med [IQR]  19.2 [15.4;22.8] #>  7 mpg2  Miles per gallon Mean (std) 20.1 (6.0)       #>  8 mpg2  Miles per gallon N (NA)     32 (0)           #>  9 mpg3  Miles per gallon Min / Max  10.4 / 33.9      #> 10 mpg3  Miles per gallon Med [IQR]  19.2 [15.4;22.8] #> 11 mpg3  Miles per gallon Mean (std) 20.1 (6.0)       #> 12 mpg3  Miles per gallon N (NA)     32 (0)           mtcars %>%    copy_label_from(mtcars2) %>%    crosstable(c(mpg, vs)) #> # A tibble: 6 × 4 #>   .id   label             variable   value            #>   <chr> <chr>             <chr>      <chr>            #> 1 mpg   Miles/(US) gallon Min / Max  10.4 / 33.9      #> 2 mpg   Miles/(US) gallon Med [IQR]  19.2 [15.4;22.8] #> 3 mpg   Miles/(US) gallon Mean (std) 20.1 (6.0)       #> 4 mpg   Miles/(US) gallon N (NA)     32 (0)           #> 5 vs    Engine            0          18 (56.25%)      #> 6 vs    Engine            1          14 (43.75%)"},{"path":"https://danchaltiel.github.io/crosstable/reference/summaryFunctions.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary functions — summaryFunctions","title":"Summary functions — summaryFunctions","text":"Summary functions use crosstable() anywhere else.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/summaryFunctions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary functions — summaryFunctions","text":"","code":"meansd(x, na.rm = TRUE, dig = 2, ...)  meanCI(x, na.rm = TRUE, dig = 2, level = 0.95, format = TRUE, ...)  mediqr(x, na.rm = TRUE, dig = 2, format = TRUE, ...)  minmax(x, na.rm = TRUE, dig = 2, ...)  nna(x)"},{"path":"https://danchaltiel.github.io/crosstable/reference/summaryFunctions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary functions — summaryFunctions","text":"x numeric vector na.rm TRUE default dig number digits ... params pass format_fixed(): zero_digits (default=1): number significant digits values rounded 0 (set NULL keep original 0 value) only_round (default=FALSE): use round() instead format_fixed() level confidence level required format sugar argument. FALSE, function returns list instead formatted string","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/summaryFunctions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary functions — summaryFunctions","text":"character vector","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/summaryFunctions.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Summary functions — summaryFunctions","text":"meansd(): returns mean std error meanCI(): returns mean confidence interval mediqr(): returns median IQR minmax(): returns minimum maximum nna(): returns  number observations number missing values","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/summaryFunctions.html","id":"fixed-format","dir":"Reference","previous_headings":"","what":"Fixed format","title":"Summary functions — summaryFunctions","text":"functions use format_fixed() allows trailing zeros rounded values. case output rounded values zero, use zero_digits argument allows keep significant digits specific case .","code":""},{"path":[]},{"path":"https://danchaltiel.github.io/crosstable/reference/summaryFunctions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary functions — summaryFunctions","text":"Dan Chaltiel, David Hajage","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/summaryFunctions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary functions — summaryFunctions","text":"","code":"meansd(iris$Sepal.Length, dig=3) #> [1] \"5.843 (0.828)\" meanCI(iris$Sepal.Length) #> [1] \"5.84 [5.71;5.98]\" minmax(iris$Sepal.Length, dig=3) #> [1] \"4.300 / 7.900\" mediqr(iris$Sepal.Length, dig=3) #> [1] \"5.800 [5.100;6.400]\" nna(iris$Sepal.Length) #> [1] \"150 (0)\"  #arguments for format_fixed x = iris$Sepal.Length/10000 #closer to zero  meansd(x, dig=3) #> [1] \"0.001 (8.281e-05)\" meansd(x, dig=3, zero_digits=NULL) #or NA #> [1] \"0.001 (8.281e-05)\" meansd(x, dig=3, only_round=TRUE) #> [1] \"0.001 (8.281e-05)\" options(\"crosstable_only_round\"=TRUE) meansd(x, dig=3, zero_digits=2) #> [1] \"0.001 (8.281e-05)\" options(\"crosstable_only_round\"=NULL) meanCI(mtcars2$x_date) #> Warning: Unknown or uninitialised column: `x_date`. #> Warning: argument is not numeric or logical: returning NA #> Warning: argument is not numeric or logical: returning NA #> [1] \"NA [NA;NA]\"  #dates x = as.POSIXct(mtcars$qsec*3600*24 , origin=\"2010-01-01\") meansd(x) #> [1] \"2010-01-18 20:22:12 (1.79 days)\" minmax(x, date_format=\"%d/%m/%Y\") #> [1] \"15/01/2010 - 23/01/2010\""},{"path":"https://danchaltiel.github.io/crosstable/reference/test_correlation_auto.html","id":null,"dir":"Reference","previous_headings":"","what":"test for correlation coefficients — test_correlation_auto","title":"test for correlation coefficients — test_correlation_auto","text":"test correlation coefficients","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/test_correlation_auto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test for correlation coefficients — test_correlation_auto","text":"","code":"test_correlation_auto(x, by, method)"},{"path":"https://danchaltiel.github.io/crosstable/reference/test_correlation_auto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"test for correlation coefficients — test_correlation_auto","text":"x vector another vector method \"pearson\", \"kendall\", \"spearman\"","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/test_correlation_auto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"test for correlation coefficients — test_correlation_auto","text":"correlation test appropriate method","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/test_correlation_auto.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"test for correlation coefficients — test_correlation_auto","text":"Dan Chaltiel, David Hajage","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/test_summarize_auto.html","id":null,"dir":"Reference","previous_headings":"","what":"test for mean comparison — test_summarize_auto","title":"test for mean comparison — test_summarize_auto","text":"Compute oneway.test (equal unequal variance) kruskal.test appropriate.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/test_summarize_auto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test for mean comparison — test_summarize_auto","text":"","code":"test_summarize_auto(x, g)"},{"path":"https://danchaltiel.github.io/crosstable/reference/test_summarize_auto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"test for mean comparison — test_summarize_auto","text":"x vector g another vector","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/test_summarize_auto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"test for mean comparison — test_summarize_auto","text":"list two components: p.value method","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/test_summarize_auto.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"test for mean comparison — test_summarize_auto","text":"Dan Chaltiel, David Hajage","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/test_summarize_linear_contrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for linear trend across ordered factor with contrasts — test_summarize_linear_contrasts","title":"Test for linear trend across ordered factor with contrasts — test_summarize_linear_contrasts","text":"Test linear trend across ordered factor contrasts","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/test_summarize_linear_contrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for linear trend across ordered factor with contrasts — test_summarize_linear_contrasts","text":"","code":"test_summarize_linear_contrasts(x, y)"},{"path":"https://danchaltiel.github.io/crosstable/reference/test_summarize_linear_contrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for linear trend across ordered factor with contrasts — test_summarize_linear_contrasts","text":"x vector y ordered factor","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/test_summarize_linear_contrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for linear trend across ordered factor with contrasts — test_summarize_linear_contrasts","text":"list two components: p.value method","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/test_summarize_linear_contrasts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test for linear trend across ordered factor with contrasts — test_summarize_linear_contrasts","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/test_summarize_linear_contrasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for linear trend across ordered factor with contrasts — test_summarize_linear_contrasts","text":"","code":"library(dplyr) my_test_args=crosstable_test_args() my_test_args$test_summarize = test_summarize_linear_contrasts iris %>%   mutate(Petal.Width.qt = paste0(\"Q\", ntile(Petal.Width, 5)) %>% ordered()) %>%   crosstable(Petal.Length ~ Petal.Width.qt, test=TRUE, test_args = my_test_args) #> # A tibble: 4 × 9 #>   .id          label        variable   Q1          Q2    Q3    Q4    Q5    test  #>   <chr>        <chr>        <chr>      <chr>       <chr> <chr> <chr> <chr> <chr> #> 1 Petal.Length Petal.Length Min / Max  1.0 / 1.9   1.3 … 3.6 … 4.5 … 4.9 … \"p v… #> 2 Petal.Length Petal.Length Med [IQR]  1.4 [1.3;1… 1.6 … 4.3 … 5.0 … 5.6 … \"p v… #> 3 Petal.Length Petal.Length Mean (std) 1.4 (0.2)   2.2 … 4.4 … 5.1 … 5.7 … \"p v… #> 4 Petal.Length Petal.Length N (NA)     30 (0)      30 (… 30 (… 30 (… 30 (… \"p v…"},{"path":"https://danchaltiel.github.io/crosstable/reference/test_survival_logrank.html","id":null,"dir":"Reference","previous_headings":"","what":"test for survival comparison — test_survival_logrank","title":"test for survival comparison — test_survival_logrank","text":"Compute logrank test","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/test_survival_logrank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test for survival comparison — test_survival_logrank","text":"","code":"test_survival_logrank(formula)"},{"path":"https://danchaltiel.github.io/crosstable/reference/test_survival_logrank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"test for survival comparison — test_survival_logrank","text":"formula formula","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/test_survival_logrank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"test for survival comparison — test_survival_logrank","text":"list two components: p.value method","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/test_survival_logrank.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"test for survival comparison — test_survival_logrank","text":"Dan Chaltiel, David Hajage","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/test_tabular_auto.html","id":null,"dir":"Reference","previous_headings":"","what":"test for contingency table — test_tabular_auto","title":"test for contingency table — test_tabular_auto","text":"Compute chisq.test, chisq.test correction continuity fisher test appropriate","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/test_tabular_auto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test for contingency table — test_tabular_auto","text":"","code":"test_tabular_auto(x, y)"},{"path":"https://danchaltiel.github.io/crosstable/reference/test_tabular_auto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"test for contingency table — test_tabular_auto","text":"x vector y another vector","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/test_tabular_auto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"test for contingency table — test_tabular_auto","text":"list two components: p.value method","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/test_tabular_auto.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"test for contingency table — test_tabular_auto","text":"Dan Chaltiel, David Hajage","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/transpose_crosstable.html","id":null,"dir":"Reference","previous_headings":"","what":"Transpose a crosstable — transpose_crosstable","title":"Transpose a crosstable — transpose_crosstable","text":"Pivot crosstable label column swapped row. requires variable column every data column, like columns numeric columns factors levels","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/transpose_crosstable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transpose a crosstable — transpose_crosstable","text":"","code":"transpose_crosstable(x)  # S3 method for crosstable t(x)"},{"path":"https://danchaltiel.github.io/crosstable/reference/transpose_crosstable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transpose a crosstable — transpose_crosstable","text":"x crosstable","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/transpose_crosstable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transpose a crosstable — transpose_crosstable","text":"tibble class transposed_crosstable","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/transpose_crosstable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transpose a crosstable — transpose_crosstable","text":"variable label Miles/(US) gallon Rear axle ratio Weight (1000 lbs) 1/4 mile time auto Min / Max 10.4 / 24.4 2.8 / 3.9 2.5 / 5.4 15.4 / 22.9 Med [IQR] 17.3 [14.9;19.2] 3.1 [3.1;3.7] 3.5 [3.4;3.8] 17.8 [17.2;19.2] Mean (std) 17.1 (3.8) 3.3 (0.4) 3.8 (0.8) 18.2 (1.8) N (NA) 19 (0) 19 (0) 19 (0) 19 (0) manual Min / Max 15.0 / 33.9 3.5 / 4.9 1.5 / 3.6 14.5 / 19.9 Med [IQR] 22.8 [21.0;30.4] 4.1 [3.9;4.2] 2.3 [1.9;2.8] 17.0 [16.5;18.6] Mean (std) 24.4 (6.2) 4.0 (0.4) 2.4 (0.6) 17.4 (1.8) N (NA) 13 (0) 13 (0) 13 (0) 13 (0)","code":"ct = crosstable(mtcars2, c(mpg, drat, wt, qsec), by=am) t_ct = t(ct) as_flextable(t_ct) .cl-768ec004{}.cl-768736b8{font-family:'DejaVu Sans';font-size:14pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-768736cc{font-family:'DejaVu Sans';font-size:8pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-768a5eba{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-768a5ece{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-768a73dc{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a73f0{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a73f1{width:2.15in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a73fa{width:1.905in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a7404{width:2.245in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a7405{width:1.724in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a740e{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a740f{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a7418{width:2.15in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a7422{width:1.905in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a7423{width:2.245in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a7424{width:1.724in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a742c{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a7436{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a7440{width:2.15in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a7441{width:1.905in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a744a{width:2.245in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a7454{width:1.724in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a745e{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a745f{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a7468{width:2.15in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a7472{width:1.905in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a747c{width:2.245in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a747d{width:1.724in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a7486{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a7487{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a7490{width:2.15in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a749a{width:1.905in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a749b{width:2.245in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a749c{width:1.724in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a749d{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a74a4{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a74ae{width:2.15in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a74af{width:1.905in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a74b8{width:2.245in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a74c2{width:1.724in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a74c3{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a74cc{width:1.175in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a74cd{width:2.15in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a74d6{width:1.905in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a74e0{width:2.245in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-768a74e1{width:1.724in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}amvariablelabelMiles/(US) gallonRear axle ratioWeight (1000 lbs)1/4 mile timeautoMin / Max10.4 / 24.42.8 / 3.92.5 / 5.415.4 / 22.9Med [IQR]17.3 [14.9;19.2]3.1 [3.1;3.7]3.5 [3.4;3.8]17.8 [17.2;19.2]Mean (std)17.1 (3.8)3.3 (0.4)3.8 (0.8)18.2 (1.8)N (NA)19 (0)19 (0)19 (0)19 (0)manualMin / Max15.0 / 33.93.5 / 4.91.5 / 3.614.5 / 19.9Med [IQR]22.8 [21.0;30.4]4.1 [3.9;4.2]2.3 [1.9;2.8]17.0 [16.5;18.6]Mean (std)24.4 (6.2)4.0 (0.4)2.4 (0.6)17.4 (1.8)N (NA)13 (0)13 (0)13 (0)13 (0)"},{"path":"https://danchaltiel.github.io/crosstable/reference/write_and_open.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternative to default officer print() function. Write the file and try to open it right away. — write_and_open","title":"Alternative to default officer print() function. Write the file and try to open it right away. — write_and_open","text":"tests file writable, function also prevents officer:::print.rdocx() abort RStudio session.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/write_and_open.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternative to default officer print() function. Write the file and try to open it right away. — write_and_open","text":"","code":"write_and_open(doc, docx.file)"},{"path":"https://danchaltiel.github.io/crosstable/reference/write_and_open.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alternative to default officer print() function. Write the file and try to open it right away. — write_and_open","text":"doc docx object docx.file name target file. missing NULL, doc open temporary file.","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/write_and_open.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alternative to default officer print() function. Write the file and try to open it right away. — write_and_open","text":"Nothing, called side effects","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/write_and_open.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Alternative to default officer print() function. Write the file and try to open it right away. — write_and_open","text":"Dan Chaltiel","code":""},{"path":"https://danchaltiel.github.io/crosstable/reference/write_and_open.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alternative to default officer print() function. Write the file and try to open it right away. — write_and_open","text":"","code":"library(officer) library(crosstable) mytable = crosstable(mtcars2) doc = read_docx() %>%     body_add_crosstable(mytable)  write_and_open(doc) if (FALSE) { write_and_open(doc, \"example.docx\") }"},{"path":[]},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"bug-fixes-and-improvements-0-6-3","dir":"Changelog","previous_headings":"","what":"Bug fixes and improvements","title":"crosstable 0.6.3 2023-xx-xx","text":"Reimplement description columns containing NA (missing values) “NA” (characters) (#42) Adds error message as_flextable() crosstable empty (#41) Fixes regression references added anymore.","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"crosstable-062-2023-05-26","dir":"Changelog","previous_headings":"","what":"crosstable 0.6.2 2023-05-26","title":"crosstable 0.6.2 2023-05-26","text":"CRAN release: 2023-05-28","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"bug-fixes-and-improvements-0-6-2","dir":"Changelog","previous_headings":"","what":"Bug fixes and improvements","title":"crosstable 0.6.2 2023-05-26","text":"Fixes CRAN checks. Fixes write_and_open() opening sometimes. Trailing commas make crosstable_options() fail anymore.","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"crosstable-061-2023-04-03","dir":"Changelog","previous_headings":"","what":"crosstable 0.6.1 2023-04-03","title":"crosstable 0.6.1 2023-04-03","text":"CRAN release: 2023-04-04 Fixes CRAN checks.","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"crosstable-060-2023-03-26","dir":"Changelog","previous_headings":"","what":"crosstable 0.6.0 2023-03-26","title":"crosstable 0.6.0 2023-03-26","text":"CRAN release: 2023-03-26","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"new-features-0-6-0","dir":"Changelog","previous_headings":"","what":"New features","title":"crosstable 0.6.0 2023-03-26","text":"New function transpose_crosstable() (simply t()), transposes crosstable rows instead columns.r     ct = crosstable(mtcars2, c(mpg, drat), =)     t_ct = t(ct)     as_flextable(t_ct, by_header=\"Variables\") New function pivot_crosstable(), pivots crosstable variable spread several columns.r     ct = crosstable(mtcars2, c(mpg, drat))     p_ct = pivot_crosstable(ct)     as_flextable(p_ct) body_add_table_list() now replaces body_add_crosstable_list() body_add_flextable_list(). allows crosstables flextable (even dataframes, turned flextables first) new argument fun_after control comes table. See examples ?body_add_table_list. New function get_percent_pattern(). See also new vignette vignette(\"percent_pattern\"). New argument crosstable(drop_levels=TRUE) drop unused levels factors. copy_label_from() now works dataframes well. as_flextable(header_show_n_pattern) can now list names cell total, “Total” column can labelled .","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"breaking-changes-minor-0-6-0","dir":"Changelog","previous_headings":"","what":"Breaking changes (minor)","title":"crosstable 0.6.0 2023-03-26","text":"showNA=\"\" now consistent stats::addmargins(), gtsummary::tbl_cross(missing=\"\"), janitor::tabyl(show_na=FALSE). now actually removes NA equation, instead much (#24). percent_patern, proportion relative total sample p_cell renamed p_tot clarity.","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"bug-fixes-and-improvements-0-6-0","dir":"Changelog","previous_headings":"","what":"Bug fixes and improvements","title":"crosstable 0.6.0 2023-03-26","text":"Removed unexpected warning “NaNs produced” thrown calculating percentages totals number NA higher classes (#20). output now correct header_show_n=TRUE remove_header_keys=TRUE using multiple variables (#21). Flextables missing columns using multiple variables key levels. String interpolation works intended body_add_xxx_legend(). crosstable() fail fisher.test() fails [#28] forcats::fct_explicit_na() used anymore [#29] body_add_normal() now removes ``` symbols showing code [#31] Trailing commas make apply_labels() fail anymore [#32] Performance improvement (around 30% small tables) confidence intervals calculated anymore needed [#34] Many thanks Stephan Daus (@sda030) bug reports feedback release.","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"crosstable-050-2022-08-16","dir":"Changelog","previous_headings":"","what":"crosstable 0.5.0 2022-08-16","title":"crosstable 0.5.0 2022-08-16","text":"CRAN release: 2022-08-16","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"new-features-0-5-0","dir":"Changelog","previous_headings":"","what":"New features","title":"crosstable 0.5.0 2022-08-16","text":"New clean_names_with_labels() cleans names dataframe keeps old names labels. Obviously inspired janitor. New variables n_col, n_row, n_tot available percent_pattern. Also, every variable now counterpart _na suffix accounts missing values. instance, one can now write: percent_pattern can now list characters names body, total_row, total_col, total_all also control pattern parts crosstable body.","code":"crosstable(mtcars2, cyl, percent_pattern=\"{p_col} ({n}/{n_col}) [95%CI: {p_col_inf}; {p_col_sup}]\")     crosstable(mtcars2, cyl, percent_pattern=\"{p_col_na} ({n}/{n_col_na}) [95%CI: {p_col_inf}; {p_col_sup}]\")"},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"improvements-0-5-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"crosstable 0.5.0 2022-08-16","text":"crosstable_options() need “crosstable_” prefix anymore, autocomplete less clumsy. Options prefix still work though. crosstable_options(reset=TRUE) deprecated favor new crosstable_reset_options(). crosstable_test_args() crosstable_effect_args() now arguments easily control non-default parameters. Allow scientific notation big numbers. Default numbers abs(log10(x))>4. can controlled using options, e.g. crosstable_options(scientific_log=5). MS Word, crosstables now break across pages default. can revert using body_add_crosstable(allow_break=FALSE) using crosstable_options(). pendant keepnext officer/flextable. New argument body_add_crosstable(max_cols=25), limits size crosstables Word documents. prevents large tables wrongly included. peek() now usable non-crosstable objects well. as_flextable() method applied object available, otherwise flextable() applied. Better error messages import_labels() data_label doesn’t right columns.","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"deprecations-0-5-0","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"crosstable 0.5.0 2022-08-16","text":"rename_dataframe_with_labels() now deprecated favor better named rename_with_labels(). compact() now deprecated favor ct_compact() avoid conflict purrr::compact(). removed next version.","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"bug-fixes-0-5-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"crosstable 0.5.0 2022-08-16","text":"body_add_crosstable(..., parse=NULL) now work intended . by_header can replace “value” column one stratum, as_gt() as_flextable() (https://github.com/DanChaltiel/crosstable/issues/9). percent_pattern can now contain functions start “p” (https://github.com/DanChaltiel/crosstable/issues/10). percent_pattern actually taken account one single level (https://github.com/DanChaltiel/crosstable/issues/13). import_labels() now works even missing value dataframe. Minor bugfixes","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"crosstable-041-2022-02-19","dir":"Changelog","previous_headings":"","what":"crosstable 0.4.1 (2022-02-19)","title":"crosstable 0.4.1 (2022-02-19)","text":"CRAN release: 2022-02-25 Maintenance release fix CRAN errors.","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"crosstable-040-2022-02-14","dir":"Changelog","previous_headings":"","what":"crosstable 0.4.0 (2022-02-14)","title":"crosstable 0.4.0 (2022-02-14)","text":"CRAN release: 2022-02-14","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"new-features-0-4-0","dir":"Changelog","previous_headings":"","what":"New features","title":"crosstable 0.4.0 (2022-02-14)","text":"can now use basic markdown formats body_add_normal(): **bold**, *italic*, _underlined_, `code`. New keep_id argument compact.crosstable(), enables as_flextable(compact=TRUE, keep_id=TRUE) can use as_flextable(header_show_n_pattern) change glue pattern group sizes. default {.col} (N={.n}); can use {.col_key} {.col_val} multiple strata. Functions body_add_table_legend() body_add_figure_legend() earn argument legend_prefix. Useful set global options, instance make every table/figure start name study. crosstable_options() can handle new options new features.","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"improvements-0-4-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"crosstable 0.4.0 (2022-02-14)","text":"can now set normal style directly body_add_normal() (doable options ). Removed “variable” header compacted crosstables. Dataset mtcars2 now tibble, rownames column named “model”. as_flextable(by_header=FALSE) now removes group header (one stratum). as_flextable(header_show_n) now also works multiple strata. as_flextable(header_show_n=TRUE) adds group size groups.","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"bug-fixes-0-4-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"crosstable 0.4.0 (2022-02-14)","text":"Fixed bug numeric variables treated categorical (failed one NA value). Fixed bug caused body_add_normal() add extra empty paragraph reference text. Fixed bug body_add_normal() can used without argument. Fixed bug effect=TRUE groups present table() glm() due missing values.","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"crosstable-032-2021-11-27","dir":"Changelog","previous_headings":"","what":"crosstable 0.3.2 (2021-11-27)","title":"crosstable 0.3.2 (2021-11-27)","text":"CRAN release: 2021-11-27","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"new-features-0-3-2","dir":"Changelog","previous_headings":"","what":"New features","title":"crosstable 0.3.2 (2021-11-27)","text":"Global options management now easier thanks crosstable_options() autocompletion. Almost every argument can now set using options. See ?crosstable_options details. can also use crosstable_peek_options() see crosstable option currently set. New argument num_digits crosstable(). time! New argument header_show_n as_flextable(), adds group size (N=xx) header flextable. New arguments (global options) par_before par_after respectively body_add_table_legend() body_add_figure_legend(), add empty paragraph /legend (readability). New function {officer}: body_replace_text_at_bkms(), replace several bookmarks . New global option crosstable_options(crosstable_zero_percent=FALSE), removes percentages whenever n==0 (always 0%). add argument crosstable() one day…","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"improvements-0-3-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"crosstable 0.3.2 (2021-11-27)","text":"Better sorting numeric variables treated categorical (, 10 sorted 2). Removed labelled class caused many problems little improvement. See https://github.com/larmarange/labelled/issues/111.","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"bug-fixes-0-3-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"crosstable 0.3.2 (2021-11-27)","text":"fixed bug crosstable() occurring one funs ellipsis (…) funs_arg contains unused argument.","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"crosstable-031-2021-11-14","dir":"Changelog","previous_headings":"","what":"crosstable 0.3.1 (2021-11-14)","title":"crosstable 0.3.1 (2021-11-14)","text":"CRAN release: 2021-11-14","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"new-features-0-3-1","dir":"Changelog","previous_headings":"","what":"New features","title":"crosstable 0.3.1 (2021-11-14)","text":"New parameter percent_pattern replacement crosstable(margin=x) better control proportion format. Introduces possibility displaying confidence intervals (using Wilson score method) along proportions. New function body_add_crosstable_list() add list crosstables , separated customizable titles. Also works flextables plain old dataframes. New argument crosstable_padding_v as_flextable() manage vertical padding. Also available global option crosstable_padding_v. New global options crosstable_{arg} almost arguments. See ?crosstable_options details.","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"bug-fixes-0-3-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"crosstable 0.3.1 (2021-11-14)","text":"fixed bug as_flextable() occurring showNA=TRUE (header row disappearing) fixed bug occurring randomly, rounding caused format_fixed() return numeric value (“Error: Can’t combine ..1$value  ..2$value .”) crosstable now shows unused levels factor removed extra bold columns compacted crosstables displayed flextables","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"internal-0-3-1","dir":"Changelog","previous_headings":"","what":"Internal","title":"crosstable 0.3.1 (2021-11-14)","text":"renamed branch master main use lot snapshots tests","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"crosstable-022-2021-10-18","dir":"Changelog","previous_headings":"","what":"crosstable 0.2.2 (2021-10-18)","title":"crosstable 0.2.2 (2021-10-18)","text":"CRAN release: 2021-10-19","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"new-features-0-2-2","dir":"Changelog","previous_headings":"","what":"New features","title":"crosstable 0.2.2 (2021-10-18)","text":"Added support multiple ! can now write crosstable(mtcars, c(mpg, gear), =c(, vs)) %>% as_flextable(). Added macro can autofit every table document . macro can generated using function generate_autofit_macro() creates file imported MS Word. body_add_crosstable() gains padding_v argument control vertical padding rows. body_add_title() body_add_xxx_legend) gain glue functionality. can now write body_add_title(\"iris dataset (nrow={nrow(iris)})\", 1). as_workbook() can now take named list crosstables, considered sheets. New parameter percent format_fixed(percent=TRUE/FALSE) easily format percentages.","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"minor-changes-0-2-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"crosstable 0.2.2 (2021-10-18)","text":"style deprecated body_add_table_legend() body_add_image_legend() favor name_format. Changed behaviour effect calculations done column instead rows. might change outputs meaning. body_add_normal() now removes duplicated spaces (squish) input default. Use squish=FALSE override. docx_bookmarks2() gains target parameter.","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"bug-fixes-0-2-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"crosstable 0.2.2 (2021-10-18)","text":"effect calculation now takes account reference level (first level factor). body_add_crosstable() rightly takes body_fontsize header_fontsize account. Added warnings, know went wrong.","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"internal-0-2-2","dir":"Changelog","previous_headings":"","what":"Internal","title":"crosstable 0.2.2 (2021-10-18)","text":"burgled 2 functions using burglr::burgle() avoid dependency: nortest::ad.test() DescTools::CochranArmitageTest(). fixes bug breaking change testthat (https://github.com/DanChaltiel/crosstable/pull/3).","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"crosstable-021-2021-02-07","dir":"Changelog","previous_headings":"","what":"crosstable 0.2.1 (2021-02-07)","title":"crosstable 0.2.1 (2021-02-07)","text":"CRAN release: 2021-03-08 First version CRAN Improved functions naming funs, especially multiple combinations named unnamed functions, including lambda anonymous Use simplify=FALSE get_label() get list instead vector","code":""},{"path":[]},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"misc-0-2-0","dir":"Changelog","previous_headings":"","what":"Misc","title":"crosstable 0.2.0 (2021-02-02)","text":"added lots global options easier implementation. See ?crosstable_options comprehensive list. added label helpers: apply_labels() (inspired expss’s), copy_label_from() rename_dataframe_with_labels() added as_workbook() export crosstable formatted openxlsx Excel workbook, copypasting purpose. added peek() open crosstable temporary Word document, copy-pasting RStudio’s viewer limited. fixed bug columns contained “NA” (string) <NA> (missing). fixed bug function funs found declared another environment. numerous minor bugfixes internal improvements.","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"officer-0-2-0","dir":"Changelog","previous_headings":"","what":"Officer","title":"crosstable 0.2.0 (2021-02-02)","text":"added cross-reference functionality body_add_figure_legend() body_add_table_legend(). Use bookmark argument set reference, write \"\\\\@ref(my_bkm)\" inside body_add_normal() call . added docx helpers add lists: body_add_list() body_add_list_item(). unfortunately work default officer template. added alternatives officer functions: docx_bookmarks2(), list bookmarks found header footer well body_add_img2(), body_add_gg2(), win units=c(\"\", \"cm\", \"mm\") argument write_and_open(), alternative print() documents, tries open right away.","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"deprecations-0-2-0","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"crosstable 0.2.0 (2021-02-02)","text":"Ellipsis (...) use crosstable() deprecated “tidy” syntax. Write crosstable(mtcars2, c(disp, vs)) instead crosstable(mtcars2, disp, vs). Ellipsis defunct future v1.0. crosstable(.vars=) renamed crosstable(cols=). moystd() renamed meansd(). body_add_glued() superseded body_add_normal(), inherits functionalities .","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"crosstable-015-2020-08-02","dir":"Changelog","previous_headings":"","what":"crosstable 0.1.5 (2020-08-02)","title":"crosstable 0.1.5 (2020-08-02)","text":"added minimal support gt tables (as_gt()) like better flextables improved working officer: added body_add_figure_legend() fontsize options body_add_crosstable()","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"crosstable-014-2020-07-16","dir":"Changelog","previous_headings":"","what":"crosstable 0.1.4 (2020-07-16)","title":"crosstable 0.1.4 (2020-07-16)","text":"added save_labels() ease working dplyr added meanCI() additional summary function use crosstable()’s funs argument improved support Date variables multiple, numerous bug fixes renamed moystd() meansd()","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"crosstable-013-2020-06-29","dir":"Changelog","previous_headings":"","what":"crosstable 0.1.3 (2020-06-29)","title":"crosstable 0.1.3 (2020-06-29)","text":"Added support description Date variables. Format can specified funs_arg date_format key. Removed dependencies ease installation","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"crosstable-012-2020-06-10","dir":"Changelog","previous_headings":"","what":"crosstable 0.1.2 (2020-06-10)","title":"crosstable 0.1.2 (2020-06-10)","text":"Effect refactoring: better error/warning handling Name sanitation: replacing “.” “_” function names Better error messages Bug fixes","code":""},{"path":[]},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"new-features-and-behaviors-0-1-1","dir":"Changelog","previous_headings":"","what":"New features and behaviors","title":"crosstable 0.1.1 (2020-06-07)","text":"Added format_fixed(), rounding right number decimals (including zeros) Added import_labels(), apply labels taken source dataframe (name, label) another dataframe Added margin=\"none\" option, remove percentages keep counts Columns unsupported class dropped warning instead failing error","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"misc-0-1-1","dir":"Changelog","previous_headings":"","what":"Misc","title":"crosstable 0.1.1 (2020-06-07)","text":"Method cross_to_flextable() (ctf()) deprecated renamed as_flextable() (#207) Reexporting pipes tidyselect helpers user load libraries Computing time optimization (speed x2.6!) Fixed bug normality testing Fixed bug compact()","code":""},{"path":"https://danchaltiel.github.io/crosstable/news/index.html","id":"crosstable-010-2020-04-09","dir":"Changelog","previous_headings":"","what":"crosstable 0.1.0 (2020-04-09)","title":"crosstable 0.1.0 (2020-04-09)","text":"First release, big changes biostat2 package.","code":""}]
